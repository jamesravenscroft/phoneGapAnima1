{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _slicedToArray from\"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Component}from\"react\";import\"./board.css\";import\"./boardCards.css\";import{DragDropContext,Droppable,Draggable}from'../../../node_modules/react-beautiful-dnd';import API from'../../utils/API';import{isUndefined}from\"util\";import GameOver from'../gameOver/gameOver';var reorder=function reorder(list,startIndex,endIndex){var result=Array.from(list);var _result$splice=result.splice(startIndex,1),_result$splice2=_slicedToArray(_result$splice,1),removed=_result$splice2[0];result.splice(endIndex,0,removed);return result;};/**\n* Moves an item from one list to another list. this function is working as expected\n*/var move=function move(source,destination,droppableSource,droppableDestination){var sourceClone=Array.from(source);var destClone=Array.from(destination);var _sourceClone$splice=sourceClone.splice(droppableSource.index,1),_sourceClone$splice2=_slicedToArray(_sourceClone$splice,1),removed=_sourceClone$splice2[0];destClone.splice(droppableDestination.index,0,removed);var result={};result[droppableSource.droppableId]=sourceClone;result[droppableDestination.droppableId]=destClone;return result;};var GameBoard=/*#__PURE__*/function(_Component){_inherits(GameBoard,_Component);function GameBoard(props){var _this;_classCallCheck(this,GameBoard);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameBoard).call(this,props));_this.componentDidMount=function(){// var audio = new Audio('./sounds/attack.mp3');\n// audio.play();\nAPI.joinGame(function(updates){console.log(updates);console.log(_this.state);if(_this.state.currentPlayerTurn!==updates.currentPlayerTurn){window.changeTurn();var modal=document.getElementById(\"myModal\");setTimeout(function(){modal.style.display=\"block\";},300);setTimeout(function(){modal.style.display=\"none\";},2500);}if(updates.playerDisconnected===true){var _modal=document.getElementById(\"myModalQuit\");setTimeout(function(){_modal.style.display=\"block\";},300);setTimeout(function(){window.location.reload();},3000);}if(updates.playerAField&&updates.playerAField.length>0&&_this.state.playerAField.length>0&&updates.playerAField.length===_this.state.playerAField.length&&_this.state.currentPlayerTurn===updates.currentPlayerTurn){for(var i=0;i<updates.playerAField.length;i++){var attackACard=false;if(_this.state.playerAField[i].Health!==updates.playerAField[i].Health){attackACard=true;}if(attackACard){window.attack();}}}if(updates.playerBField&&updates.playerBField.length>0&&_this.state.playerBField.length>0&&updates.playerBField.length===_this.state.playerBField.length&&_this.state.currentPlayerTurn===updates.currentPlayerTurn){for(var _i=0;_i<updates.playerBField.length;_i++){var _attackACard=false;if(_this.state.playerBField[_i].Health!==updates.playerBField[_i].Health){_attackACard=true;}if(_attackACard){window.attack();}}}if(updates.player1&&updates.player2){if(updates.playerAField&&updates.playerAField.length>_this.state.playerAField.length||updates.playerBField&&updates.playerBField.length>_this.state.playerBField.length){window.playCard1();}if(updates.playerAField&&updates.playerAField.length<_this.state.playerAField.length||updates.playerBField&&updates.playerBField.length<_this.state.playerBField.length){window.death();}if(updates.playerAChamp&&updates.playerAChamp!==_this.state.playerAChamp||updates.playerBChamp&&updates.playerBChamp!==_this.state.playerBChamp){//seems like other sounds are getting triggered\nwindow.championAttack();}if(updates.playerAMana===0){_this.setState({playerAChamp:updates.playerAChamp||_this.state.playerAChamp,playerAHand:updates.playerAHand||_this.state.playerAHand,playerAField:updates.playerAField||_this.state.playerAField,playerAGraveyard:updates.playerAGraveyard||_this.state.playerAGraveyard,playerBChamp:updates.playerBChamp||_this.state.playerBChamp,playerBHand:updates.playerBHand||_this.state.playerBHand,playerBField:updates.playerBField||_this.state.playerBField,playerBGraveyard:updates.playerBGraveyard||_this.state.playerBGraveyard,playerATurn:_this.state.playerATurn,playerBturn:_this.state.playerBturn,playerAMana:updates.playerAMana,playerBMana:updates.playerBMana||_this.state.playerBMana,aMaxMana:updates.aMaxMana||_this.state.aMaxMana,bMaxMana:updates.bMaxMana||_this.state.bMaxMana,currentPlayerTurn:updates.currentPlayerTurn||_this.props.p1name});}else if(updates.playerBMana===0){_this.setState({playerAChamp:updates.playerAChamp||_this.state.playerAChamp,playerAHand:updates.playerAHand||_this.state.playerAHand,playerAField:updates.playerAField||_this.state.playerAField,playerAGraveyard:updates.playerAGraveyard||_this.state.playerAGraveyard,playerBChamp:updates.playerBChamp||_this.state.playerBChamp,playerBHand:updates.playerBHand||_this.state.playerBHand,playerBField:updates.playerBField||_this.state.playerBField,playerBGraveyard:updates.playerBGraveyard||_this.state.playerBGraveyard,playerATurn:_this.state.playerATurn,playerBturn:_this.state.playerBturn,playerAMana:updates.playerAMana||_this.state.playerAMana,playerBMana:updates.playerBMana,aMaxMana:updates.aMaxMana||_this.state.aMaxMana,bMaxMana:updates.bMaxMana||_this.state.bMaxMana,currentPlayerTurn:updates.currentPlayerTurn||_this.props.p1name});}else if(updates.playerATurn||updates.playerBturn){_this.setState({playerAChamp:updates.playerAChamp||_this.state.playerAChamp,playerAHand:updates.playerAHand||_this.state.playerAHand,playerAField:updates.playerAField||_this.state.playerAField,playerAGraveyard:updates.playerAGraveyard||_this.state.playerAGraveyard,playerBChamp:updates.playerBChamp||_this.state.playerBChamp,playerBHand:updates.playerBHand||_this.state.playerBHand,playerBField:updates.playerBField||_this.state.playerBField,playerBGraveyard:updates.playerBGraveyard||_this.state.playerBGraveyard,playerATurn:updates.playerATurn,playerBturn:updates.playerBturn,playerAMana:updates.playerAMana||_this.state.playerAMana,playerBMana:updates.playerBMana||_this.state.playerBMana,aMaxMana:updates.aMaxMana||_this.state.aMaxMana,bMaxMana:updates.bMaxMana||_this.state.bMaxMana,currentPlayerTurn:updates.currentPlayerTurn||_this.props.p1name});}else{_this.setState({playerAChamp:updates.playerAChamp||_this.state.playerAChamp,playerAHand:updates.playerAHand||_this.state.playerAHand,playerAField:updates.playerAField||_this.state.playerAField,playerAGraveyard:updates.playerAGraveyard||_this.state.playerAGraveyard,playerBChamp:updates.playerBChamp||_this.state.playerBChamp,playerBHand:updates.playerBHand||_this.state.playerBHand,playerBField:updates.playerBField||_this.state.playerBField,playerBGraveyard:updates.playerBGraveyard||_this.state.playerBGraveyard,playerATurn:_this.state.playerATurn,playerBturn:_this.state.playerBturn,playerAMana:updates.playerAMana||_this.state.playerAMana,playerBMana:updates.playerBMana||_this.state.playerBMana,aMaxMana:updates.aMaxMana||_this.state.aMaxMana,bMaxMana:updates.bMaxMana||_this.state.bMaxMana,currentPlayerTurn:updates.currentPlayerTurn||_this.props.p1name});}}});};_this.changeATurn=function(){if(_this.state.playerATurn===false){return;}else{var currentAMaxMana=_this.state.aMaxMana;var newMana;var modal=document.getElementById(\"myModal\");if(currentAMaxMana<=45){currentAMaxMana+=5;newMana=currentAMaxMana;API.changeAsTurn(currentAMaxMana,newMana,_this.state.player1name);}else{currentAMaxMana=50;newMana=currentAMaxMana;API.changeAsTurn(currentAMaxMana,newMana,_this.state.player1name);}}};_this.changeBTurn=function(){if(_this.state.playerBturn===false){return;}else{var currentBMaxMana=_this.state.bMaxMana;var newMana;if(currentBMaxMana<=45){currentBMaxMana+=5;newMana=currentBMaxMana;API.changeBsTurn(currentBMaxMana,newMana,_this.state.player2name);}else{currentBMaxMana=50;newMana=currentBMaxMana;API.changeBsTurn(currentBMaxMana,newMana,_this.state.player2name);}}};_this.getList=function(id){return _this.state[_this.id2List[id]];};_this.onDragEnd=function(result){var source=result.source,destination=result.destination;// dropped outside the list\nif(!destination){return;}if(source.droppableId>0&&destination.droppableId===\"fieldA\"){return;}if(source.droppableId>0&&destination.droppableId===\"fieldB\"){return;}if(source.droppableId===\"fieldB\"&&destination.droppableId===\"fieldB\"){return;}//playing a card for top player\nif(source.droppableId===\"playerHandA\"&&destination.droppableId===\"fieldA\"&&_this.state.playerATurn===true){var currentMana=_this.state.playerAMana;if(currentMana>=10){var _result=move(_this.getList(source.droppableId),_this.getList(destination.droppableId),source,destination);currentMana-=10;var _playerAField=_result.fieldA;var playerAHand=_result.playerHandA;var _playerAMana=currentMana;API.playAHand(_playerAField,playerAHand,_playerAMana);}else{var modal=document.getElementById(\"myModalManaPlay\");setTimeout(function(){modal.style.display=\"block\";},300);setTimeout(function(){modal.style.display=\"none\";},2500);}}//playing a card for bottom player\nif(source.droppableId===\"playerHandB\"&&destination.droppableId===\"fieldB\"&&_this.state.playerBturn===true){var _currentMana=_this.state.playerBMana;if(_currentMana>=10){var _result2=move(_this.getList(source.droppableId),_this.getList(destination.droppableId),source,destination);_currentMana-=10;var _playerBField=_result2.fieldB;var playerBHand=_result2.playerHandB;var _playerBMana=_currentMana;var name=_this.state.player1name;API.playBHand(_playerBField,playerBHand,_playerBMana,name);}else{var _modal2=document.getElementById(\"myModalManaPlay\");setTimeout(function(){_modal2.style.display=\"block\";},300);setTimeout(function(){_modal2.style.display=\"none\";},2500);}}//attacking player A Champion\nif(source.droppableId!==\"playerHandB\"&&destination.droppableId===\"playerChampionA\"){if(_this.state.playerBturn){var playerBField=_this.state.playerBField;var playerBMana=_this.state.playerBMana;var playerAChampion=_this.state.playerAChamp;var playerBGraveyard=_this.state.playerBGraveyard;var attackingCardIndex;var defendingCardIndex=0;if(playerBMana>=9){for(var i=0;i<playerBField.length;i++){if(playerBField[i].id===result.source.droppableId){attackingCardIndex=i;}}if(attackingCardIndex===undefined){return;}else{var attackingCardType=playerBField[attackingCardIndex].TypeText;var defendingCardWeakness=playerAChampion[defendingCardIndex].WeakAgainstText;var defendingCardStrength=playerAChampion[defendingCardIndex].StrongAgainstText;if(attackingCardType===defendingCardWeakness){playerAChampion[0].Health-=10;playerBMana-=9;}else if(attackingCardType===defendingCardStrength){playerAChampion[0].Health-=3;playerBField[attackingCardIndex].Health-=3;playerBMana-=9;}else{playerAChampion[0].Health-=6;playerBMana-=9;}if(playerBField[attackingCardIndex].Health<=0){var removedBCard=playerBField.splice(attackingCardIndex,1);playerBGraveyard.push(removedBCard);}window.attack();API.attackAChampion(playerAChampion,playerBField,playerBMana,playerBGraveyard);}}else{//not enough mana\nvar _modal3=document.getElementById(\"myModalManaAttack\");setTimeout(function(){_modal3.style.display=\"block\";},300);setTimeout(function(){_modal3.style.display=\"none\";},2500);}}}//attacking playerB Champ\nif(source.droppableId!==\"playerHandA\"&&destination.droppableId===\"playerChampionB\"){if(_this.state.playerATurn){var playerAField=_this.state.playerAField;var playerAMana=_this.state.playerAMana;var playerBChampion=_this.state.playerBChamp;var playerAGraveyard=_this.state.playerAGraveyard;var attackingCardIndex;var defendingCardIndex=0;if(playerAMana>=9){for(var i=0;i<playerAField.length;i++){if(playerAField[i].id===result.source.droppableId){attackingCardIndex=i;}}if(attackingCardIndex===undefined){return;}else{var attackingCardType=playerAField[attackingCardIndex].TypeText;var defendingCardWeakness=playerBChampion[defendingCardIndex].WeakAgainstText;var defendingCardStrength=playerBChampion[defendingCardIndex].StrongAgainstText;if(attackingCardType===defendingCardWeakness){playerBChampion[0].Health-=10;playerAMana-=9;}else if(attackingCardType===defendingCardStrength){playerBChampion[0].Health-=3;playerAField[attackingCardIndex].Health-=3;playerAMana-=9;}else{playerBChampion[0].Health-=6;playerAMana-=9;}if(playerAField[attackingCardIndex].Health<=0){var removedACard=playerAField.splice(attackingCardIndex,1);playerAGraveyard.push(removedACard);}window.attack();API.attackBChampion(playerBChampion,playerAField,playerAMana,playerAGraveyard);}}else{//some popup saying you do not have enough mana\nvar _modal4=document.getElementById(\"myModalManaAttack\");setTimeout(function(){_modal4.style.display=\"block\";},300);setTimeout(function(){_modal4.style.display=\"none\";},2500);}}}//attacking a minion\nif(destination.droppableId!==\"playerChampionA\"&&destination.droppableId!==\"playerChampionB\"&&source.droppableId!==\"fieldA\"&&source.droppableId!==\"fieldB\"&&source.droppableId!==\"playerHandA\"&&source.droppableId!==\"playerHandB\"){if(_this.state.playerATurn){var playerAField=_this.state.playerAField;var playerBField=_this.state.playerBField;var playerAMana=_this.state.playerAMana;var playerBGraveyard=_this.state.playerBGraveyard;var playerAGraveyard=_this.state.playerAGraveyard;var attackingCardIndex;var defendingCardIndex;if(playerAMana>=9){for(var i=0;i<playerAField.length;i++){if(playerAField[i].id===result.source.droppableId){attackingCardIndex=i;}}for(var j=0;j<playerBField.length;j++){if(playerBField[j].id===result.destination.droppableId){defendingCardIndex=j;}}if(defendingCardIndex===undefined){return;}else if(attackingCardIndex===undefined){}else{var attackingCardType=playerAField[attackingCardIndex].TypeText;var defendingCardWeakness=playerBField[defendingCardIndex].WeakAgainst;var defendingCardStrength=playerBField[defendingCardIndex].StrongAgainst;if(attackingCardType===defendingCardWeakness){playerBField[defendingCardIndex].Health-=10;playerAMana-=9;}else if(attackingCardType===defendingCardStrength){playerBField[defendingCardIndex].Health-=3;playerAField[attackingCardIndex].Health-=3;playerAMana-=9;}else{playerBField[defendingCardIndex].Health-=6;playerAMana-=9;}if(playerBField[defendingCardIndex].Health<=0){var removedBCard=playerBField.splice(defendingCardIndex,1);playerBGraveyard.push(removedBCard);}if(playerAField[attackingCardIndex].Health<=0){var removedACard=playerAField.splice(attackingCardIndex,1);playerAGraveyard.push(removedACard);}window.attack();API.attackBMinion(playerAField,playerBField,playerAMana,playerBGraveyard,playerAGraveyard);}}else{//add some modal to say out of mana\nvar _modal5=document.getElementById(\"myModalManaAttack\");setTimeout(function(){_modal5.style.display=\"block\";},300);setTimeout(function(){_modal5.style.display=\"none\";},2500);}}//player B's turn\nelse{var playerAField=_this.state.playerAField;var playerBField=_this.state.playerBField;var playerBMana=_this.state.playerBMana;var playerAGraveyard=_this.state.playerAGraveyard;var playerBGraveyard=_this.state.playerBGraveyard;var attackingCardIndex;var defendingCardIndex;if(playerBMana>=9){for(var i=0;i<playerBField.length;i++){if(playerBField[i].id===result.source.droppableId){attackingCardIndex=i;}}for(var j=0;j<playerAField.length;j++){if(playerAField[j].id===result.destination.droppableId){defendingCardIndex=j;}}if(defendingCardIndex===undefined){return;}else if(attackingCardIndex===undefined){}else{var attackingCardType=playerBField[attackingCardIndex].TypeText;var defendingCardWeakness=playerAField[defendingCardIndex].WeakAgainst;var defendingCardStrength=playerAField[defendingCardIndex].StrongAgainst;if(attackingCardType===defendingCardWeakness){playerAField[defendingCardIndex].Health-=10;playerBMana-=9;}else if(attackingCardType===defendingCardStrength){playerAField[defendingCardIndex].Health-=3;playerBField[attackingCardIndex].Health-=3;playerBMana-=9;}else{playerAField[defendingCardIndex].Health-=6;playerBMana-=9;}if(playerAField[defendingCardIndex].Health<=0){var removedACard=playerAField.splice(defendingCardIndex,1);playerAGraveyard.push(removedACard);}if(playerBField[attackingCardIndex].Health<=0){var removedBCard=playerBField.splice(attackingCardIndex,1);playerBGraveyard.push(removedBCard);}window.attack();API.attackAMinion(playerBField,playerAField,playerBMana,playerAGraveyard,playerBGraveyard);}}else{//add some modal to say out of mana\nvar _modal6=document.getElementById(\"myModalManaAttack\");setTimeout(function(){_modal6.style.display=\"block\";},300);setTimeout(function(){_modal6.style.display=\"none\";},2500);}}}};_this.state={playerAChamp:_this.props.p2champ,playerAHand:_this.props.p2deck,playerAField:[],playerAGraveyard:[],playerBChamp:_this.props.p1champ,playerBHand:_this.props.p1deck,playerBField:[],playerBGraveyard:[],playerATurn:false,playerBturn:true,playerAMana:20,playerBMana:20,aMaxMana:20,bMaxMana:20,player1name:_this.props.p1name,player2name:_this.props.p2name,currentPlayerTurn:_this.props.p1name,isAttacked:false,isKilled:false};_this.id2List={playerHandA:'playerAHand',fieldA:'playerAField',playerHandB:'playerBHand',fieldB:'playerBField'};return _this;}_createClass(GameBoard,[{key:\"render\",value:function render(){var _this2=this;if(this.state.playerAChamp[0].Health<=0||this.state.playerAField.length===0&&this.state.playerAHand.length===0){return React.createElement(GameOver,{value:this.state,winner:'playerB',player1:this.state.player1name,player2:this.state.player2name});}else if(this.state.playerBChamp[0].Health<=0||this.state.playerBField.length===0&&this.state.playerBHand.length===0){return React.createElement(GameOver,{value:this.state,winner:'playerA',player1:this.state.player1name,player2:this.state.player2name});}else return React.createElement(DragDropContext,{onDragEnd:this.onDragEnd},React.createElement(\"div\",{className:\"outerContainer\"},React.createElement(\"div\",{className:\"containerA\"},React.createElement(\"div\",{className:\"rowA\"},React.createElement(\"div\",{className:\"playerNameA\"},this.state.player2name),React.createElement(\"div\",{className:\"playerManaA\"},this.state.playerAMana),React.createElement(\"div\",{className:\"endTurnA\",onClick:this.changeATurn},\"End Turn\"),React.createElement(Droppable,{droppableId:\"playerChampionA\"},function(provided){return React.createElement(\"div\",{className:\"championA\",ref:provided.innerRef},_this2.state.playerAChamp.map(function(champion){return React.createElement(\"div\",{className:\"playedChampionCard\",id:champion.id,key:champion.id},React.createElement(\"p\",{className:\"playedChampionHealth\"},champion.Health||2),React.createElement(\"img\",{className:\"playedChampionWeakness\",src:champion.WeakAgainst,alt:\"\",width:\"42\",height:\"1\"}),React.createElement(\"img\",{className:\"playedChampionStrength\",src:champion.StrongAgainst,alt:\"\",width:\"5\",height:\"1\"}),React.createElement(\"img\",{className:\"playedChampionPortrait\",src:champion.Img,alt:\"\"}));}),provided.placeholder);}),React.createElement(Droppable,{droppableId:\"playerHandA\"},function(provided){return React.createElement(\"div\",{className:\"playerHandA\",ref:provided.innerRef},_this2.state.playerAHand.map(function(minion,index){return React.createElement(Draggable,{key:minion.id,draggableId:minion.id,index:index},function(provided){return React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.draggableProps,provided.dragHandleProps,{className:\"minionHandCardA\",id:minion.id,key:minion.id}),React.createElement(\"h3\",{className:\"MinionHandName\"},minion.Name||\"Minion\"),React.createElement(\"p\",{className:\"minionHandHealth\"},minion.Health||2),React.createElement(\"div\",{className:\"ability\"},React.createElement(\"span\",{className:\"minionHandAttack1\"},minion.Attack1Name||\"Ability 1\"),React.createElement(\"span\",{className:\"minionHandAttack1Power\"},React.createElement(\"br\",null),\"Dmg: \",minion.Attack1Power),React.createElement(\"span\",{className:\"minionHandAttack1Cost\"},\"Cost: \",minion.Attack1Cost)),React.createElement(\"img\",{className:\"minionHandWeakness\",src:minion.WeakAgainstImg,alt:\"\",width:\"42\",height:\"1\"}),React.createElement(\"img\",{className:\"minionHandStrength\",src:minion.StrongAgainstImg,alt:\"\",width:\"5\",height:\"1\"}),React.createElement(\"img\",{className:\"minionHandPortrait\",src:minion.Img,alt:\"\"}));});}),provided.placeholder);})),React.createElement(Droppable,{droppableId:\"fieldA\"},function(provided){return React.createElement(\"div\",{className:\"fieldA\",ref:provided.innerRef},_this2.state.playerAField.map(function(minion,index){return React.createElement(Droppable,{droppableId:minion.id,key:minion.id},function(provided){return React.createElement(\"div\",{className:\"droppableMinion\",ref:provided.innerRef,key:minion.id},React.createElement(Draggable,{key:minion.id,draggableId:minion.id,index:index},function(provided){return React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.draggableProps,provided.dragHandleProps,{className:\"minionFieldCardA\",id:minion.id,key:minion.id}),React.createElement(\"div\",{className:\"innerA\"},React.createElement(\"p\",{className:\"minionFieldHealth\"},minion.Health||2),React.createElement(\"div\",{className:\"abilityField\"},React.createElement(\"span\",{className:\"minionFieldAttack1\"},minion.Attack1Name||\"Ability 1\"),React.createElement(\"span\",{className:\"minionFieldAttack1Power\"},React.createElement(\"br\",null),minion.Attack1Power),React.createElement(\"span\",{className:\"minionFieldAttack1Cost\"},minion.Attack1Cost)),React.createElement(\"img\",{className:\"minionFieldWeakness\",src:minion.WeakAgainstImg,alt:\"\",width:\"42\",height:\"1\"}),React.createElement(\"img\",{className:\"minionFieldStrength\",src:minion.StrongAgainstImg,alt:\"\",width:\"5\",height:\"1\"}),React.createElement(\"img\",{className:\"minionFieldPortrait\",src:minion.Img,alt:\"\"})));}),provided.placeholder);});}),provided.placeholder);})),React.createElement(\"div\",{id:\"myModal\",class:\"modal\"},React.createElement(\"div\",{class:\"modal-content\"},React.createElement(\"p\",null,this.state.currentPlayerTurn+\"'s Turn\"))),React.createElement(\"div\",{id:\"myModalManaPlay\",class:\"modal\"},React.createElement(\"div\",{class:\"modal-content\"},React.createElement(\"p\",null,\"You need at least 10 mana to play a card\"))),React.createElement(\"div\",{id:\"myModalManaAttack\",class:\"modal\"},React.createElement(\"div\",{class:\"modal-content\"},React.createElement(\"p\",null,\"You need at least 9 mana to attack a card\"))),React.createElement(\"div\",{id:\"myModalQuit\",class:\"modal\"},React.createElement(\"div\",{class:\"modal-content\"},React.createElement(\"p\",null,\"Player Disconnected, heading to lobby\"))),React.createElement(\"div\",{className:\"containerB\"},React.createElement(Droppable,{droppableId:\"fieldB\"},function(provided){return React.createElement(\"div\",{className:\"fieldB\",ref:provided.innerRef},_this2.state.playerBField.map(function(minion,index){return React.createElement(Droppable,{droppableId:minion.id,key:minion.id},function(provided){return React.createElement(\"div\",{className:\"droppableMinion\",ref:provided.innerRef,key:minion.id},React.createElement(Draggable,{key:minion.id,draggableId:minion.id,index:index},function(provided){return React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.draggableProps,provided.dragHandleProps,{className:\"minionFieldCardB\",id:minion.id,key:minion.id}),React.createElement(\"div\",{className:\"innerB\"},React.createElement(\"p\",{className:\"minionFieldHealth\"},minion.Health||2),React.createElement(\"div\",{className:\"abilityField\"},React.createElement(\"span\",{className:\"minionFieldAttack1\"},minion.Attack1Name||\"Ability 1\"),React.createElement(\"span\",{className:\"minionFieldAttack1Power\"},React.createElement(\"br\",null),minion.Attack1Power),React.createElement(\"span\",{className:\"minionFieldAttack1Cost\"},minion.Attack1Cost)),React.createElement(\"img\",{className:\"minionFieldWeakness\",src:minion.WeakAgainstImg,alt:\"\",width:\"42\",height:\"1\"}),React.createElement(\"img\",{className:\"minionFieldStrength\",src:minion.StrongAgainstImg,alt:\"\",width:\"5\",height:\"1\"}),React.createElement(\"img\",{className:\"minionFieldPortrait\",src:minion.Img,alt:\"\"})));}),provided.placeholder);});}),provided.placeholder);}),React.createElement(\"div\",{className:\"rowB\"},React.createElement(\"div\",{className:\"endTurnB\",onClick:this.changeBTurn},\"End Turn\"),React.createElement(\"div\",{className:\"playerManaB\"},this.state.playerBMana),React.createElement(\"div\",{className:\"playerNameB\"},this.state.player1name),React.createElement(Droppable,{droppableId:\"playerChampionB\"},function(provided){return React.createElement(\"div\",{className:\"championB\",ref:provided.innerRef},_this2.state.playerBChamp.map(function(champion){return React.createElement(\"div\",{className:\"playedChampionCard\",id:champion.id,key:champion.id},React.createElement(\"p\",{className:\"playedChampionHealth\"},champion.Health||2),React.createElement(\"img\",{className:\"playedChampionWeakness\",src:champion.WeakAgainst,alt:\"\",width:\"42\",height:\"1\"}),React.createElement(\"img\",{className:\"playedChampionStrength\",src:champion.StrongAgainst,alt:\"\",width:\"5\",height:\"1\"}),React.createElement(\"img\",{className:\"playedChampionPortrait\",src:champion.Img,alt:\"\"}));}),provided.placeholder);}),React.createElement(Droppable,{droppableId:\"playerHandB\"},function(provided){return React.createElement(\"div\",{className:\"playerHandB\",ref:provided.innerRef},_this2.state.playerBHand.map(function(minion,index){return React.createElement(Draggable,{key:minion.id,draggableId:minion.id,index:index},function(provided){return React.createElement(\"div\",Object.assign({ref:provided.innerRef},provided.draggableProps,provided.dragHandleProps,{className:\"minionHandCardB\",id:minion.id,key:minion.id}),React.createElement(\"h3\",{className:\"MinionHandName\"},minion.Name||\"Minion\"),React.createElement(\"p\",{className:\"minionHandHealth\"},minion.Health||2),React.createElement(\"div\",{className:\"ability\"},React.createElement(\"span\",{className:\"minionHandAttack1\"},minion.Attack1Name||\"Ability 1\"),React.createElement(\"span\",{className:\"minionHandAttack1Power\"},React.createElement(\"br\",null),\"Dmg: \",minion.Attack1Power),React.createElement(\"span\",{className:\"minionHandAttack1Cost\"},\"Cost: \",minion.Attack1Cost)),React.createElement(\"img\",{className:\"minionHandWeakness\",src:minion.WeakAgainstImg,alt:\"\",width:\"42\",height:\"1\"}),React.createElement(\"img\",{className:\"minionHandStrength\",src:minion.StrongAgainstImg,alt:\"\",width:\"5\",height:\"1\"}),React.createElement(\"img\",{className:\"minionHandPortrait\",src:minion.Img,alt:\"\"}));});}),provided.placeholder);})))));}}]);return GameBoard;}(Component);export default GameBoard;","map":{"version":3,"sources":["C:/Users/jrave/Desktop/BusinessSites/Animalchemists/phoneGapAnima1/src/components/board/board.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","API","isUndefined","GameOver","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","GameBoard","props","componentDidMount","joinGame","updates","console","log","state","currentPlayerTurn","window","changeTurn","modal","document","getElementById","setTimeout","style","display","playerDisconnected","location","reload","playerAField","length","i","attackACard","Health","attack","playerBField","player1","player2","playCard1","death","playerAChamp","playerBChamp","championAttack","playerAMana","setState","playerAHand","playerAGraveyard","playerBHand","playerBGraveyard","playerATurn","playerBturn","playerBMana","aMaxMana","bMaxMana","p1name","changeATurn","currentAMaxMana","newMana","changeAsTurn","player1name","changeBTurn","currentBMaxMana","changeBsTurn","player2name","getList","id","id2List","onDragEnd","currentMana","fieldA","playerHandA","playAHand","fieldB","playerHandB","name","playBHand","playerAChampion","attackingCardIndex","defendingCardIndex","undefined","attackingCardType","TypeText","defendingCardWeakness","WeakAgainstText","defendingCardStrength","StrongAgainstText","removedBCard","push","attackAChampion","playerBChampion","removedACard","attackBChampion","j","WeakAgainst","StrongAgainst","attackBMinion","attackAMinion","p2champ","p2deck","p1champ","p1deck","p2name","isAttacked","isKilled","provided","innerRef","map","champion","Img","placeholder","minion","draggableProps","dragHandleProps","Name","Attack1Name","Attack1Power","Attack1Cost","WeakAgainstImg","StrongAgainstImg"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./board.css\";\nimport \"./boardCards.css\";\nimport { DragDropContext, Droppable, Draggable } from '../../../node_modules/react-beautiful-dnd';\nimport API from '../../utils/API';\nimport { isUndefined } from \"util\";\nimport GameOver from '../gameOver/gameOver'\n\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n    const sourceClone = Array.from(source);\n\n    const destClone = Array.from(destination);\n\n\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n};\n\nclass GameBoard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerAChamp: this.props.p2champ,\n            playerAHand: this.props.p2deck,\n            playerAField: [],\n            playerAGraveyard: [],\n            playerBChamp: this.props.p1champ,\n            playerBHand: this.props.p1deck,\n            playerBField: [],\n            playerBGraveyard: [],\n            playerATurn: false,\n            playerBturn: true,\n            playerAMana: 20,\n            playerBMana: 20,\n            aMaxMana: 20,\n            bMaxMana: 20,\n            player1name: this.props.p1name,\n            player2name: this.props.p2name,\n            currentPlayerTurn: this.props.p1name,\n            isAttacked: false,\n            isKilled: false\n        }\n\n\n        this.id2List = {\n            playerHandA: 'playerAHand',\n            fieldA: 'playerAField',\n            playerHandB: 'playerBHand',\n            fieldB: 'playerBField',\n        };\n    }\n\n    componentDidMount = () => {\n        // var audio = new Audio('./sounds/attack.mp3');\n        // audio.play();\n        API.joinGame(updates => {\n            console.log(updates);\n            console.log(this.state)\n            if(this.state.currentPlayerTurn !== updates.currentPlayerTurn){\n                window.changeTurn()\n                let modal = document.getElementById(\"myModal\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n            if (updates.playerDisconnected === true){\n                let modal = document.getElementById(\"myModalQuit\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                \n                setTimeout(function(){window.location.reload()}, 3000)\n            }\n\n            if (updates.playerAField && updates.playerAField.length > 0 && this.state.playerAField.length > 0 && updates.playerAField.length === this.state.playerAField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn){\n                \n                for (let i = 0; i < updates.playerAField.length; i++){\n                    \n                    let attackACard = false\n                    if (this.state.playerAField[i].Health !== updates.playerAField[i].Health){\n                        attackACard = true\n                    }\n                    if (attackACard){\n                        \n                        window.attack()\n                    }\n                \n                }}\n\n                \n                if (updates.playerBField && updates.playerBField.length > 0 && this.state.playerBField.length > 0 && updates.playerBField.length === this.state.playerBField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn) {\n                \n                \n                for (let i = 0; i < updates.playerBField.length; i++){\n                    \n                    let attackACard = false\n                    if (this.state.playerBField[i].Health !== updates.playerBField[i].Health){\n                        attackACard = true\n                    }\n                    if (attackACard){\n                        \n                        window.attack()\n                    }\n                }\n                }\n            \n            if (updates.player1 && updates.player2) {\n                \n                if (updates.playerAField && updates.playerAField.length > this.state.playerAField.length  || updates.playerBField && updates.playerBField.length > this.state.playerBField.length){\n                    \n                    window.playCard1()\n                    \n                }\n                if (updates.playerAField && updates.playerAField.length < this.state.playerAField.length  || updates.playerBField && updates.playerBField.length < this.state.playerBField.length){\n                    \n                    window.death()\n                  \n                }\n\n                if (updates.playerAChamp && updates.playerAChamp !== this.state.playerAChamp  || updates.playerBChamp && updates.playerBChamp !== this.state.playerBChamp){\n                    \n                    //seems like other sounds are getting triggered\n                    window.championAttack()\n                  \n                }\n                \n                if (updates.playerAMana === 0) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana, \n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else if (updates.playerBMana === 0) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else if (updates.playerATurn || updates.playerBturn) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: updates.playerATurn,\n                        playerBturn: updates.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                }\n                \n            }\n        })\n    }\n\n    changeATurn = () => {\n\n        if (this.state.playerATurn === false) {\n            return\n        } else {\n            let currentAMaxMana = this.state.aMaxMana\n            let newMana;\n            let modal = document.getElementById(\"myModal\");\n            if (currentAMaxMana <= 45) {\n                currentAMaxMana += 5;\n                newMana = currentAMaxMana\n                API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name)\n            }\n            else {\n                currentAMaxMana = 50;\n                newMana = currentAMaxMana;\n                API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name)\n            }\n            \n        }\n    }\n\n    changeBTurn = () => {\n\n        if (this.state.playerBturn === false) {\n            return\n        } else {\n            let currentBMaxMana = this.state.bMaxMana\n            let newMana;\n            \n            if (currentBMaxMana <= 45) {\n                currentBMaxMana += 5\n                newMana = currentBMaxMana;\n                API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name);\n            }\n            else {\n                currentBMaxMana = 50;\n                newMana = currentBMaxMana;\n                API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name)\n            }\n            \n        }\n    }\n\n    getList = id => this.state[this.id2List[id]];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n        \n\n        // dropped outside the list\n        if (!destination) {\n            \n            return;\n        }\n        if (source.droppableId > 0 && destination.droppableId === \"fieldA\") {\n            return\n        }\n        if (source.droppableId > 0 && destination.droppableId === \"fieldB\") {\n            return\n        }\n        if (source.droppableId === \"fieldB\" && destination.droppableId === \"fieldB\") {\n            return\n        }\n\n\n        //playing a card for top player\n        if (source.droppableId === \"playerHandA\" && destination.droppableId === \"fieldA\" && this.state.playerATurn === true) {\n            let currentMana = this.state.playerAMana;\n            if (currentMana >= 10) {\n                const result = move(\n                    this.getList(source.droppableId),\n                    this.getList(destination.droppableId),\n                    source,\n                    destination\n                );\n                currentMana -= 10;\n                let playerAField = result.fieldA\n                let playerAHand = result.playerHandA\n                let playerAMana = currentMana\n                \n               \n                API.playAHand(playerAField, playerAHand, playerAMana)\n            } else {\n                \n                let modal = document.getElementById(\"myModalManaPlay\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n            \n        }\n        //playing a card for bottom player\n        if (source.droppableId === \"playerHandB\" && destination.droppableId === \"fieldB\" && this.state.playerBturn === true) {\n            let currentMana = this.state.playerBMana;\n            if (currentMana >= 10) {\n                const result = move(\n                    this.getList(source.droppableId),\n                    this.getList(destination.droppableId),\n                    source,\n                    destination\n                );\n                currentMana -= 10;\n                let playerBField = result.fieldB\n                let playerBHand = result.playerHandB\n                let playerBMana = currentMana\n                let name = this.state.player1name\n                \n                \n                API.playBHand(playerBField, playerBHand, playerBMana, name)\n                \n            } else {\n                \n                let modal = document.getElementById(\"myModalManaPlay\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n        }\n        //attacking player A Champion\n\n        if (source.droppableId !== \"playerHandB\" && destination.droppableId === \"playerChampionA\") {\n\n            if (this.state.playerBturn) {\n                \n                var playerBField = this.state.playerBField;\n                var playerBMana = this.state.playerBMana;\n                var playerAChampion = this.state.playerAChamp;\n                var playerBGraveyard = this.state.playerBGraveyard\n                var attackingCardIndex;\n                var defendingCardIndex = 0;\n\n                if (playerBMana >= 9) {\n                    for (var i = 0; i < playerBField.length; i++) {\n                        if (playerBField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    if (attackingCardIndex === undefined) {\n                       \n                        return\n                    } else {\n\n                        \n\n                        var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerAChampion[defendingCardIndex].WeakAgainstText;\n                        var defendingCardStrength = playerAChampion[defendingCardIndex].StrongAgainstText;\n\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerAChampion[0].Health -= 10;\n                            playerBMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerAChampion[0].Health -= 3;\n                            playerBField[attackingCardIndex].Health -= 3;\n                            playerBMana -= 9;\n                        } else {\n                            playerAChampion[0].Health -= 6;\n                            playerBMana -= 9;\n                        }\n\n                        if (playerBField[attackingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n                        window.attack()\n                        API.attackAChampion(playerAChampion, playerBField, playerBMana, playerBGraveyard)\n                    }\n                } else {\n                    //not enough mana\n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n\n        }\n\n        //attacking playerB Champ\n\n        if (source.droppableId !== \"playerHandA\" && destination.droppableId === \"playerChampionB\") {\n\n            if (this.state.playerATurn) {\n                \n                var playerAField = this.state.playerAField;\n                var playerAMana = this.state.playerAMana;\n                var playerBChampion = this.state.playerBChamp;\n                var playerAGraveyard = this.state.playerAGraveyard\n                var attackingCardIndex;\n                var defendingCardIndex = 0;\n\n                if (playerAMana >= 9) {\n                    for (var i = 0; i < playerAField.length; i++) {\n                        if (playerAField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    if (attackingCardIndex === undefined) {\n                       \n                        return\n                    } else {\n                        \n\n                        var attackingCardType = playerAField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerBChampion[defendingCardIndex].WeakAgainstText;\n                        var defendingCardStrength = playerBChampion[defendingCardIndex].StrongAgainstText;\n\n                       \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerBChampion[0].Health -= 10;\n                            playerAMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerBChampion[0].Health -= 3;\n                            playerAField[attackingCardIndex].Health -= 3;\n                            playerAMana -= 9;\n                        } else {\n                            playerBChampion[0].Health -= 6;\n                            playerAMana -= 9;\n                        }\n\n                        if (playerAField[attackingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(attackingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n                        window.attack()\n                        API.attackBChampion(playerBChampion, playerAField, playerAMana, playerAGraveyard)\n                    }\n                } else {\n                    //some popup saying you do not have enough mana\n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n\n            }\n        }\n        //attacking a minion\n        if (destination.droppableId !== \"playerChampionA\" && destination.droppableId !== \"playerChampionB\" && source.droppableId !== \"fieldA\" && source.droppableId !== \"fieldB\" && source.droppableId !== \"playerHandA\" && source.droppableId !== \"playerHandB\") {\n            \n            if (this.state.playerATurn) {\n                var playerAField = this.state.playerAField;\n                var playerBField = this.state.playerBField;\n                var playerAMana = this.state.playerAMana;\n                var playerBGraveyard = this.state.playerBGraveyard;\n                var playerAGraveyard = this.state.playerAGraveyard;\n                var attackingCardIndex;\n                var defendingCardIndex;\n\n                if (playerAMana >= 9) {\n\n                    for (var i = 0; i < playerAField.length; i++) {\n                        if (playerAField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    for (var j = 0; j < playerBField.length; j++) {\n                        if (playerBField[j].id === result.destination.droppableId) {\n                            defendingCardIndex = j\n                        }\n                    }\n                    \n\n                    if (defendingCardIndex === undefined) {\n                        \n                        return\n                    } else if (attackingCardIndex === undefined) {\n                       \n\n                    } else {\n\n                        var attackingCardType = playerAField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerBField[defendingCardIndex].WeakAgainst;\n                        var defendingCardStrength = playerBField[defendingCardIndex].StrongAgainst;\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerBField[defendingCardIndex].Health -= 10;\n                            playerAMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerBField[defendingCardIndex].Health -= 3;\n                            playerAField[attackingCardIndex].Health -= 3;\n                            playerAMana -= 9;\n                        } else {\n                            playerBField[defendingCardIndex].Health -= 6;\n                            playerAMana -= 9;\n                        }\n\n                        if (playerBField[defendingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(defendingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n\n                        if (playerAField[attackingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(attackingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n\n                        window.attack()\n                        API.attackBMinion(playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard)\n\n                    }\n                }\n                else {\n                    //add some modal to say out of mana\n                    \n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n            //player B's turn\n            else {\n                var playerAField = this.state.playerAField;\n                var playerBField = this.state.playerBField;\n                var playerBMana = this.state.playerBMana;\n                var playerAGraveyard = this.state.playerAGraveyard;\n                var playerBGraveyard = this.state.playerBGraveyard;\n                var attackingCardIndex;\n                var defendingCardIndex;\n\n                if (playerBMana >= 9) {\n\n                    for (var i = 0; i < playerBField.length; i++) {\n                        if (playerBField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    for (var j = 0; j < playerAField.length; j++) {\n                        if (playerAField[j].id === result.destination.droppableId) {\n                            defendingCardIndex = j\n                        }\n                    }\n                    \n\n                    if (defendingCardIndex === undefined) {\n                        \n                        return\n                    } else if (attackingCardIndex === undefined) {\n                       \n                    }\n                    else {\n\n                        var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerAField[defendingCardIndex].WeakAgainst;\n                        var defendingCardStrength = playerAField[defendingCardIndex].StrongAgainst;\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerAField[defendingCardIndex].Health -= 10;\n                            playerBMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerAField[defendingCardIndex].Health -= 3;\n                            playerBField[attackingCardIndex].Health -= 3;\n                            playerBMana -= 9;\n                        } else {\n                            playerAField[defendingCardIndex].Health -= 6;\n                            playerBMana -= 9;\n                        }\n\n                        if (playerAField[defendingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(defendingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n\n                        if (playerBField[attackingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n\n                        window.attack()\n                        API.attackAMinion(playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard)\n                        \n                    }\n                }\n                else {\n                    //add some modal to say out of mana\n                    \n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n        }\n\n    };\n\n    render() {\n        if (this.state.playerAChamp[0].Health <= 0 || (this.state.playerAField.length === 0 && this.state.playerAHand.length === 0)) {\n            return (\n                <GameOver value={this.state} winner={'playerB'} player1 ={this.state.player1name} player2 ={this.state.player2name}></GameOver>\n            )\n        } else if (this.state.playerBChamp[0].Health <= 0 || (this.state.playerBField.length === 0 && this.state.playerBHand.length === 0)) {\n            return (\n                <GameOver value={this.state} winner={'playerA'} player1 ={this.state.player1name} player2 ={this.state.player2name}></GameOver>\n            )\n        } else\n            return (\n\n                <DragDropContext onDragEnd={this.onDragEnd}>\n\n                    <div className=\"outerContainer\">\n\n                        <div className=\"containerA\">\n\n                            <div className=\"rowA\">\n\n                                <div className=\"playerNameA\">\n                                    {this.state.player2name}\n                                </div>\n\n                                <div className=\"playerManaA\">\n                                    {this.state.playerAMana}\n                                </div>\n\n                                <div className=\"endTurnA\" onClick={this.changeATurn}>\n                                    End Turn\n                                </div>\n\n                                <Droppable droppableId=\"playerChampionA\">\n                                    {(provided) => (\n                                        <div className=\"championA\" ref={provided.innerRef}>\n                                            {this.state.playerAChamp.map((champion) => (\n                                                <div\n                                                    className=\"playedChampionCard\"\n                                                    id={champion.id}\n                                                    key={champion.id}\n                                                >\n                                                    <p className=\"playedChampionHealth\">{champion.Health || 2}</p>\n                                                    <img className=\"playedChampionWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                    <img className=\"playedChampionStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                    <img className=\"playedChampionPortrait\" src={champion.Img} alt=\"\"></img>\n                                                </div>\n\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                                <Droppable droppableId=\"playerHandA\">\n                                    {(provided) => (\n                                        <div className=\"playerHandA\" ref={provided.innerRef}>\n                                            {this.state.playerAHand.map((minion, index) => (\n                                                <Draggable\n                                                    key={minion.id}\n                                                    draggableId={minion.id}\n                                                    index={index}>\n                                                    {(provided) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"minionHandCardA\"\n                                                            id={minion.id}\n                                                            key={minion.id}\n                                                        >\n                                                            <h3 className=\"MinionHandName\">{minion.Name || \"Minion\"}</h3>\n                                                            <p className=\"minionHandHealth\">{minion.Health || 2}</p>\n\n                                                            <div className=\"ability\">\n                                                                <span className=\"minionHandAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                <span className=\"minionHandAttack1Power\"><br></br>Dmg: {minion.Attack1Power}</span>\n                                                                <span className=\"minionHandAttack1Cost\">Cost: {minion.Attack1Cost}</span>\n                                                            </div>\n\n                                                            <img className=\"minionHandWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                            <img className=\"minionHandStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                            <img className=\"minionHandPortrait\" src={minion.Img} alt=\"\"></img>\n\n                                                        </div>\n\n\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n\n                                        </div>\n                                    )\n                                    }\n\n                                </Droppable>\n                            </div>\n                            <Droppable droppableId=\"fieldA\">\n                                {(provided) => (\n                                    <div className=\"fieldA\" ref={provided.innerRef}>\n                                        {this.state.playerAField.map((minion, index) => (\n                                            <Droppable droppableId={minion.id} key={minion.id}>\n                                                {(provided) => (\n                                                    <div className=\"droppableMinion\" ref={provided.innerRef} key={minion.id} >\n                                                        <Draggable\n                                                            key={minion.id}\n                                                            draggableId={minion.id}\n                                                            index={index}>\n                                                            {(provided) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                    className=\"minionFieldCardA\"\n                                                                    id={minion.id}\n                                                                    key={minion.id}\n                                                                >\n\n                                                                    <div className=\"innerA\">\n\n                                                                        <p className=\"minionFieldHealth\">{minion.Health || 2}</p>\n\n                                                                        <div className=\"abilityField\">\n                                                                            <span className=\"minionFieldAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                            <span className=\"minionFieldAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                                                                            <span className=\"minionFieldAttack1Cost\">{minion.Attack1Cost}</span>\n                                                                        </div>\n\n                                                                        <img className=\"minionFieldWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldPortrait\" src={minion.Img} alt=\"\"></img>\n                                                                    </div>\n\n                                                                </div>\n\n\n                                                            )}\n                                                        </Draggable>\n                                                        {provided.placeholder}\n                                                    </div>\n\n                                                )}\n                                            </Droppable>\n                                        ))}\n                                        {provided.placeholder}\n\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n\n                        </div>\n\n                        {/* --------------------------------------------------Turn Popup-------------------------------------------------------*/}\n                        <div id=\"myModal\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>{this.state.currentPlayerTurn + \"'s Turn\"}</p>\n                            </div>\n\n                        </div>\n\n                        <div id=\"myModalManaPlay\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>You need at least 10 mana to play a card</p>\n                            </div>\n\n                        </div>\n\n                        <div id=\"myModalManaAttack\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>You need at least 9 mana to attack a card</p>\n                            </div>\n\n                        </div>\n\n                         <div id=\"myModalQuit\" class=\"modal\">\n\n                        <div class=\"modal-content\">\n                                    <p>{\"Player Disconnected, heading to lobby\"}</p>\n                                </div>\n\n                            </div>\n\n\n                        <div className=\"containerB\">\n\n                            <Droppable droppableId=\"fieldB\">\n                                {(provided) => (\n                                    <div className=\"fieldB\" ref={provided.innerRef}>\n                                        {this.state.playerBField.map((minion, index) => (\n                                            <Droppable droppableId={minion.id} key={minion.id}>\n                                                {(provided) => (\n                                                    <div className=\"droppableMinion\" ref={provided.innerRef} key={minion.id}>\n                                                        <Draggable\n                                                            key={minion.id}\n                                                            draggableId={minion.id}\n                                                            index={index}\n                                                        >\n                                                            {(provided) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                    className=\"minionFieldCardB\"\n                                                                    id={minion.id}\n                                                                    key={minion.id}\n                                                                >\n                                                                    <div className=\"innerB\">\n\n                                                                        <p className=\"minionFieldHealth\">{minion.Health || 2}</p>\n\n                                                                        <div className=\"abilityField\">\n                                                                            <span className=\"minionFieldAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                            <span className=\"minionFieldAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                                                                            <span className=\"minionFieldAttack1Cost\">{minion.Attack1Cost}</span>\n                                                                        </div>\n\n                                                                        <img className=\"minionFieldWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldPortrait\" src={minion.Img} alt=\"\"></img>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            )}\n                                                        </Draggable>\n                                                        {provided.placeholder}\n                                                    </div>\n                                                )}\n                                            </Droppable>\n                                        ))}\n                                        {provided.placeholder}\n\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n\n                            <div className=\"rowB\">\n\n                                <div className=\"endTurnB\" onClick={this.changeBTurn}>\n                                    End Turn\n                                </div>\n\n                                <div className=\"playerManaB\">\n                                    {this.state.playerBMana}\n                                </div>\n\n                                <div className=\"playerNameB\">\n                                    {this.state.player1name}\n                                </div>\n\n                                <Droppable droppableId=\"playerChampionB\">\n                                    {(provided) => (\n                                        <div className=\"championB\" ref={provided.innerRef}>\n                                            {this.state.playerBChamp.map((champion) => (\n                                                <div\n                                                    className=\"playedChampionCard\"\n                                                    id={champion.id}\n                                                    key={champion.id}\n                                                >\n                                                    <p className=\"playedChampionHealth\">{champion.Health || 2}</p>\n                                                    <img className=\"playedChampionWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                    <img className=\"playedChampionStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                    <img className=\"playedChampionPortrait\" src={champion.Img} alt=\"\"></img>\n                                                </div>\n\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                                <Droppable droppableId=\"playerHandB\">\n                                    {(provided) => (\n                                        <div className=\"playerHandB\" ref={provided.innerRef}>\n                                            {this.state.playerBHand.map((minion, index) => (\n                                                <Draggable\n                                                    key={minion.id}\n                                                    draggableId={minion.id}\n                                                    index={index}\n                                                >\n                                                    {(provided) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"minionHandCardB\"\n                                                            id={minion.id}\n                                                            key={minion.id}\n                                                        >\n                                                            <h3 className=\"MinionHandName\">{minion.Name || \"Minion\"}</h3>\n                                                            <p className=\"minionHandHealth\">{minion.Health || 2}</p>\n\n                                                            <div className=\"ability\">\n                                                                <span className=\"minionHandAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                <span className=\"minionHandAttack1Power\"><br></br>Dmg: {minion.Attack1Power}</span>\n                                                                <span className=\"minionHandAttack1Cost\">Cost: {minion.Attack1Cost}</span>\n                                                            </div>\n\n                                                            <img className=\"minionHandWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                            <img className=\"minionHandStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                            <img className=\"minionHandPortrait\" src={minion.Img} alt=\"\"></img>\n\n                                                        </div>\n\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n\n                                        </div>\n                                    )\n                                    }\n                                </Droppable>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </DragDropContext>\n            )\n    }\n}\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}