{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\src\\\\components\\\\draftMinion\\\\draftMinion.js\";\nimport React, { Component } from \"react\";\nimport './draftMinion.css';\nimport minionsList from \"./minions\";\nimport DraftChamp from \"../draftChamp/draftChamp\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport GameBoard from \"../board/board\";\nimport API from '../../utils/API';\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n\n  const _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n\n  const _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n        _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n        removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nclass DraftMinion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      API.joinGame(updates => {\n        if (updates.playerDisconnected === true) {\n          let modal = document.getElementById(\"myModalQuit\");\n          setTimeout(function () {\n            modal.style.display = \"block\";\n          }, 300);\n          setTimeout(function () {\n            window.location.reload();\n          }, 3000);\n        }\n\n        if (updates.player1 && updates.player2) {\n          this.setState({\n            player1deck: updates.player1.minions || [],\n            player2deck: updates.player2.minions || [],\n            player1Turn: updates.player1.turn,\n            player2Turn: updates.player2.turn,\n            minions: updates.minions,\n            player1champion: updates.player1.champion,\n            player2champion: updates.player2.champion,\n            champions: updates.champions,\n            currentTurn: updates.currentTurn || this.props.p1name\n          });\n        }\n      });\n    };\n\n    this.getList = id => this.state[this.id2List[id]];\n\n    this.onDragEnd = result => {\n      const source = result.source,\n            destination = result.destination; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        const items = reorder(this.getList(source.droppableId), source.index, destination.index);\n        let state = {\n          items\n        };\n\n        if (source.droppableId === 'droppable2') {\n          state = {\n            selected: items\n          };\n        }\n\n        this.setState(state);\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1deck.length > 8) {\n        return;\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2deck.length > 8) {\n        return;\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1Turn) {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        API.draft1Minion(result.droppable, result[destination.droppableId], this.state.player2name);\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2Turn) {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        API.draft2Minion(result.droppable, result[destination.droppableId], this.state.player1name);\n      }\n    };\n\n    this.state = {\n      minions: minionsList.minionsList,\n      player1deck: [],\n      player2deck: [],\n      player1champion: this.props.p1champ,\n      player2champion: this.props.p2champ,\n      player1Turn: true,\n      player2Turn: false,\n      champions: this.props.champions,\n      player1name: this.props.p1name,\n      player2name: this.props.p2name,\n      currentTurn: this.props.p1name\n    };\n    this.id2List = {\n      droppable: 'minions',\n      droppable2: 'player1deck',\n      droppable3: 'player2deck'\n    };\n  }\n\n  render() {\n    if (this.state.player1deck.length === 5 && this.state.player2deck.length === 5) {\n      return React.createElement(GameBoard, {\n        p1deck: this.state.player1deck,\n        p2deck: this.state.player2deck,\n        p1champ: this.state.player1champion,\n        p2champ: this.state.player2champion,\n        p1name: this.state.player1name,\n        p2name: this.state.player2name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player2Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headerText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.player2name || \"Waiting for Opponent\"), React.createElement(\"h6\", {\n        className: \"subText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.player2champion[0].name)), React.createElement(\"div\", {\n        className: \"minionHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headerText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Choose your minions\"), React.createElement(\"h3\", {\n        className: \"headerText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Current Turn: \", this.state.currentTurn)), React.createElement(\"div\", {\n        className: \"player1Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headerText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.player1name || \"Waiting for Opponent\"), React.createElement(\"h6\", {\n        className: \"subText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.player1champion[0].name))), React.createElement(\"div\", {\n        id: \"myModalQuit\",\n        class: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Player Disconnected, heading to lobby\"))), React.createElement(\"div\", {\n        className: \"row2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Droppable, {\n        droppableId: \"droppable3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, provided => React.createElement(\"div\", {\n        ref: provided.innerRef,\n        className: \"chosenMinion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"chosenText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Chosen Minions\"), React.createElement(\"h6\", {\n        className: \"chosenText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.state.player2deck.length, \"/5\"), this.state.player2deck.map((p2deck, index) => React.createElement(Draggable, {\n        key: p2deck.id,\n        draggableId: p2deck.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, provided => React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        className: \"chosenMinionCard\",\n        id: p2deck.id,\n        key: p2deck.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"minionName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, p2deck.Name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"chosenMinionPortrait\",\n        src: p2deck.Img,\n        alt: \"\",\n        width: \"60\",\n        height: \"60\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"chosenMinionWeakness\",\n        src: p2deck.WeakAgainstImg,\n        alt: \"\",\n        width: \"20\",\n        height: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"minionType\",\n        src: p2deck.Type,\n        alt: \"\",\n        width: \"42\",\n        height: \"42\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"chosenMinionStrength\",\n        src: p2deck.StrongAgainstImg,\n        alt: \"\",\n        width: \"20\",\n        height: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))), provided.placeholder)), React.createElement(Droppable, {\n        droppableId: \"droppable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, provided => React.createElement(\"div\", {\n        className: \"minionContainer\",\n        ref: provided.innerRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.minions.map((minion, index) => React.createElement(Draggable, {\n        key: minion.id,\n        draggableId: minion.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, provided => React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        className: \"minionCard\",\n        id: minion.id,\n        key: minion.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"MinionName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, minion.Name || \"Minion\"), React.createElement(\"p\", {\n        className: \"minionHealth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, minion.Health || 2), React.createElement(\"div\", {\n        className: \"ability\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"minionAttack1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, minion.Attack1Name || \"Ability 1\"), React.createElement(\"span\", {\n        className: \"minionAttack1Power\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), minion.Attack1Power), React.createElement(\"span\", {\n        className: \"minionAttack1Cost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, minion.Attack1Cost)), React.createElement(\"img\", {\n        className: \"minionCost\",\n        src: minion.Type,\n        alt: \"\",\n        width: \"42\",\n        height: \"42\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"minionWeakness\",\n        src: minion.WeakAgainstImg,\n        alt: \"\",\n        width: \"42\",\n        height: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"minionStrength\",\n        src: minion.StrongAgainstImg,\n        alt: \"\",\n        width: \"5\",\n        height: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"minionPortrait\",\n        src: minion.Img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })))), provided.placeholder)), React.createElement(Droppable, {\n        droppableId: \"droppable2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, provided => React.createElement(\"div\", {\n        ref: provided.innerRef,\n        className: \"chosenMinion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"chosenText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Chosen Minions\"), React.createElement(\"h6\", {\n        className: \"chosenText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, this.state.player1deck.length, \"/5\"), this.state.player1deck.map((p1deck, index) => React.createElement(Draggable, {\n        key: p1deck.id,\n        draggableId: p1deck.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, provided => React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        className: \"chosenMinionCard\",\n        id: p1deck.id,\n        key: p1deck.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"minionName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, p1deck.Name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"chosenMinionPortrait\",\n        src: p1deck.Img,\n        alt: \"\",\n        width: \"60\",\n        height: \"60\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"chosenMinionWeakness\",\n        src: p1deck.WeakAgainstImg,\n        alt: \"\",\n        width: \"20\",\n        height: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"minionType\",\n        src: p1deck.Type,\n        alt: \"\",\n        width: \"42\",\n        height: \"42\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"chosenMinionStrength\",\n        src: p1deck.StrongAgainstImg,\n        alt: \"\",\n        width: \"20\",\n        height: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })))), provided.placeholder)))));\n    }\n  }\n\n}\n\nexport default DraftMinion;","map":{"version":3,"sources":["C:/Users/jrave/Desktop/BusinessSites/Animalchemists/phoneGapAnima1/src/components/draftMinion/draftMinion.js"],"names":["React","Component","minionsList","DraftChamp","DragDropContext","Droppable","Draggable","GameBoard","API","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","DraftMinion","constructor","props","componentDidMount","joinGame","updates","playerDisconnected","modal","document","getElementById","setTimeout","style","display","window","location","reload","player1","player2","setState","player1deck","minions","player2deck","player1Turn","turn","player2Turn","player1champion","champion","player2champion","champions","currentTurn","p1name","getList","id","state","id2List","onDragEnd","items","selected","length","draft1Minion","droppable","player2name","draft2Minion","player1name","p1champ","p2champ","p2name","droppable2","droppable3","render","name","provided","innerRef","map","p2deck","draggableProps","dragHandleProps","Name","Img","WeakAgainstImg","Type","StrongAgainstImg","placeholder","minion","Health","Attack1Name","Attack1Power","Attack1Cost","p1deck"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './draftMinion.css';\nimport minionsList from \"./minions\"\nimport DraftChamp from \"../draftChamp/draftChamp\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport GameBoard from \"../board/board\"\nimport API from '../../utils/API';\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n  const sourceClone = Array.from(source);\n\n  const destClone = Array.from(destination);\n\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nclass DraftMinion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minions: minionsList.minionsList,\n      player1deck: [],\n      player2deck: [],\n      player1champion: this.props.p1champ,\n      player2champion: this.props.p2champ,\n      player1Turn: true,\n      player2Turn: false,\n      champions: this.props.champions,\n      player1name: this.props.p1name,\n      player2name: this.props.p2name,\n      currentTurn: this.props.p1name\n    };\n\n    this.id2List = {\n      droppable: 'minions',\n      droppable2: 'player1deck',\n      droppable3: 'player2deck'\n    };\n\n  }\n\n  componentDidMount = () => {\n    API.joinGame(updates => {\n      if (updates.playerDisconnected === true){\n        let modal = document.getElementById(\"myModalQuit\");\n        setTimeout(function(){ modal.style.display = \"block\";}, 300);\n        \n        setTimeout(function(){window.location.reload()}, 3000)\n    }\n      if (updates.player1 && updates.player2) {\n        this.setState({\n          player1deck: updates.player1.minions || [],\n          player2deck: updates.player2.minions || [],\n          player1Turn: updates.player1.turn,\n          player2Turn: updates.player2.turn,\n          minions: updates.minions,\n          player1champion: updates.player1.champion,\n          player2champion: updates.player2.champion,\n          champions: updates.champions,\n          currentTurn: updates.currentTurn || this.props.p1name\n        })\n      }\n    })\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      \n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { items };\n\n      if (source.droppableId === 'droppable2') {\n        state = { selected: items };\n      }\n\n      this.setState(state);\n    } if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1deck.length > 8) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2deck.length > 8) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && (this.state.player1Turn)) {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      API.draft1Minion(result.droppable, result[destination.droppableId], this.state.player2name)\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && (this.state.player2Turn)) {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      API.draft2Minion(result.droppable, result[destination.droppableId], this.state.player1name)\n    }\n\n  };\n\n  render() {\n    if (this.state.player1deck.length === 5 && this.state.player2deck.length === 5) {\n      return (\n        <GameBoard p1deck={this.state.player1deck} p2deck={this.state.player2deck} p1champ={this.state.player1champion} p2champ={this.state.player2champion} p1name={this.state.player1name} p2name={this.state.player2name}></GameBoard>\n      )\n    } else {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"container\">\n\n          <div className=\"row1\">\n\n            <div className=\"player2Name\">\n              <h1 className=\"headerText\">{this.state.player2name || \"Waiting for Opponent\"}</h1>\n              <h6 className=\"subText\">{this.state.player2champion[0].name}</h6>\n            </div>\n\n            <div className=\"minionHeader\">\n              <h1 className=\"headerText\">Choose your minions</h1>\n              <h3 className=\"headerText\">Current Turn: {this.state.currentTurn}</h3>\n            </div>\n\n            <div className=\"player1Name\">\n              <h1 className=\"headerText\">{this.state.player1name || \"Waiting for Opponent\"}</h1>\n              <h6 className=\"subText\">{this.state.player1champion[0].name}</h6>\n            </div>\n\n          </div>\n\n          <div id=\"myModalQuit\" class=\"modal\">\n\n            <div class=\"modal-content\">\n                <p>{\"Player Disconnected, heading to lobby\"}</p>\n            </div>\n\n          </div>\n\n          <div className=\"row2\">\n            <Droppable droppableId=\"droppable3\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef} className=\"chosenMinion\">\n                  <h3 className=\"chosenText\">Chosen Minions</h3>\n                  <h6 className=\"chosenText\">{this.state.player2deck.length}/5</h6>\n                  {this.state.player2deck.map((p2deck, index) => (\n                    <Draggable\n                      key={p2deck.id}\n                      draggableId={p2deck.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n\n                          className=\"chosenMinionCard\" id={p2deck.id} key={p2deck.id}\n                        >\n                          <p className=\"minionName\">{p2deck.Name}</p>\n                          <div>\n                            <img className=\"chosenMinionPortrait\" src={p2deck.Img} alt=\"\" width=\"60\" height=\"60\"></img>\n                          </div>\n                          <img className=\"chosenMinionWeakness\" src={p2deck.WeakAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                          <img className=\"minionType\" src={p2deck.Type} alt=\"\" width=\"42\" height=\"42\"></img>\n                          <img className=\"chosenMinionStrength\" src={p2deck.StrongAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <Droppable droppableId=\"droppable\">\n\n              {(provided) => (\n\n                <div className=\"minionContainer\" ref={provided.innerRef}>\n\n                  {this.state.minions.map((minion, index) => (\n                    <Draggable\n                      key={minion.id}\n                      draggableId={minion.id}\n                      index={index}>\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"minionCard\"\n                          id={minion.id}\n                          key={minion.id}\n                        >\n                          <h3 className=\"MinionName\">{minion.Name || \"Minion\"}</h3>\n                          <p className=\"minionHealth\">{minion.Health || 2}</p>\n\n                          <div className=\"ability\">\n                            <span className=\"minionAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                            <span className=\"minionAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                            <span className=\"minionAttack1Cost\">{minion.Attack1Cost}</span>\n                          </div>\n\n                          <img className=\"minionCost\" src={minion.Type} alt=\"\" width=\"42\" height=\"42\"></img>\n                          <img className=\"minionWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                          <img className=\"minionStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                          <img className=\"minionPortrait\" src={minion.Img} alt=\"\"></img>\n\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <Droppable droppableId=\"droppable2\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef} className=\"chosenMinion\">\n                  <h3 className=\"chosenText\">Chosen Minions</h3>\n                  <h6 className=\"chosenText\">{this.state.player1deck.length}/5</h6>\n                  {this.state.player1deck.map((p1deck, index) => (\n                    <Draggable\n                      key={p1deck.id}\n                      draggableId={p1deck.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n\n                          className=\"chosenMinionCard\" id={p1deck.id} key={p1deck.id}\n                        >\n                          <p className=\"minionName\">{p1deck.Name}</p>\n                          <div>\n                            <img className=\"chosenMinionPortrait\" src={p1deck.Img} alt=\"\" width=\"60\" height=\"60\"></img>\n                          </div>\n                          <img className=\"chosenMinionWeakness\" src={p1deck.WeakAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                          <img className=\"minionType\" src={p1deck.Type} alt=\"\" width=\"42\" height=\"42\"></img>\n                          <img className=\"chosenMinionStrength\" src={p1deck.StrongAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n          </div>\n\n        </div>\n\n      </DragDropContext>\n\n    )\n    } \n  }\n}\n\n\nexport default DraftMinion;"]},"metadata":{},"sourceType":"module"}