{"ast":null,"code":"import axios from\"axios\";import openSocket from'../../node_modules/socket.io-client';var socket=openSocket(window.location.origin);export default{// Gets all minions\ngetMinions:function getMinions(){return axios.get(\"/api/minions\");},// Socket stuff below\njoinGame:function joinGame(cb){socket.emit('joinGame',{});socket.on('updateGame',cb);socket.on('showNewTurn',cb);},draftChampion:function draftChampion(champions,champion,cb){socket.emit('draftChampion',champions,champion);// socket.on\n},draft1Minion:function draft1Minion(minions,minion,name,cb){socket.emit('draft1Minion',minions,minion,name);},draft2Minion:function draft2Minion(minions,minion,name,cb){socket.emit('draft2Minion',minions,minion,name);},leaveGame:function leaveGame(){socket.emit('leaveGame');},assignNames:function assignNames(name){socket.emit('assignNames',name);},board:function board(allState){console.log(allState);socket.emit('board',allState);},playAHand:function playAHand(playerAField,playerAHand,playerAMana){socket.emit('playAHand',playerAField,playerAHand,playerAMana);},playBHand:function playBHand(playerBField,playerBHand,playerBMana,name){socket.emit('playBHand',playerBField,playerBHand,playerBMana,name);},attackAChampion:function attackAChampion(playerAChampion,playerBField,playerBMana,playerBGraveyard){socket.emit('attackAChampion',playerAChampion,playerBField,playerBMana,playerBGraveyard);},attackBChampion:function attackBChampion(playerBChampion,playerAField,playerAMana,playerAGraveyard){socket.emit('attackBChampion',playerBChampion,playerAField,playerAMana,playerAGraveyard);},attackBMinion:function attackBMinion(playerAField,playerBField,playerAMana,playerBGraveyard,playerAGraveyard){socket.emit('attackBMinion',playerAField,playerBField,playerAMana,playerBGraveyard,playerAGraveyard);},attackAMinion:function attackAMinion(playerBField,playerAField,playerBMana,playerAGraveyard,playerBGraveyard){socket.emit('attackAMinion',playerBField,playerAField,playerBMana,playerAGraveyard,playerBGraveyard);},showTurn:function showTurn(modal){socket.emit('showTurn',modal);},joinNewGame:function joinNewGame(){console.log(\"joining a game\");socket.emit('joinNewGame');},checkSocket:function checkSocket(cb){socket.emit('checkSocket',cb);},changeAsTurn:function changeAsTurn(currentAMaxMana,newMana,name){socket.emit('changeATurn',currentAMaxMana,newMana,name);},changeBsTurn:function changeBsTurn(currentBMaxMana,newMana,name){socket.emit('changeBTurn',currentBMaxMana,newMana,name);}};","map":{"version":3,"sources":["C:/Users/jrave/Desktop/BusinessSites/Animalchemists/phoneGapAnima1/src/utils/API.js"],"names":["axios","openSocket","socket","window","location","origin","getMinions","get","joinGame","cb","emit","on","draftChampion","champions","champion","draft1Minion","minions","minion","name","draft2Minion","leaveGame","assignNames","board","allState","console","log","playAHand","playerAField","playerAHand","playerAMana","playBHand","playerBField","playerBHand","playerBMana","attackAChampion","playerAChampion","playerBGraveyard","attackBChampion","playerBChampion","playerAGraveyard","attackBMinion","attackAMinion","showTurn","modal","joinNewGame","checkSocket","changeAsTurn","currentAMaxMana","newMana","changeBsTurn","currentBMaxMana"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAGD,UAAU,CAACE,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAAzB,CAEA,cAAe,CACb;AACAC,UAAU,CAAE,qBAAW,CACrB,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAU,cAAV,CAAP,CACD,CAJY,CAQb;AACAC,QAAQ,CAAE,kBAACC,EAAD,CAAQ,CAChBP,MAAM,CAACQ,IAAP,CAAY,UAAZ,CAAwB,EAAxB,EACAR,MAAM,CAACS,EAAP,CAAU,YAAV,CAAwBF,EAAxB,EACAP,MAAM,CAACS,EAAP,CAAU,aAAV,CAAyBF,EAAzB,EAED,CAdY,CAebG,aAAa,CAAE,uBAACC,SAAD,CAAYC,QAAZ,CAAsBL,EAAtB,CAA6B,CAC1CP,MAAM,CAACQ,IAAP,CAAY,eAAZ,CAA6BG,SAA7B,CAAwCC,QAAxC,EACA;AACD,CAlBY,CAmBbC,YAAY,CAAE,sBAACC,OAAD,CAAWC,MAAX,CAAmBC,IAAnB,CAAyBT,EAAzB,CAAgC,CAE5CP,MAAM,CAACQ,IAAP,CAAY,cAAZ,CAA4BM,OAA5B,CAAqCC,MAArC,CAA6CC,IAA7C,EACD,CAtBY,CAwBbC,YAAY,CAAE,sBAACH,OAAD,CAAWC,MAAX,CAAmBC,IAAnB,CAA0BT,EAA1B,CAAiC,CAE7CP,MAAM,CAACQ,IAAP,CAAY,cAAZ,CAA4BM,OAA5B,CAAqCC,MAArC,CAA6CC,IAA7C,EACD,CA3BY,CA6BbE,SAAS,CAAE,oBAAM,CACflB,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAED,CAhCY,CAkCbW,WAAW,CAAE,qBAACH,IAAD,CAAU,CACrBhB,MAAM,CAACQ,IAAP,CAAY,aAAZ,CAA2BQ,IAA3B,EACD,CApCY,CAsCbI,KAAK,CAAE,eAACC,QAAD,CAAc,CACnBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACArB,MAAM,CAACQ,IAAP,CAAY,OAAZ,CAAqBa,QAArB,EACD,CAzCY,CA2CbG,SAAS,CAAE,mBAACC,YAAD,CAAeC,WAAf,CAA4BC,WAA5B,CAA4C,CACrD3B,MAAM,CAACQ,IAAP,CAAY,WAAZ,CAAyBiB,YAAzB,CAAuCC,WAAvC,CAAoDC,WAApD,EACD,CA7CY,CA+CbC,SAAS,CAAE,mBAACC,YAAD,CAAeC,WAAf,CAA4BC,WAA5B,CAAyCf,IAAzC,CAAkD,CAC3DhB,MAAM,CAACQ,IAAP,CAAY,WAAZ,CAAyBqB,YAAzB,CAAuCC,WAAvC,CAAoDC,WAApD,CAAiEf,IAAjE,EACD,CAjDY,CAmDbgB,eAAe,CAAE,yBAACC,eAAD,CAAkBJ,YAAlB,CAAgCE,WAAhC,CAA6CG,gBAA7C,CAAkE,CACjFlC,MAAM,CAACQ,IAAP,CAAY,iBAAZ,CAA+ByB,eAA/B,CAAgDJ,YAAhD,CAA8DE,WAA9D,CAA2EG,gBAA3E,EACD,CArDY,CAuDbC,eAAe,CAAE,yBAACC,eAAD,CAAkBX,YAAlB,CAAgCE,WAAhC,CAA6CU,gBAA7C,CAAkE,CACjFrC,MAAM,CAACQ,IAAP,CAAY,iBAAZ,CAA+B4B,eAA/B,CAAgDX,YAAhD,CAA8DE,WAA9D,CAA2EU,gBAA3E,EACD,CAzDY,CA2DbC,aAAa,CAAE,uBAACb,YAAD,CAAeI,YAAf,CAA6BF,WAA7B,CAA0CO,gBAA1C,CAA4DG,gBAA5D,CAAiF,CAC9FrC,MAAM,CAACQ,IAAP,CAAY,eAAZ,CAA6BiB,YAA7B,CAA2CI,YAA3C,CAAyDF,WAAzD,CAAsEO,gBAAtE,CAAwFG,gBAAxF,EACD,CA7DY,CA+DbE,aAAa,CAAE,uBAACV,YAAD,CAAeJ,YAAf,CAA6BM,WAA7B,CAA0CM,gBAA1C,CAA4DH,gBAA5D,CAAiF,CAC9FlC,MAAM,CAACQ,IAAP,CAAY,eAAZ,CAA6BqB,YAA7B,CAA2CJ,YAA3C,CAAyDM,WAAzD,CAAsEM,gBAAtE,CAAwFH,gBAAxF,EACD,CAjEY,CAmEbM,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnBzC,MAAM,CAACQ,IAAP,CAAY,UAAZ,CAAwBiC,KAAxB,EACD,CArEY,CAyEbC,WAAW,CAAE,sBAAM,CACjBpB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAvB,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAED,CA7EY,CA+EbmC,WAAW,CAAE,qBAACpC,EAAD,CAAQ,CACnBP,MAAM,CAACQ,IAAP,CAAY,aAAZ,CAA2BD,EAA3B,EACD,CAjFY,CAmFbqC,YAAY,CAAE,sBAACC,eAAD,CAAkBC,OAAlB,CAA2B9B,IAA3B,CAAoC,CAChDhB,MAAM,CAACQ,IAAP,CAAY,aAAZ,CAA2BqC,eAA3B,CAA4CC,OAA5C,CAAqD9B,IAArD,EACD,CArFY,CAuFb+B,YAAY,CAAE,sBAACC,eAAD,CAAkBF,OAAlB,CAA2B9B,IAA3B,CAAoC,CAChDhB,MAAM,CAACQ,IAAP,CAAY,aAAZ,CAA2BwC,eAA3B,CAA4CF,OAA5C,CAAqD9B,IAArD,EACD,CAzFY,CAAf","sourcesContent":["import axios from \"axios\";\nimport openSocket from '../../node_modules/socket.io-client';\n\nconst socket = openSocket(window.location.origin);\n\nexport default {\n  // Gets all minions\n  getMinions: function() {\n    return axios.get(\"/api/minions\");\n  },\n\n\n\n  // Socket stuff below\n  joinGame: (cb) => {\n    socket.emit('joinGame', { })\n    socket.on('updateGame', cb)\n    socket.on('showNewTurn', cb)\n    \n  },\n  draftChampion: (champions, champion, cb) => {\n    socket.emit('draftChampion', champions, champion)\n    // socket.on\n  },\n  draft1Minion: (minions , minion, name, cb) => {\n  \n    socket.emit('draft1Minion', minions, minion, name)\n  },\n\n  draft2Minion: (minions , minion, name,  cb) => {\n  \n    socket.emit('draft2Minion', minions, minion, name)\n  },\n\n  leaveGame: () => {\n    socket.emit('leaveGame')\n    \n  },\n\n  assignNames: (name) => {\n    socket.emit('assignNames', name)\n  },\n\n  board: (allState) => {\n    console.log(allState)\n    socket.emit('board', allState)\n  },\n\n  playAHand: (playerAField, playerAHand, playerAMana) => {\n    socket.emit('playAHand', playerAField, playerAHand, playerAMana)\n  },\n\n  playBHand: (playerBField, playerBHand, playerBMana, name) => {\n    socket.emit('playBHand', playerBField, playerBHand, playerBMana, name)\n  },\n\n  attackAChampion: (playerAChampion, playerBField, playerBMana, playerBGraveyard) => {\n    socket.emit('attackAChampion', playerAChampion, playerBField, playerBMana, playerBGraveyard)\n  },\n\n  attackBChampion: (playerBChampion, playerAField, playerAMana, playerAGraveyard) => {\n    socket.emit('attackBChampion', playerBChampion, playerAField, playerAMana, playerAGraveyard)\n  },\n\n  attackBMinion: (playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard) => {\n    socket.emit('attackBMinion', playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard)\n  },\n\n  attackAMinion: (playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard) => {\n    socket.emit('attackAMinion', playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard)\n  },\n\n  showTurn: (modal) => {\n    socket.emit('showTurn', modal)\n  },\n\n\n\n  joinNewGame: () => {\n    console.log(\"joining a game\")\n    socket.emit('joinNewGame')\n\n  },\n\n  checkSocket: (cb) => {\n    socket.emit('checkSocket', cb)\n  },\n\n  changeAsTurn: (currentAMaxMana, newMana, name) => {\n    socket.emit('changeATurn', currentAMaxMana, newMana, name)\n  },\n\n  changeBsTurn: (currentBMaxMana, newMana, name) => {\n    socket.emit('changeBTurn', currentBMaxMana, newMana, name)\n  }\n\n\n\n};"]},"metadata":{},"sourceType":"module"}