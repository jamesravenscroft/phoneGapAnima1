{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\src\\\\components\\\\board\\\\board.js\";\nimport React, { Component } from \"react\";\nimport \"./board.css\";\nimport \"./boardCards.css\";\nimport { DragDropContext, Droppable, Draggable } from '../../../node_modules/react-beautiful-dnd';\nimport API from '../../utils/API';\nimport { isUndefined } from \"util\";\nimport GameOver from '../gameOver/gameOver';\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n\n  const _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n\n  const _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n        _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n        removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nclass GameBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // var audio = new Audio('./sounds/attack.mp3');\n      // audio.play();\n      API.joinGame(updates => {\n        console.log(updates);\n        console.log(this.state);\n\n        if (this.state.currentPlayerTurn !== updates.currentPlayerTurn) {\n          window.changeTurn();\n          let modal = document.getElementById(\"myModal\");\n          setTimeout(function () {\n            modal.style.display = \"block\";\n          }, 300);\n          setTimeout(function () {\n            modal.style.display = \"none\";\n          }, 2500);\n        }\n\n        if (updates.playerDisconnected === true) {\n          let modal = document.getElementById(\"myModalQuit\");\n          setTimeout(function () {\n            modal.style.display = \"block\";\n          }, 300);\n          setTimeout(function () {\n            window.location.reload();\n          }, 3000);\n        }\n\n        if (updates.playerAField && updates.playerAField.length > 0 && this.state.playerAField.length > 0 && updates.playerAField.length === this.state.playerAField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn) {\n          for (let i = 0; i < updates.playerAField.length; i++) {\n            let attackACard = false;\n\n            if (this.state.playerAField[i].Health !== updates.playerAField[i].Health) {\n              attackACard = true;\n            }\n\n            if (attackACard) {\n              window.attack();\n            }\n          }\n        }\n\n        if (updates.playerBField && updates.playerBField.length > 0 && this.state.playerBField.length > 0 && updates.playerBField.length === this.state.playerBField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn) {\n          for (let i = 0; i < updates.playerBField.length; i++) {\n            let attackACard = false;\n\n            if (this.state.playerBField[i].Health !== updates.playerBField[i].Health) {\n              attackACard = true;\n            }\n\n            if (attackACard) {\n              window.attack();\n            }\n          }\n        }\n\n        if (updates.player1 && updates.player2) {\n          if (updates.playerAField && updates.playerAField.length > this.state.playerAField.length || updates.playerBField && updates.playerBField.length > this.state.playerBField.length) {\n            window.playCard1();\n          }\n\n          if (updates.playerAField && updates.playerAField.length < this.state.playerAField.length || updates.playerBField && updates.playerBField.length < this.state.playerBField.length) {\n            window.death();\n          }\n\n          if (updates.playerAChamp && updates.playerAChamp !== this.state.playerAChamp || updates.playerBChamp && updates.playerBChamp !== this.state.playerBChamp) {\n            //seems like other sounds are getting triggered\n            window.championAttack();\n          }\n\n          if (updates.playerAMana === 0) {\n            this.setState({\n              playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n              playerAHand: updates.playerAHand || this.state.playerAHand,\n              playerAField: updates.playerAField || this.state.playerAField,\n              playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n              playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n              playerBHand: updates.playerBHand || this.state.playerBHand,\n              playerBField: updates.playerBField || this.state.playerBField,\n              playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n              playerATurn: this.state.playerATurn,\n              playerBturn: this.state.playerBturn,\n              playerAMana: updates.playerAMana,\n              playerBMana: updates.playerBMana || this.state.playerBMana,\n              aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n              bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n              currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n            });\n          } else if (updates.playerBMana === 0) {\n            this.setState({\n              playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n              playerAHand: updates.playerAHand || this.state.playerAHand,\n              playerAField: updates.playerAField || this.state.playerAField,\n              playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n              playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n              playerBHand: updates.playerBHand || this.state.playerBHand,\n              playerBField: updates.playerBField || this.state.playerBField,\n              playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n              playerATurn: this.state.playerATurn,\n              playerBturn: this.state.playerBturn,\n              playerAMana: updates.playerAMana || this.state.playerAMana,\n              playerBMana: updates.playerBMana,\n              aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n              bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n              currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n            });\n          } else if (updates.playerATurn || updates.playerBturn) {\n            this.setState({\n              playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n              playerAHand: updates.playerAHand || this.state.playerAHand,\n              playerAField: updates.playerAField || this.state.playerAField,\n              playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n              playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n              playerBHand: updates.playerBHand || this.state.playerBHand,\n              playerBField: updates.playerBField || this.state.playerBField,\n              playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n              playerATurn: updates.playerATurn,\n              playerBturn: updates.playerBturn,\n              playerAMana: updates.playerAMana || this.state.playerAMana,\n              playerBMana: updates.playerBMana || this.state.playerBMana,\n              aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n              bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n              currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n            });\n          } else {\n            this.setState({\n              playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n              playerAHand: updates.playerAHand || this.state.playerAHand,\n              playerAField: updates.playerAField || this.state.playerAField,\n              playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n              playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n              playerBHand: updates.playerBHand || this.state.playerBHand,\n              playerBField: updates.playerBField || this.state.playerBField,\n              playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n              playerATurn: this.state.playerATurn,\n              playerBturn: this.state.playerBturn,\n              playerAMana: updates.playerAMana || this.state.playerAMana,\n              playerBMana: updates.playerBMana || this.state.playerBMana,\n              aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n              bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n              currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n            });\n          }\n        }\n      });\n    };\n\n    this.changeATurn = () => {\n      if (this.state.playerATurn === false) {\n        return;\n      } else {\n        let currentAMaxMana = this.state.aMaxMana;\n        let newMana;\n        let modal = document.getElementById(\"myModal\");\n\n        if (currentAMaxMana <= 45) {\n          currentAMaxMana += 5;\n          newMana = currentAMaxMana;\n          API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name);\n        } else {\n          currentAMaxMana = 50;\n          newMana = currentAMaxMana;\n          API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name);\n        }\n      }\n    };\n\n    this.changeBTurn = () => {\n      if (this.state.playerBturn === false) {\n        return;\n      } else {\n        let currentBMaxMana = this.state.bMaxMana;\n        let newMana;\n\n        if (currentBMaxMana <= 45) {\n          currentBMaxMana += 5;\n          newMana = currentBMaxMana;\n          API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name);\n        } else {\n          currentBMaxMana = 50;\n          newMana = currentBMaxMana;\n          API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name);\n        }\n      }\n    };\n\n    this.getList = id => this.state[this.id2List[id]];\n\n    this.onDragEnd = result => {\n      const source = result.source,\n            destination = result.destination; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId > 0 && destination.droppableId === \"fieldA\") {\n        return;\n      }\n\n      if (source.droppableId > 0 && destination.droppableId === \"fieldB\") {\n        return;\n      }\n\n      if (source.droppableId === \"fieldB\" && destination.droppableId === \"fieldB\") {\n        return;\n      } //playing a card for top player\n\n\n      if (source.droppableId === \"playerHandA\" && destination.droppableId === \"fieldA\" && this.state.playerATurn === true) {\n        let currentMana = this.state.playerAMana;\n\n        if (currentMana >= 10) {\n          const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n          currentMana -= 10;\n          let playerAField = result.fieldA;\n          let playerAHand = result.playerHandA;\n          let playerAMana = currentMana;\n          API.playAHand(playerAField, playerAHand, playerAMana);\n        } else {\n          let modal = document.getElementById(\"myModalManaPlay\");\n          setTimeout(function () {\n            modal.style.display = \"block\";\n          }, 300);\n          setTimeout(function () {\n            modal.style.display = \"none\";\n          }, 2500);\n        }\n      } //playing a card for bottom player\n\n\n      if (source.droppableId === \"playerHandB\" && destination.droppableId === \"fieldB\" && this.state.playerBturn === true) {\n        let currentMana = this.state.playerBMana;\n\n        if (currentMana >= 10) {\n          const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n          currentMana -= 10;\n          let playerBField = result.fieldB;\n          let playerBHand = result.playerHandB;\n          let playerBMana = currentMana;\n          let name = this.state.player1name;\n          API.playBHand(playerBField, playerBHand, playerBMana, name);\n        } else {\n          let modal = document.getElementById(\"myModalManaPlay\");\n          setTimeout(function () {\n            modal.style.display = \"block\";\n          }, 300);\n          setTimeout(function () {\n            modal.style.display = \"none\";\n          }, 2500);\n        }\n      } //attacking player A Champion\n\n\n      if (source.droppableId !== \"playerHandB\" && destination.droppableId === \"playerChampionA\") {\n        if (this.state.playerBturn) {\n          var playerBField = this.state.playerBField;\n          var playerBMana = this.state.playerBMana;\n          var playerAChampion = this.state.playerAChamp;\n          var playerBGraveyard = this.state.playerBGraveyard;\n          var attackingCardIndex;\n          var defendingCardIndex = 0;\n\n          if (playerBMana >= 9) {\n            for (var i = 0; i < playerBField.length; i++) {\n              if (playerBField[i].id === result.source.droppableId) {\n                attackingCardIndex = i;\n              }\n            }\n\n            if (attackingCardIndex === undefined) {\n              return;\n            } else {\n              var attackingCardType = playerBField[attackingCardIndex].TypeText;\n              var defendingCardWeakness = playerAChampion[defendingCardIndex].WeakAgainstText;\n              var defendingCardStrength = playerAChampion[defendingCardIndex].StrongAgainstText;\n\n              if (attackingCardType === defendingCardWeakness) {\n                playerAChampion[0].Health -= 10;\n                playerBMana -= 9;\n              } else if (attackingCardType === defendingCardStrength) {\n                playerAChampion[0].Health -= 3;\n                playerBField[attackingCardIndex].Health -= 3;\n                playerBMana -= 9;\n              } else {\n                playerAChampion[0].Health -= 6;\n                playerBMana -= 9;\n              }\n\n              if (playerBField[attackingCardIndex].Health <= 0) {\n                var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                playerBGraveyard.push(removedBCard);\n              }\n\n              window.attack();\n              API.attackAChampion(playerAChampion, playerBField, playerBMana, playerBGraveyard);\n            }\n          } else {\n            //not enough mana\n            let modal = document.getElementById(\"myModalManaAttack\");\n            setTimeout(function () {\n              modal.style.display = \"block\";\n            }, 300);\n            setTimeout(function () {\n              modal.style.display = \"none\";\n            }, 2500);\n          }\n        }\n      } //attacking playerB Champ\n\n\n      if (source.droppableId !== \"playerHandA\" && destination.droppableId === \"playerChampionB\") {\n        if (this.state.playerATurn) {\n          var playerAField = this.state.playerAField;\n          var playerAMana = this.state.playerAMana;\n          var playerBChampion = this.state.playerBChamp;\n          var playerAGraveyard = this.state.playerAGraveyard;\n          var attackingCardIndex;\n          var defendingCardIndex = 0;\n\n          if (playerAMana >= 9) {\n            for (var i = 0; i < playerAField.length; i++) {\n              if (playerAField[i].id === result.source.droppableId) {\n                attackingCardIndex = i;\n              }\n            }\n\n            if (attackingCardIndex === undefined) {\n              return;\n            } else {\n              var attackingCardType = playerAField[attackingCardIndex].TypeText;\n              var defendingCardWeakness = playerBChampion[defendingCardIndex].WeakAgainstText;\n              var defendingCardStrength = playerBChampion[defendingCardIndex].StrongAgainstText;\n\n              if (attackingCardType === defendingCardWeakness) {\n                playerBChampion[0].Health -= 10;\n                playerAMana -= 9;\n              } else if (attackingCardType === defendingCardStrength) {\n                playerBChampion[0].Health -= 3;\n                playerAField[attackingCardIndex].Health -= 3;\n                playerAMana -= 9;\n              } else {\n                playerBChampion[0].Health -= 6;\n                playerAMana -= 9;\n              }\n\n              if (playerAField[attackingCardIndex].Health <= 0) {\n                var removedACard = playerAField.splice(attackingCardIndex, 1);\n                playerAGraveyard.push(removedACard);\n              }\n\n              window.attack();\n              API.attackBChampion(playerBChampion, playerAField, playerAMana, playerAGraveyard);\n            }\n          } else {\n            //some popup saying you do not have enough mana\n            let modal = document.getElementById(\"myModalManaAttack\");\n            setTimeout(function () {\n              modal.style.display = \"block\";\n            }, 300);\n            setTimeout(function () {\n              modal.style.display = \"none\";\n            }, 2500);\n          }\n        }\n      } //attacking a minion\n\n\n      if (destination.droppableId !== \"playerChampionA\" && destination.droppableId !== \"playerChampionB\" && source.droppableId !== \"fieldA\" && source.droppableId !== \"fieldB\" && source.droppableId !== \"playerHandA\" && source.droppableId !== \"playerHandB\") {\n        if (this.state.playerATurn) {\n          var playerAField = this.state.playerAField;\n          var playerBField = this.state.playerBField;\n          var playerAMana = this.state.playerAMana;\n          var playerBGraveyard = this.state.playerBGraveyard;\n          var playerAGraveyard = this.state.playerAGraveyard;\n          var attackingCardIndex;\n          var defendingCardIndex;\n\n          if (playerAMana >= 9) {\n            for (var i = 0; i < playerAField.length; i++) {\n              if (playerAField[i].id === result.source.droppableId) {\n                attackingCardIndex = i;\n              }\n            }\n\n            for (var j = 0; j < playerBField.length; j++) {\n              if (playerBField[j].id === result.destination.droppableId) {\n                defendingCardIndex = j;\n              }\n            }\n\n            if (defendingCardIndex === undefined) {\n              return;\n            } else if (attackingCardIndex === undefined) {} else {\n              var attackingCardType = playerAField[attackingCardIndex].TypeText;\n              var defendingCardWeakness = playerBField[defendingCardIndex].WeakAgainst;\n              var defendingCardStrength = playerBField[defendingCardIndex].StrongAgainst;\n\n              if (attackingCardType === defendingCardWeakness) {\n                playerBField[defendingCardIndex].Health -= 10;\n                playerAMana -= 9;\n              } else if (attackingCardType === defendingCardStrength) {\n                playerBField[defendingCardIndex].Health -= 3;\n                playerAField[attackingCardIndex].Health -= 3;\n                playerAMana -= 9;\n              } else {\n                playerBField[defendingCardIndex].Health -= 6;\n                playerAMana -= 9;\n              }\n\n              if (playerBField[defendingCardIndex].Health <= 0) {\n                var removedBCard = playerBField.splice(defendingCardIndex, 1);\n                playerBGraveyard.push(removedBCard);\n              }\n\n              if (playerAField[attackingCardIndex].Health <= 0) {\n                var removedACard = playerAField.splice(attackingCardIndex, 1);\n                playerAGraveyard.push(removedACard);\n              }\n\n              window.attack();\n              API.attackBMinion(playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard);\n            }\n          } else {\n            //add some modal to say out of mana\n            let modal = document.getElementById(\"myModalManaAttack\");\n            setTimeout(function () {\n              modal.style.display = \"block\";\n            }, 300);\n            setTimeout(function () {\n              modal.style.display = \"none\";\n            }, 2500);\n          }\n        } //player B's turn\n        else {\n            var playerAField = this.state.playerAField;\n            var playerBField = this.state.playerBField;\n            var playerBMana = this.state.playerBMana;\n            var playerAGraveyard = this.state.playerAGraveyard;\n            var playerBGraveyard = this.state.playerBGraveyard;\n            var attackingCardIndex;\n            var defendingCardIndex;\n\n            if (playerBMana >= 9) {\n              for (var i = 0; i < playerBField.length; i++) {\n                if (playerBField[i].id === result.source.droppableId) {\n                  attackingCardIndex = i;\n                }\n              }\n\n              for (var j = 0; j < playerAField.length; j++) {\n                if (playerAField[j].id === result.destination.droppableId) {\n                  defendingCardIndex = j;\n                }\n              }\n\n              if (defendingCardIndex === undefined) {\n                return;\n              } else if (attackingCardIndex === undefined) {} else {\n                var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                var defendingCardWeakness = playerAField[defendingCardIndex].WeakAgainst;\n                var defendingCardStrength = playerAField[defendingCardIndex].StrongAgainst;\n\n                if (attackingCardType === defendingCardWeakness) {\n                  playerAField[defendingCardIndex].Health -= 10;\n                  playerBMana -= 9;\n                } else if (attackingCardType === defendingCardStrength) {\n                  playerAField[defendingCardIndex].Health -= 3;\n                  playerBField[attackingCardIndex].Health -= 3;\n                  playerBMana -= 9;\n                } else {\n                  playerAField[defendingCardIndex].Health -= 6;\n                  playerBMana -= 9;\n                }\n\n                if (playerAField[defendingCardIndex].Health <= 0) {\n                  var removedACard = playerAField.splice(defendingCardIndex, 1);\n                  playerAGraveyard.push(removedACard);\n                }\n\n                if (playerBField[attackingCardIndex].Health <= 0) {\n                  var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                  playerBGraveyard.push(removedBCard);\n                }\n\n                window.attack();\n                API.attackAMinion(playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard);\n              }\n            } else {\n              //add some modal to say out of mana\n              let modal = document.getElementById(\"myModalManaAttack\");\n              setTimeout(function () {\n                modal.style.display = \"block\";\n              }, 300);\n              setTimeout(function () {\n                modal.style.display = \"none\";\n              }, 2500);\n            }\n          }\n      }\n    };\n\n    this.state = {\n      playerAChamp: this.props.p2champ,\n      playerAHand: this.props.p2deck,\n      playerAField: [],\n      playerAGraveyard: [],\n      playerBChamp: this.props.p1champ,\n      playerBHand: this.props.p1deck,\n      playerBField: [],\n      playerBGraveyard: [],\n      playerATurn: false,\n      playerBturn: true,\n      playerAMana: 20,\n      playerBMana: 20,\n      aMaxMana: 20,\n      bMaxMana: 20,\n      player1name: this.props.p1name,\n      player2name: this.props.p2name,\n      currentPlayerTurn: this.props.p1name,\n      isAttacked: false,\n      isKilled: false\n    };\n    this.id2List = {\n      playerHandA: 'playerAHand',\n      fieldA: 'playerAField',\n      playerHandB: 'playerBHand',\n      fieldB: 'playerBField'\n    };\n  }\n\n  render() {\n    if (this.state.playerAChamp[0].Health <= 0 || this.state.playerAField.length === 0 && this.state.playerAHand.length === 0) {\n      return React.createElement(GameOver, {\n        value: this.state,\n        winner: 'playerB',\n        player1: this.state.player1name,\n        player2: this.state.player2name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      });\n    } else if (this.state.playerBChamp[0].Health <= 0 || this.state.playerBField.length === 0 && this.state.playerBHand.length === 0) {\n      return React.createElement(GameOver, {\n        value: this.state,\n        winner: 'playerA',\n        player1: this.state.player1name,\n        player2: this.state.player2name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      });\n    } else return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outerContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"containerA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rowA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"playerNameA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, this.state.player2name), React.createElement(\"div\", {\n      className: \"playerManaA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, this.state.playerAMana), React.createElement(\"div\", {\n      className: \"endTurnA\",\n      onClick: this.changeATurn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, \"End Turn\"), React.createElement(Droppable, {\n      droppableId: \"playerChampionA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"championA\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, this.state.playerAChamp.map(champion => React.createElement(\"div\", {\n      className: \"playedChampionCard\",\n      id: champion.id,\n      key: champion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"playedChampionHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, champion.Health || 2), React.createElement(\"img\", {\n      className: \"playedChampionWeakness\",\n      src: champion.WeakAgainst,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"playedChampionStrength\",\n      src: champion.StrongAgainst,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"playedChampionPortrait\",\n      src: champion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }))), provided.placeholder)), React.createElement(Droppable, {\n      droppableId: \"playerHandA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"playerHandA\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, this.state.playerAHand.map((minion, index) => React.createElement(Draggable, {\n      key: minion.id,\n      draggableId: minion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"minionHandCardA\",\n      id: minion.id,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"MinionHandName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, minion.Name || \"Minion\"), React.createElement(\"p\", {\n      className: \"minionHandHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, minion.Health || 2), React.createElement(\"div\", {\n      className: \"ability\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"minionHandAttack1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, minion.Attack1Name || \"Ability 1\"), React.createElement(\"span\", {\n      className: \"minionHandAttack1Power\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }), \"Dmg: \", minion.Attack1Power), React.createElement(\"span\", {\n      className: \"minionHandAttack1Cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, \"Cost: \", minion.Attack1Cost)), React.createElement(\"img\", {\n      className: \"minionHandWeakness\",\n      src: minion.WeakAgainstImg,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionHandStrength\",\n      src: minion.StrongAgainstImg,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionHandPortrait\",\n      src: minion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    })))), provided.placeholder))), React.createElement(Droppable, {\n      droppableId: \"fieldA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"fieldA\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, this.state.playerAField.map((minion, index) => React.createElement(Droppable, {\n      droppableId: minion.id,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"droppableMinion\",\n      ref: provided.innerRef,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, React.createElement(Draggable, {\n      key: minion.id,\n      draggableId: minion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"minionFieldCardA\",\n      id: minion.id,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"innerA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"minionFieldHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }, minion.Health || 2), React.createElement(\"div\", {\n      className: \"abilityField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"minionFieldAttack1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    }, minion.Attack1Name || \"Ability 1\"), React.createElement(\"span\", {\n      className: \"minionFieldAttack1Power\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }), minion.Attack1Power), React.createElement(\"span\", {\n      className: \"minionFieldAttack1Cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, minion.Attack1Cost)), React.createElement(\"img\", {\n      className: \"minionFieldWeakness\",\n      src: minion.WeakAgainstImg,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionFieldStrength\",\n      src: minion.StrongAgainstImg,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionFieldPortrait\",\n      src: minion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    })))), provided.placeholder))), provided.placeholder))), React.createElement(\"div\", {\n      id: \"myModal\",\n      class: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, this.state.currentPlayerTurn + \"'s Turn\"))), React.createElement(\"div\", {\n      id: \"myModalManaPlay\",\n      class: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, \"You need at least 10 mana to play a card\"))), React.createElement(\"div\", {\n      id: \"myModalManaAttack\",\n      class: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, \"You need at least 9 mana to attack a card\"))), React.createElement(\"div\", {\n      id: \"myModalQuit\",\n      class: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, \"Player Disconnected, heading to lobby\"))), React.createElement(\"div\", {\n      className: \"containerB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"fieldB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"fieldB\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, this.state.playerBField.map((minion, index) => React.createElement(Droppable, {\n      droppableId: minion.id,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"droppableMinion\",\n      ref: provided.innerRef,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808\n      },\n      __self: this\n    }, React.createElement(Draggable, {\n      key: minion.id,\n      draggableId: minion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"minionFieldCardB\",\n      id: minion.id,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"innerB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"minionFieldHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825\n      },\n      __self: this\n    }, minion.Health || 2), React.createElement(\"div\", {\n      className: \"abilityField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"minionFieldAttack1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828\n      },\n      __self: this\n    }, minion.Attack1Name || \"Ability 1\"), React.createElement(\"span\", {\n      className: \"minionFieldAttack1Power\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }), minion.Attack1Power), React.createElement(\"span\", {\n      className: \"minionFieldAttack1Cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }, minion.Attack1Cost)), React.createElement(\"img\", {\n      className: \"minionFieldWeakness\",\n      src: minion.WeakAgainstImg,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionFieldStrength\",\n      src: minion.StrongAgainstImg,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionFieldPortrait\",\n      src: minion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835\n      },\n      __self: this\n    })))), provided.placeholder))), provided.placeholder)), React.createElement(\"div\", {\n      className: \"rowB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"endTurnB\",\n      onClick: this.changeBTurn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, \"End Turn\"), React.createElement(\"div\", {\n      className: \"playerManaB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, this.state.playerBMana), React.createElement(\"div\", {\n      className: \"playerNameB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, this.state.player1name), React.createElement(Droppable, {\n      droppableId: \"playerChampionB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"championB\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.state.playerBChamp.map(champion => React.createElement(\"div\", {\n      className: \"playedChampionCard\",\n      id: champion.id,\n      key: champion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"playedChampionHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }, champion.Health || 2), React.createElement(\"img\", {\n      className: \"playedChampionWeakness\",\n      src: champion.WeakAgainst,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"playedChampionStrength\",\n      src: champion.StrongAgainst,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"playedChampionPortrait\",\n      src: champion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    }))), provided.placeholder)), React.createElement(Droppable, {\n      droppableId: \"playerHandB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"playerHandB\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }, this.state.playerBHand.map((minion, index) => React.createElement(Draggable, {\n      key: minion.id,\n      draggableId: minion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"minionHandCardB\",\n      id: minion.id,\n      key: minion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"MinionHandName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, minion.Name || \"Minion\"), React.createElement(\"p\", {\n      className: \"minionHandHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, minion.Health || 2), React.createElement(\"div\", {\n      className: \"ability\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"minionHandAttack1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, minion.Attack1Name || \"Ability 1\"), React.createElement(\"span\", {\n      className: \"minionHandAttack1Power\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }), \"Dmg: \", minion.Attack1Power), React.createElement(\"span\", {\n      className: \"minionHandAttack1Cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, \"Cost: \", minion.Attack1Cost)), React.createElement(\"img\", {\n      className: \"minionHandWeakness\",\n      src: minion.WeakAgainstImg,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionHandStrength\",\n      src: minion.StrongAgainstImg,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"minionHandPortrait\",\n      src: minion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917\n      },\n      __self: this\n    })))), provided.placeholder))))));\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["C:/Users/jrave/Desktop/BusinessSites/Animalchemists/phoneGapAnima1/src/components/board/board.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","API","isUndefined","GameOver","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","GameBoard","constructor","props","componentDidMount","joinGame","updates","console","log","state","currentPlayerTurn","window","changeTurn","modal","document","getElementById","setTimeout","style","display","playerDisconnected","location","reload","playerAField","length","i","attackACard","Health","attack","playerBField","player1","player2","playCard1","death","playerAChamp","playerBChamp","championAttack","playerAMana","setState","playerAHand","playerAGraveyard","playerBHand","playerBGraveyard","playerATurn","playerBturn","playerBMana","aMaxMana","bMaxMana","p1name","changeATurn","currentAMaxMana","newMana","changeAsTurn","player1name","changeBTurn","currentBMaxMana","changeBsTurn","player2name","getList","id","id2List","onDragEnd","currentMana","fieldA","playerHandA","playAHand","fieldB","playerHandB","name","playBHand","playerAChampion","attackingCardIndex","defendingCardIndex","undefined","attackingCardType","TypeText","defendingCardWeakness","WeakAgainstText","defendingCardStrength","StrongAgainstText","removedBCard","push","attackAChampion","playerBChampion","removedACard","attackBChampion","j","WeakAgainst","StrongAgainst","attackBMinion","attackAMinion","p2champ","p2deck","p1champ","p1deck","p2name","isAttacked","isKilled","render","provided","innerRef","map","champion","Img","placeholder","minion","draggableProps","dragHandleProps","Name","Attack1Name","Attack1Power","Attack1Cost","WeakAgainstImg","StrongAgainstImg"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./board.css\";\nimport \"./boardCards.css\";\nimport { DragDropContext, Droppable, Draggable } from '../../../node_modules/react-beautiful-dnd';\nimport API from '../../utils/API';\nimport { isUndefined } from \"util\";\nimport GameOver from '../gameOver/gameOver'\n\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n    const sourceClone = Array.from(source);\n\n    const destClone = Array.from(destination);\n\n\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n};\n\nclass GameBoard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerAChamp: this.props.p2champ,\n            playerAHand: this.props.p2deck,\n            playerAField: [],\n            playerAGraveyard: [],\n            playerBChamp: this.props.p1champ,\n            playerBHand: this.props.p1deck,\n            playerBField: [],\n            playerBGraveyard: [],\n            playerATurn: false,\n            playerBturn: true,\n            playerAMana: 20,\n            playerBMana: 20,\n            aMaxMana: 20,\n            bMaxMana: 20,\n            player1name: this.props.p1name,\n            player2name: this.props.p2name,\n            currentPlayerTurn: this.props.p1name,\n            isAttacked: false,\n            isKilled: false\n        }\n\n\n        this.id2List = {\n            playerHandA: 'playerAHand',\n            fieldA: 'playerAField',\n            playerHandB: 'playerBHand',\n            fieldB: 'playerBField',\n        };\n    }\n\n    componentDidMount = () => {\n        // var audio = new Audio('./sounds/attack.mp3');\n        // audio.play();\n        API.joinGame(updates => {\n            console.log(updates);\n            console.log(this.state)\n            if(this.state.currentPlayerTurn !== updates.currentPlayerTurn){\n                window.changeTurn()\n                let modal = document.getElementById(\"myModal\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n            if (updates.playerDisconnected === true){\n                let modal = document.getElementById(\"myModalQuit\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                \n                setTimeout(function(){window.location.reload()}, 3000)\n            }\n\n            if (updates.playerAField && updates.playerAField.length > 0 && this.state.playerAField.length > 0 && updates.playerAField.length === this.state.playerAField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn){\n                \n                for (let i = 0; i < updates.playerAField.length; i++){\n                    \n                    let attackACard = false\n                    if (this.state.playerAField[i].Health !== updates.playerAField[i].Health){\n                        attackACard = true\n                    }\n                    if (attackACard){\n                        \n                        window.attack()\n                    }\n                \n                }}\n\n                \n                if (updates.playerBField && updates.playerBField.length > 0 && this.state.playerBField.length > 0 && updates.playerBField.length === this.state.playerBField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn) {\n                \n                \n                for (let i = 0; i < updates.playerBField.length; i++){\n                    \n                    let attackACard = false\n                    if (this.state.playerBField[i].Health !== updates.playerBField[i].Health){\n                        attackACard = true\n                    }\n                    if (attackACard){\n                        \n                        window.attack()\n                    }\n                }\n                }\n            \n            if (updates.player1 && updates.player2) {\n                \n                if (updates.playerAField && updates.playerAField.length > this.state.playerAField.length  || updates.playerBField && updates.playerBField.length > this.state.playerBField.length){\n                    \n                    window.playCard1()\n                    \n                }\n                if (updates.playerAField && updates.playerAField.length < this.state.playerAField.length  || updates.playerBField && updates.playerBField.length < this.state.playerBField.length){\n                    \n                    window.death()\n                  \n                }\n\n                if (updates.playerAChamp && updates.playerAChamp !== this.state.playerAChamp  || updates.playerBChamp && updates.playerBChamp !== this.state.playerBChamp){\n                    \n                    //seems like other sounds are getting triggered\n                    window.championAttack()\n                  \n                }\n                \n                if (updates.playerAMana === 0) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana, \n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else if (updates.playerBMana === 0) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else if (updates.playerATurn || updates.playerBturn) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: updates.playerATurn,\n                        playerBturn: updates.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                }\n                \n            }\n        })\n    }\n\n    changeATurn = () => {\n\n        if (this.state.playerATurn === false) {\n            return\n        } else {\n            let currentAMaxMana = this.state.aMaxMana\n            let newMana;\n            let modal = document.getElementById(\"myModal\");\n            if (currentAMaxMana <= 45) {\n                currentAMaxMana += 5;\n                newMana = currentAMaxMana\n                API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name)\n            }\n            else {\n                currentAMaxMana = 50;\n                newMana = currentAMaxMana;\n                API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name)\n            }\n            \n        }\n    }\n\n    changeBTurn = () => {\n\n        if (this.state.playerBturn === false) {\n            return\n        } else {\n            let currentBMaxMana = this.state.bMaxMana\n            let newMana;\n            \n            if (currentBMaxMana <= 45) {\n                currentBMaxMana += 5\n                newMana = currentBMaxMana;\n                API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name);\n            }\n            else {\n                currentBMaxMana = 50;\n                newMana = currentBMaxMana;\n                API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name)\n            }\n            \n        }\n    }\n\n    getList = id => this.state[this.id2List[id]];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n        \n\n        // dropped outside the list\n        if (!destination) {\n            \n            return;\n        }\n        if (source.droppableId > 0 && destination.droppableId === \"fieldA\") {\n            return\n        }\n        if (source.droppableId > 0 && destination.droppableId === \"fieldB\") {\n            return\n        }\n        if (source.droppableId === \"fieldB\" && destination.droppableId === \"fieldB\") {\n            return\n        }\n\n\n        //playing a card for top player\n        if (source.droppableId === \"playerHandA\" && destination.droppableId === \"fieldA\" && this.state.playerATurn === true) {\n            let currentMana = this.state.playerAMana;\n            if (currentMana >= 10) {\n                const result = move(\n                    this.getList(source.droppableId),\n                    this.getList(destination.droppableId),\n                    source,\n                    destination\n                );\n                currentMana -= 10;\n                let playerAField = result.fieldA\n                let playerAHand = result.playerHandA\n                let playerAMana = currentMana\n                \n               \n                API.playAHand(playerAField, playerAHand, playerAMana)\n            } else {\n                \n                let modal = document.getElementById(\"myModalManaPlay\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n            \n        }\n        //playing a card for bottom player\n        if (source.droppableId === \"playerHandB\" && destination.droppableId === \"fieldB\" && this.state.playerBturn === true) {\n            let currentMana = this.state.playerBMana;\n            if (currentMana >= 10) {\n                const result = move(\n                    this.getList(source.droppableId),\n                    this.getList(destination.droppableId),\n                    source,\n                    destination\n                );\n                currentMana -= 10;\n                let playerBField = result.fieldB\n                let playerBHand = result.playerHandB\n                let playerBMana = currentMana\n                let name = this.state.player1name\n                \n                \n                API.playBHand(playerBField, playerBHand, playerBMana, name)\n                \n            } else {\n                \n                let modal = document.getElementById(\"myModalManaPlay\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n        }\n        //attacking player A Champion\n\n        if (source.droppableId !== \"playerHandB\" && destination.droppableId === \"playerChampionA\") {\n\n            if (this.state.playerBturn) {\n                \n                var playerBField = this.state.playerBField;\n                var playerBMana = this.state.playerBMana;\n                var playerAChampion = this.state.playerAChamp;\n                var playerBGraveyard = this.state.playerBGraveyard\n                var attackingCardIndex;\n                var defendingCardIndex = 0;\n\n                if (playerBMana >= 9) {\n                    for (var i = 0; i < playerBField.length; i++) {\n                        if (playerBField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    if (attackingCardIndex === undefined) {\n                       \n                        return\n                    } else {\n\n                        \n\n                        var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerAChampion[defendingCardIndex].WeakAgainstText;\n                        var defendingCardStrength = playerAChampion[defendingCardIndex].StrongAgainstText;\n\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerAChampion[0].Health -= 10;\n                            playerBMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerAChampion[0].Health -= 3;\n                            playerBField[attackingCardIndex].Health -= 3;\n                            playerBMana -= 9;\n                        } else {\n                            playerAChampion[0].Health -= 6;\n                            playerBMana -= 9;\n                        }\n\n                        if (playerBField[attackingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n                        window.attack()\n                        API.attackAChampion(playerAChampion, playerBField, playerBMana, playerBGraveyard)\n                    }\n                } else {\n                    //not enough mana\n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n\n        }\n\n        //attacking playerB Champ\n\n        if (source.droppableId !== \"playerHandA\" && destination.droppableId === \"playerChampionB\") {\n\n            if (this.state.playerATurn) {\n                \n                var playerAField = this.state.playerAField;\n                var playerAMana = this.state.playerAMana;\n                var playerBChampion = this.state.playerBChamp;\n                var playerAGraveyard = this.state.playerAGraveyard\n                var attackingCardIndex;\n                var defendingCardIndex = 0;\n\n                if (playerAMana >= 9) {\n                    for (var i = 0; i < playerAField.length; i++) {\n                        if (playerAField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    if (attackingCardIndex === undefined) {\n                       \n                        return\n                    } else {\n                        \n\n                        var attackingCardType = playerAField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerBChampion[defendingCardIndex].WeakAgainstText;\n                        var defendingCardStrength = playerBChampion[defendingCardIndex].StrongAgainstText;\n\n                       \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerBChampion[0].Health -= 10;\n                            playerAMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerBChampion[0].Health -= 3;\n                            playerAField[attackingCardIndex].Health -= 3;\n                            playerAMana -= 9;\n                        } else {\n                            playerBChampion[0].Health -= 6;\n                            playerAMana -= 9;\n                        }\n\n                        if (playerAField[attackingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(attackingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n                        window.attack()\n                        API.attackBChampion(playerBChampion, playerAField, playerAMana, playerAGraveyard)\n                    }\n                } else {\n                    //some popup saying you do not have enough mana\n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n\n            }\n        }\n        //attacking a minion\n        if (destination.droppableId !== \"playerChampionA\" && destination.droppableId !== \"playerChampionB\" && source.droppableId !== \"fieldA\" && source.droppableId !== \"fieldB\" && source.droppableId !== \"playerHandA\" && source.droppableId !== \"playerHandB\") {\n            \n            if (this.state.playerATurn) {\n                var playerAField = this.state.playerAField;\n                var playerBField = this.state.playerBField;\n                var playerAMana = this.state.playerAMana;\n                var playerBGraveyard = this.state.playerBGraveyard;\n                var playerAGraveyard = this.state.playerAGraveyard;\n                var attackingCardIndex;\n                var defendingCardIndex;\n\n                if (playerAMana >= 9) {\n\n                    for (var i = 0; i < playerAField.length; i++) {\n                        if (playerAField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    for (var j = 0; j < playerBField.length; j++) {\n                        if (playerBField[j].id === result.destination.droppableId) {\n                            defendingCardIndex = j\n                        }\n                    }\n                    \n\n                    if (defendingCardIndex === undefined) {\n                        \n                        return\n                    } else if (attackingCardIndex === undefined) {\n                       \n\n                    } else {\n\n                        var attackingCardType = playerAField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerBField[defendingCardIndex].WeakAgainst;\n                        var defendingCardStrength = playerBField[defendingCardIndex].StrongAgainst;\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerBField[defendingCardIndex].Health -= 10;\n                            playerAMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerBField[defendingCardIndex].Health -= 3;\n                            playerAField[attackingCardIndex].Health -= 3;\n                            playerAMana -= 9;\n                        } else {\n                            playerBField[defendingCardIndex].Health -= 6;\n                            playerAMana -= 9;\n                        }\n\n                        if (playerBField[defendingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(defendingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n\n                        if (playerAField[attackingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(attackingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n\n                        window.attack()\n                        API.attackBMinion(playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard)\n\n                    }\n                }\n                else {\n                    //add some modal to say out of mana\n                    \n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n            //player B's turn\n            else {\n                var playerAField = this.state.playerAField;\n                var playerBField = this.state.playerBField;\n                var playerBMana = this.state.playerBMana;\n                var playerAGraveyard = this.state.playerAGraveyard;\n                var playerBGraveyard = this.state.playerBGraveyard;\n                var attackingCardIndex;\n                var defendingCardIndex;\n\n                if (playerBMana >= 9) {\n\n                    for (var i = 0; i < playerBField.length; i++) {\n                        if (playerBField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    for (var j = 0; j < playerAField.length; j++) {\n                        if (playerAField[j].id === result.destination.droppableId) {\n                            defendingCardIndex = j\n                        }\n                    }\n                    \n\n                    if (defendingCardIndex === undefined) {\n                        \n                        return\n                    } else if (attackingCardIndex === undefined) {\n                       \n                    }\n                    else {\n\n                        var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerAField[defendingCardIndex].WeakAgainst;\n                        var defendingCardStrength = playerAField[defendingCardIndex].StrongAgainst;\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerAField[defendingCardIndex].Health -= 10;\n                            playerBMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerAField[defendingCardIndex].Health -= 3;\n                            playerBField[attackingCardIndex].Health -= 3;\n                            playerBMana -= 9;\n                        } else {\n                            playerAField[defendingCardIndex].Health -= 6;\n                            playerBMana -= 9;\n                        }\n\n                        if (playerAField[defendingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(defendingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n\n                        if (playerBField[attackingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n\n                        window.attack()\n                        API.attackAMinion(playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard)\n                        \n                    }\n                }\n                else {\n                    //add some modal to say out of mana\n                    \n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n        }\n\n    };\n\n    render() {\n        if (this.state.playerAChamp[0].Health <= 0 || (this.state.playerAField.length === 0 && this.state.playerAHand.length === 0)) {\n            return (\n                <GameOver value={this.state} winner={'playerB'} player1 ={this.state.player1name} player2 ={this.state.player2name}></GameOver>\n            )\n        } else if (this.state.playerBChamp[0].Health <= 0 || (this.state.playerBField.length === 0 && this.state.playerBHand.length === 0)) {\n            return (\n                <GameOver value={this.state} winner={'playerA'} player1 ={this.state.player1name} player2 ={this.state.player2name}></GameOver>\n            )\n        } else\n            return (\n\n                <DragDropContext onDragEnd={this.onDragEnd}>\n\n                    <div className=\"outerContainer\">\n\n                        <div className=\"containerA\">\n\n                            <div className=\"rowA\">\n\n                                <div className=\"playerNameA\">\n                                    {this.state.player2name}\n                                </div>\n\n                                <div className=\"playerManaA\">\n                                    {this.state.playerAMana}\n                                </div>\n\n                                <div className=\"endTurnA\" onClick={this.changeATurn}>\n                                    End Turn\n                                </div>\n\n                                <Droppable droppableId=\"playerChampionA\">\n                                    {(provided) => (\n                                        <div className=\"championA\" ref={provided.innerRef}>\n                                            {this.state.playerAChamp.map((champion) => (\n                                                <div\n                                                    className=\"playedChampionCard\"\n                                                    id={champion.id}\n                                                    key={champion.id}\n                                                >\n                                                    <p className=\"playedChampionHealth\">{champion.Health || 2}</p>\n                                                    <img className=\"playedChampionWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                    <img className=\"playedChampionStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                    <img className=\"playedChampionPortrait\" src={champion.Img} alt=\"\"></img>\n                                                </div>\n\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                                <Droppable droppableId=\"playerHandA\">\n                                    {(provided) => (\n                                        <div className=\"playerHandA\" ref={provided.innerRef}>\n                                            {this.state.playerAHand.map((minion, index) => (\n                                                <Draggable\n                                                    key={minion.id}\n                                                    draggableId={minion.id}\n                                                    index={index}>\n                                                    {(provided) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"minionHandCardA\"\n                                                            id={minion.id}\n                                                            key={minion.id}\n                                                        >\n                                                            <h3 className=\"MinionHandName\">{minion.Name || \"Minion\"}</h3>\n                                                            <p className=\"minionHandHealth\">{minion.Health || 2}</p>\n\n                                                            <div className=\"ability\">\n                                                                <span className=\"minionHandAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                <span className=\"minionHandAttack1Power\"><br></br>Dmg: {minion.Attack1Power}</span>\n                                                                <span className=\"minionHandAttack1Cost\">Cost: {minion.Attack1Cost}</span>\n                                                            </div>\n\n                                                            <img className=\"minionHandWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                            <img className=\"minionHandStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                            <img className=\"minionHandPortrait\" src={minion.Img} alt=\"\"></img>\n\n                                                        </div>\n\n\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n\n                                        </div>\n                                    )\n                                    }\n\n                                </Droppable>\n                            </div>\n                            <Droppable droppableId=\"fieldA\">\n                                {(provided) => (\n                                    <div className=\"fieldA\" ref={provided.innerRef}>\n                                        {this.state.playerAField.map((minion, index) => (\n                                            <Droppable droppableId={minion.id} key={minion.id}>\n                                                {(provided) => (\n                                                    <div className=\"droppableMinion\" ref={provided.innerRef} key={minion.id} >\n                                                        <Draggable\n                                                            key={minion.id}\n                                                            draggableId={minion.id}\n                                                            index={index}>\n                                                            {(provided) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                    className=\"minionFieldCardA\"\n                                                                    id={minion.id}\n                                                                    key={minion.id}\n                                                                >\n\n                                                                    <div className=\"innerA\">\n\n                                                                        <p className=\"minionFieldHealth\">{minion.Health || 2}</p>\n\n                                                                        <div className=\"abilityField\">\n                                                                            <span className=\"minionFieldAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                            <span className=\"minionFieldAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                                                                            <span className=\"minionFieldAttack1Cost\">{minion.Attack1Cost}</span>\n                                                                        </div>\n\n                                                                        <img className=\"minionFieldWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldPortrait\" src={minion.Img} alt=\"\"></img>\n                                                                    </div>\n\n                                                                </div>\n\n\n                                                            )}\n                                                        </Draggable>\n                                                        {provided.placeholder}\n                                                    </div>\n\n                                                )}\n                                            </Droppable>\n                                        ))}\n                                        {provided.placeholder}\n\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n\n                        </div>\n\n                        {/* --------------------------------------------------Turn Popup-------------------------------------------------------*/}\n                        <div id=\"myModal\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>{this.state.currentPlayerTurn + \"'s Turn\"}</p>\n                            </div>\n\n                        </div>\n\n                        <div id=\"myModalManaPlay\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>You need at least 10 mana to play a card</p>\n                            </div>\n\n                        </div>\n\n                        <div id=\"myModalManaAttack\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>You need at least 9 mana to attack a card</p>\n                            </div>\n\n                        </div>\n\n                         <div id=\"myModalQuit\" class=\"modal\">\n\n                        <div class=\"modal-content\">\n                                    <p>{\"Player Disconnected, heading to lobby\"}</p>\n                                </div>\n\n                            </div>\n\n\n                        <div className=\"containerB\">\n\n                            <Droppable droppableId=\"fieldB\">\n                                {(provided) => (\n                                    <div className=\"fieldB\" ref={provided.innerRef}>\n                                        {this.state.playerBField.map((minion, index) => (\n                                            <Droppable droppableId={minion.id} key={minion.id}>\n                                                {(provided) => (\n                                                    <div className=\"droppableMinion\" ref={provided.innerRef} key={minion.id}>\n                                                        <Draggable\n                                                            key={minion.id}\n                                                            draggableId={minion.id}\n                                                            index={index}\n                                                        >\n                                                            {(provided) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                    className=\"minionFieldCardB\"\n                                                                    id={minion.id}\n                                                                    key={minion.id}\n                                                                >\n                                                                    <div className=\"innerB\">\n\n                                                                        <p className=\"minionFieldHealth\">{minion.Health || 2}</p>\n\n                                                                        <div className=\"abilityField\">\n                                                                            <span className=\"minionFieldAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                            <span className=\"minionFieldAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                                                                            <span className=\"minionFieldAttack1Cost\">{minion.Attack1Cost}</span>\n                                                                        </div>\n\n                                                                        <img className=\"minionFieldWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldPortrait\" src={minion.Img} alt=\"\"></img>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            )}\n                                                        </Draggable>\n                                                        {provided.placeholder}\n                                                    </div>\n                                                )}\n                                            </Droppable>\n                                        ))}\n                                        {provided.placeholder}\n\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n\n                            <div className=\"rowB\">\n\n                                <div className=\"endTurnB\" onClick={this.changeBTurn}>\n                                    End Turn\n                                </div>\n\n                                <div className=\"playerManaB\">\n                                    {this.state.playerBMana}\n                                </div>\n\n                                <div className=\"playerNameB\">\n                                    {this.state.player1name}\n                                </div>\n\n                                <Droppable droppableId=\"playerChampionB\">\n                                    {(provided) => (\n                                        <div className=\"championB\" ref={provided.innerRef}>\n                                            {this.state.playerBChamp.map((champion) => (\n                                                <div\n                                                    className=\"playedChampionCard\"\n                                                    id={champion.id}\n                                                    key={champion.id}\n                                                >\n                                                    <p className=\"playedChampionHealth\">{champion.Health || 2}</p>\n                                                    <img className=\"playedChampionWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                    <img className=\"playedChampionStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                    <img className=\"playedChampionPortrait\" src={champion.Img} alt=\"\"></img>\n                                                </div>\n\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                                <Droppable droppableId=\"playerHandB\">\n                                    {(provided) => (\n                                        <div className=\"playerHandB\" ref={provided.innerRef}>\n                                            {this.state.playerBHand.map((minion, index) => (\n                                                <Draggable\n                                                    key={minion.id}\n                                                    draggableId={minion.id}\n                                                    index={index}\n                                                >\n                                                    {(provided) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"minionHandCardB\"\n                                                            id={minion.id}\n                                                            key={minion.id}\n                                                        >\n                                                            <h3 className=\"MinionHandName\">{minion.Name || \"Minion\"}</h3>\n                                                            <p className=\"minionHandHealth\">{minion.Health || 2}</p>\n\n                                                            <div className=\"ability\">\n                                                                <span className=\"minionHandAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                <span className=\"minionHandAttack1Power\"><br></br>Dmg: {minion.Attack1Power}</span>\n                                                                <span className=\"minionHandAttack1Cost\">Cost: {minion.Attack1Cost}</span>\n                                                            </div>\n\n                                                            <img className=\"minionHandWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                            <img className=\"minionHandStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                            <img className=\"minionHandPortrait\" src={minion.Img} alt=\"\"></img>\n\n                                                        </div>\n\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n\n                                        </div>\n                                    )\n                                    }\n                                </Droppable>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </DragDropContext>\n            )\n    }\n}\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}