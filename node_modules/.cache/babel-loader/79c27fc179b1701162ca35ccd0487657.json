{"ast":null,"code":"import axios from \"axios\";\nimport openSocket from '../../node_modules/socket.io-client';\nconst socket = openSocket(window.location.origin);\nexport default {\n  // Gets all minions\n  getMinions: function () {\n    return axios.get(\"/api/minions\");\n  },\n  // Socket stuff below\n  joinGame: cb => {\n    socket.emit('joinGame', {});\n    socket.on('updateGame', cb);\n    socket.on('showNewTurn', cb);\n  },\n  draftChampion: (champions, champion, cb) => {\n    socket.emit('draftChampion', champions, champion); // socket.on\n  },\n  draft1Minion: (minions, minion, name, cb) => {\n    socket.emit('draft1Minion', minions, minion, name);\n  },\n  draft2Minion: (minions, minion, name, cb) => {\n    socket.emit('draft2Minion', minions, minion, name);\n  },\n  leaveGame: () => {\n    socket.emit('leaveGame');\n  },\n  assignNames: name => {\n    socket.emit('assignNames', name);\n  },\n  board: allState => {\n    console.log(allState);\n    socket.emit('board', allState);\n  },\n  playAHand: (playerAField, playerAHand, playerAMana) => {\n    socket.emit('playAHand', playerAField, playerAHand, playerAMana);\n  },\n  playBHand: (playerBField, playerBHand, playerBMana, name) => {\n    socket.emit('playBHand', playerBField, playerBHand, playerBMana, name);\n  },\n  attackAChampion: (playerAChampion, playerBField, playerBMana, playerBGraveyard) => {\n    socket.emit('attackAChampion', playerAChampion, playerBField, playerBMana, playerBGraveyard);\n  },\n  attackBChampion: (playerBChampion, playerAField, playerAMana, playerAGraveyard) => {\n    socket.emit('attackBChampion', playerBChampion, playerAField, playerAMana, playerAGraveyard);\n  },\n  attackBMinion: (playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard) => {\n    socket.emit('attackBMinion', playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard);\n  },\n  attackAMinion: (playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard) => {\n    socket.emit('attackAMinion', playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard);\n  },\n  showTurn: modal => {\n    socket.emit('showTurn', modal);\n  },\n  joinNewGame: () => {\n    console.log(\"joining a game\");\n    socket.emit('joinNewGame');\n  },\n  checkSocket: cb => {\n    socket.emit('checkSocket', cb);\n  },\n  changeAsTurn: (currentAMaxMana, newMana, name) => {\n    socket.emit('changeATurn', currentAMaxMana, newMana, name);\n  },\n  changeBsTurn: (currentBMaxMana, newMana, name) => {\n    socket.emit('changeBTurn', currentBMaxMana, newMana, name);\n  }\n};","map":{"version":3,"sources":["C:/Users/jrave/Desktop/BusinessSites/Animalchemists/phoneGapAnima1/src/utils/API.js"],"names":["axios","openSocket","socket","window","location","origin","getMinions","get","joinGame","cb","emit","on","draftChampion","champions","champion","draft1Minion","minions","minion","name","draft2Minion","leaveGame","assignNames","board","allState","console","log","playAHand","playerAField","playerAHand","playerAMana","playBHand","playerBField","playerBHand","playerBMana","attackAChampion","playerAChampion","playerBGraveyard","attackBChampion","playerBChampion","playerAGraveyard","attackBMinion","attackAMinion","showTurn","modal","joinNewGame","checkSocket","changeAsTurn","currentAMaxMana","newMana","changeBsTurn","currentBMaxMana"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport openSocket from '../../node_modules/socket.io-client';\n\nconst socket = openSocket(window.location.origin);\n\nexport default {\n  // Gets all minions\n  getMinions: function() {\n    return axios.get(\"/api/minions\");\n  },\n\n\n\n  // Socket stuff below\n  joinGame: (cb) => {\n    socket.emit('joinGame', { })\n    socket.on('updateGame', cb)\n    socket.on('showNewTurn', cb)\n    \n  },\n  draftChampion: (champions, champion, cb) => {\n    socket.emit('draftChampion', champions, champion)\n    // socket.on\n  },\n  draft1Minion: (minions , minion, name, cb) => {\n  \n    socket.emit('draft1Minion', minions, minion, name)\n  },\n\n  draft2Minion: (minions , minion, name,  cb) => {\n  \n    socket.emit('draft2Minion', minions, minion, name)\n  },\n\n  leaveGame: () => {\n    socket.emit('leaveGame')\n    \n  },\n\n  assignNames: (name) => {\n    socket.emit('assignNames', name)\n  },\n\n  board: (allState) => {\n    console.log(allState)\n    socket.emit('board', allState)\n  },\n\n  playAHand: (playerAField, playerAHand, playerAMana) => {\n    socket.emit('playAHand', playerAField, playerAHand, playerAMana)\n  },\n\n  playBHand: (playerBField, playerBHand, playerBMana, name) => {\n    socket.emit('playBHand', playerBField, playerBHand, playerBMana, name)\n  },\n\n  attackAChampion: (playerAChampion, playerBField, playerBMana, playerBGraveyard) => {\n    socket.emit('attackAChampion', playerAChampion, playerBField, playerBMana, playerBGraveyard)\n  },\n\n  attackBChampion: (playerBChampion, playerAField, playerAMana, playerAGraveyard) => {\n    socket.emit('attackBChampion', playerBChampion, playerAField, playerAMana, playerAGraveyard)\n  },\n\n  attackBMinion: (playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard) => {\n    socket.emit('attackBMinion', playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard)\n  },\n\n  attackAMinion: (playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard) => {\n    socket.emit('attackAMinion', playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard)\n  },\n\n  showTurn: (modal) => {\n    socket.emit('showTurn', modal)\n  },\n\n\n\n  joinNewGame: () => {\n    console.log(\"joining a game\")\n    socket.emit('joinNewGame')\n\n  },\n\n  checkSocket: (cb) => {\n    socket.emit('checkSocket', cb)\n  },\n\n  changeAsTurn: (currentAMaxMana, newMana, name) => {\n    socket.emit('changeATurn', currentAMaxMana, newMana, name)\n  },\n\n  changeBsTurn: (currentBMaxMana, newMana, name) => {\n    socket.emit('changeBTurn', currentBMaxMana, newMana, name)\n  }\n\n\n\n};"]},"metadata":{},"sourceType":"module"}