{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jrave\\\\Desktop\\\\BusinessSites\\\\Animalchemists\\\\phoneGapAnima1\\\\src\\\\components\\\\draftChamp\\\\draftChamp.js\";\nimport React, { Component } from \"react\";\nimport championList from \"./champions\";\nimport \"./DraftChampion.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport DraftMinion from \"../draftMinion/draftMinion\";\nimport API from '../../utils/API';\nimport Lobby from \"../lobby/lobby\";\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n\n  const _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n\n  const _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n        _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n        removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nclass DraftChamp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.assignNames = () => {\n      if (this.state.player1name === \"\") {\n        this.setState({\n          player1name: this.props.name\n        });\n      } else {\n        this.setState({\n          player2name: this.props.name\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      API.assignNames(this.props.name);\n      API.joinGame(updates => {\n        if (updates.playerDisconnected === true) {\n          let modal = document.getElementById(\"myModalQuit\");\n          setTimeout(function () {\n            modal.style.display = \"block\";\n          }, 300);\n          setTimeout(function () {\n            window.location.reload();\n          }, 3000);\n        }\n\n        if (updates.player1 && updates.player2) {\n          window.soundtrack();\n          this.setState({\n            player1champion: updates.player1.champion || [],\n            player2champion: updates.player2.champion || [],\n            champions: updates.champions || championList.championList,\n            player1name: updates.player1name || \"\",\n            player2name: updates.player2name || \"\",\n            playerDisconnected: false\n          });\n\n          if (this.state.player1champion.length > 0 && this.state.p1c === false) {\n            window.playCard1();\n            this.setState({\n              p1c: true\n            });\n          }\n\n          if (this.state.player2champion.length > 0 && this.state.p2c === false) {\n            window.playCard1();\n            this.setState({\n              p2c: true\n            });\n          }\n        }\n      });\n    };\n\n    this.getList = id => this.state[this.id2List[id]];\n\n    this.onDragEnd = result => {\n      const source = result.source,\n            destination = result.destination; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === 'droppable') {\n        return;\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1champion.length > 0) {\n        return;\n      }\n\n      if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2champion.length > 0) {\n        return;\n      }\n\n      if (source.droppableId === 'droppable' || destination.droppableId !== 'droppable') {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination); // for testing the sound effects\n\n        API.draftChampion(result.droppable, result[destination.droppableId]);\n      }\n    };\n\n    this.state = {\n      champions: championList.championList,\n      player1champion: [],\n      player2champion: [],\n      player1name: \"\",\n      player2name: \"\",\n      p1c: false,\n      p2c: false\n    };\n    this.id2List = {\n      droppable: 'champions',\n      droppable2: 'player1champion',\n      droppable3: 'player2champion'\n    };\n  }\n\n  render() {\n    if (this.state.playerDisconnected === true) {\n      window.location.reload();\n    } else if (this.state.player1champion.length > 0 && this.state.player2champion.length > 0) {\n      return React.createElement(DraftMinion, {\n        p1champ: this.state.player1champion,\n        p2champ: this.state.player2champion,\n        champions: this.state.champions,\n        p1name: this.state.player1name,\n        p2name: this.state.player2name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      });\n    } else return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"player2Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"headerText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.player2name || \"Waiting for Opponent\")), React.createElement(\"div\", {\n      className: \"championHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"headerText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Choose your champion\")), React.createElement(\"div\", {\n      className: \"player1Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"headerText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.player1name || \"Waiting for Opponent\"))), React.createElement(\"div\", {\n      id: \"myModalQuit\",\n      class: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Player Disconnected, heading to lobby\"))), React.createElement(\"div\", {\n      className: \"row2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      ref: provided.innerRef,\n      className: \"chosenChampion1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"chosenText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Chosen Champion\"), this.state.player2champion.map((p2Champion, index) => React.createElement(Draggable, {\n      key: p2Champion.id,\n      draggableId: p2Champion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"chosenChampionCard\",\n      id: p2Champion.id,\n      key: p2Champion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"championName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, p2Champion.name || \"champion\"), React.createElement(\"p\", {\n      className: \"championHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, p2Champion.Health || 2), React.createElement(\"img\", {\n      className: \"championCost\",\n      src: p2Champion.type,\n      alt: \"\",\n      width: \"42\",\n      height: \"42\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championWeakness\",\n      src: p2Champion.WeakAgainst,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championStrength\",\n      src: p2Champion.StrongAgainst,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championPortrait\",\n      src: p2Champion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })))), provided.placeholder)), React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      className: \"championContainer\",\n      ref: provided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, this.state.champions.map((champion, index) => React.createElement(Draggable, {\n      key: champion.id,\n      draggableId: champion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"championCard\",\n      id: champion.id,\n      key: champion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"championName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, champion.name || \"champion\"), React.createElement(\"p\", {\n      className: \"championHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, champion.Health || 2), React.createElement(\"img\", {\n      className: \"championCost\",\n      src: champion.type,\n      alt: \"\",\n      width: \"42\",\n      height: \"42\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championWeakness\",\n      src: champion.WeakAgainst,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championStrength\",\n      src: champion.StrongAgainst,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championPortrait\",\n      src: champion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })))), provided.placeholder)), React.createElement(Droppable, {\n      droppableId: \"droppable2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", {\n      ref: provided.innerRef,\n      className: \"chosenChampion2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"chosenText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Chosen Champion\"), this.state.player1champion.map((p1champion, index) => React.createElement(Draggable, {\n      key: p1champion.id,\n      draggableId: p1champion.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, provided => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      className: \"chosenChampionCard\",\n      id: p1champion.id,\n      key: p1champion.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"championName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, p1champion.name || \"champion\"), React.createElement(\"p\", {\n      className: \"championHealth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, p1champion.Health || 2), React.createElement(\"img\", {\n      className: \"championCost\",\n      src: p1champion.type,\n      alt: \"\",\n      width: \"42\",\n      height: \"42\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championWeakness\",\n      src: p1champion.WeakAgainst,\n      alt: \"\",\n      width: \"42\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championStrength\",\n      src: p1champion.StrongAgainst,\n      alt: \"\",\n      width: \"5\",\n      height: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"championPortrait\",\n      src: p1champion.Img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })))), provided.placeholder)))));\n  }\n\n}\n\nexport default DraftChamp;","map":{"version":3,"sources":["C:/Users/jrave/Desktop/BusinessSites/Animalchemists/phoneGapAnima1/src/components/draftChamp/draftChamp.js"],"names":["React","Component","championList","DragDropContext","Droppable","Draggable","DraftMinion","API","Lobby","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","DraftChamp","constructor","props","assignNames","state","player1name","setState","name","player2name","componentDidMount","joinGame","updates","playerDisconnected","modal","document","getElementById","setTimeout","style","display","window","location","reload","player1","player2","soundtrack","player1champion","champion","player2champion","champions","length","p1c","playCard1","p2c","getList","id","id2List","onDragEnd","draftChampion","droppable","droppable2","droppable3","render","provided","innerRef","map","p2Champion","draggableProps","dragHandleProps","Health","type","WeakAgainst","StrongAgainst","Img","placeholder","p1champion"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport championList from \"./champions\"\nimport \"./DraftChampion.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport DraftMinion from \"../draftMinion/draftMinion\";\nimport API from '../../utils/API';\nimport Lobby from \"../lobby/lobby\";\n\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n  const sourceClone = Array.from(source);\n\n  const destClone = Array.from(destination);\n\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\n\n\nclass DraftChamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      champions: championList.championList,\n      player1champion: [],\n      player2champion: [],\n      player1name: \"\",\n      player2name: \"\",\n      p1c:false,\n      p2c:false,\n    }\n\n    this.id2List = {\n      droppable: 'champions',\n      droppable2: 'player1champion',\n      droppable3: 'player2champion'\n    }\n\n  }\n\n  assignNames = () => {\n    if (this.state.player1name === \"\") {\n      this.setState({\n        player1name: this.props.name\n      })\n    } else {\n      this.setState({\n        player2name: this.props.name\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    API.assignNames(this.props.name)\n    API.joinGame(updates => {\n      \n\n      if (updates.playerDisconnected === true){\n          let modal = document.getElementById(\"myModalQuit\");\n          setTimeout(function(){ modal.style.display = \"block\";}, 300);\n          \n          setTimeout(function(){window.location.reload()}, 3000)\n      }\n      \n      if (updates.player1 && updates.player2) {\n        window.soundtrack()\n        this.setState({\n          player1champion: updates.player1.champion || [],\n          player2champion: updates.player2.champion || [],\n          champions: updates.champions || championList.championList,\n          player1name: updates.player1name || \"\",\n          player2name: updates.player2name || \"\",\n          playerDisconnected: false,\n        })\n\n        if (this.state.player1champion.length > 0 && this.state.p1c === false){\n          window.playCard1();\n          this.setState({\n            p1c:true\n          })\n        }\n\n        if (this.state.player2champion.length > 0 && this.state.p2c === false){\n          window.playCard1();\n          this.setState({\n            p2c:true\n          })\n        }\n\n      }\n    })\n  }\n\n\n\n  getList = id => this.state[this.id2List[id]];\n\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === 'droppable') {\n      return\n    }\n    \n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1champion.length > 0) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2champion.length > 0) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' || destination.droppableId !== 'droppable') {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      // for testing the sound effects\n      \n\n      API.draftChampion(result.droppable, result[destination.droppableId])\n    }\n\n    \n  };\n\n  render() {\n    if (this.state.playerDisconnected === true){\n      window.location.reload();\n    }\n    else if (this.state.player1champion.length > 0 && this.state.player2champion.length > 0) {\n      return (\n        <DraftMinion p1champ={this.state.player1champion} p2champ={this.state.player2champion} champions={this.state.champions} p1name={this.state.player1name} p2name={this.state.player2name}></DraftMinion>\n\n      )\n    } else\n      return (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"container\">\n\n\n            <div className=\"row1\">\n\n              <div className=\"player2Name\">\n                <h1 className=\"headerText\">{this.state.player2name || \"Waiting for Opponent\"}</h1>\n              </div>\n\n              <div className=\"championHeader\">\n                <h1 className=\"headerText\">Choose your champion</h1>\n              </div>\n\n              <div className=\"player1Name\">\n                <h1 className=\"headerText\">{this.state.player1name || \"Waiting for Opponent\"}</h1>\n              </div>\n\n            </div>\n\n            <div id=\"myModalQuit\" class=\"modal\">\n\n                <div class=\"modal-content\">\n                    <p>{\"Player Disconnected, heading to lobby\"}</p>\n                </div>\n\n            </div>\n\n\n            <div className=\"row2\">\n\n              <Droppable droppableId=\"droppable3\">\n                {(provided) => (\n\n                  <div\n                    ref={provided.innerRef} className=\"chosenChampion1\">\n                    <h3 className=\"chosenText\">Chosen Champion</h3>\n                    {this.state.player2champion.map((p2Champion, index) => (\n                      <Draggable\n                        key={p2Champion.id}\n                        draggableId={p2Champion.id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n\n                            className=\"chosenChampionCard\" id={p2Champion.id} key={p2Champion.id}>\n\n                            <h3 className=\"championName\">{p2Champion.name || \"champion\"}</h3>\n                            <p className=\"championHealth\">{p2Champion.Health || 2}</p>\n\n                            <img className=\"championCost\" src={p2Champion.type} alt=\"\" width=\"42\" height=\"42\"></img>\n                            <img className=\"championWeakness\" src={p2Champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                            <img className=\"championStrength\" src={p2Champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                            <img className=\"championPortrait\" src={p2Champion.Img} alt=\"\"></img>\n\n                          </div>\n\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n\n                )}\n              </Droppable>\n\n              <Droppable droppableId=\"droppable\">\n\n                {(provided) => (\n\n                  <div className=\"championContainer\" ref={provided.innerRef}>\n\n                    {this.state.champions.map((champion, index) => (\n                      <Draggable\n                        key={champion.id}\n                        draggableId={champion.id}\n                        index={index}>\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            className=\"championCard\"\n                            id={champion.id}\n                            key={champion.id}\n                          >\n\n                            <h3 className=\"championName\">{champion.name || \"champion\"}</h3>\n                            <p className=\"championHealth\">{champion.Health || 2}</p>\n\n                            <img className=\"championCost\" src={champion.type} alt=\"\" width=\"42\" height=\"42\"></img>\n                            <img className=\"championWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                            <img className=\"championStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                            <img className=\"championPortrait\" src={champion.Img} alt=\"\"></img>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )\n                }\n              </Droppable>\n              <Droppable droppableId=\"droppable2\">\n                {(provided) => (\n\n                  <div\n                    ref={provided.innerRef} className=\"chosenChampion2\">\n                    <h3 className=\"chosenText\">Chosen Champion</h3>\n                    {this.state.player1champion.map((p1champion, index) => (\n                      <Draggable\n                        key={p1champion.id}\n                        draggableId={p1champion.id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n\n                            className=\"chosenChampionCard\" id={p1champion.id} key={p1champion.id}>\n\n                            <h3 className=\"championName\">{p1champion.name || \"champion\"}</h3>\n                            <p className=\"championHealth\">{p1champion.Health || 2}</p>\n\n                            <img className=\"championCost\" src={p1champion.type} alt=\"\" width=\"42\" height=\"42\"></img>\n                            <img className=\"championWeakness\" src={p1champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                            <img className=\"championStrength\" src={p1champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                            <img className=\"championPortrait\" src={p1champion.Img} alt=\"\"></img>\n\n                          </div>\n\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n\n                )}\n              </Droppable>\n\n\n            </div>\n\n          </div>\n        </DragDropContext>\n\n      )\n  }\n}\nexport default DraftChamp;"]},"metadata":{},"sourceType":"module"}