{"version":3,"sources":["utils/API.js","components/lobby/lobby.js","components/draftChamp/draftChamp.js","components/gameOver/gameOver.js","components/board/board.js","components/draftMinion/draftMinion.js","App.js","index.js","components/draftChamp/champions.js","components/draftMinion/minions.js"],"names":["socket","openSocket","window","location","origin","getMinions","axios","get","joinGame","cb","emit","on","draftChampion","champions","champion","draft1Minion","minions","minion","name","draft2Minion","leaveGame","assignNames","board","allState","console","log","playAHand","playerAField","playerAHand","playerAMana","playBHand","playerBField","playerBHand","playerBMana","attackAChampion","playerAChampion","playerBGraveyard","attackBChampion","playerBChampion","playerAGraveyard","attackBMinion","attackAMinion","showTurn","modal","joinNewGame","checkSocket","changeAsTurn","currentAMaxMana","newMana","changeBsTurn","currentBMaxMana","Lobby","props","state","playCard1","API","setState","joinAGame","updateInput","evt","target","value","sockets","playerDisconnected","playerDisconnect","this","className","type","placeholder","onChange","onClick","React","Component","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","splice","index","removed","result","droppableId","DraftChamp","player1name","player2name","componentDidMount","updates","document","getElementById","setTimeout","style","display","reload","player1","player2","soundtrack","player1champion","player2champion","championList","length","p1c","p2c","getList","id","id2List","onDragEnd","droppable","droppable2","droppable3","p1champ","p2champ","p1name","p2name","class","provided","ref","innerRef","map","p2Champion","key","draggableId","draggableProps","dragHandleProps","Health","src","alt","width","height","WeakAgainst","StrongAgainst","Img","p1champion","GameOver","goLobby","winner","playerAChamp","playerBChamp","goToLobby","playerBName","playerAName","GameBoard","currentPlayerTurn","changeTurn","i","attackACard","attack","death","championAttack","playerATurn","playerBturn","aMaxMana","bMaxMana","changeATurn","changeBTurn","currentMana","fieldA","playerHandA","fieldB","playerHandB","defendingCardIndex","attackingCardIndex","undefined","attackingCardType","TypeText","defendingCardWeakness","WeakAgainstText","defendingCardStrength","StrongAgainstText","removedBCard","push","removedACard","j","p2deck","p1deck","isAttacked","isKilled","Name","Attack1Name","Attack1Power","Attack1Cost","WeakAgainstImg","StrongAgainstImg","reorder","list","startIndex","endIndex","DraftMinion","player1deck","player2deck","player1Turn","turn","player2Turn","currentTurn","items","selected","minionsList","Type","App","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.af28e783.chunk.js","sourcesContent":["import axios from \"axios\";\nimport openSocket from '../../node_modules/socket.io-client';\n\nconst socket = openSocket(window.location.origin);\n\nexport default {\n  // Gets all minions\n  getMinions: function() {\n    return axios.get(\"/api/minions\");\n  },\n\n\n\n  // Socket stuff below\n  joinGame: (cb) => {\n    socket.emit('joinGame', { })\n    socket.on('updateGame', cb)\n    socket.on('showNewTurn', cb)\n    \n  },\n  draftChampion: (champions, champion, cb) => {\n    socket.emit('draftChampion', champions, champion)\n    // socket.on\n  },\n  draft1Minion: (minions , minion, name, cb) => {\n  \n    socket.emit('draft1Minion', minions, minion, name)\n  },\n\n  draft2Minion: (minions , minion, name,  cb) => {\n  \n    socket.emit('draft2Minion', minions, minion, name)\n  },\n\n  leaveGame: () => {\n    socket.emit('leaveGame')\n    \n  },\n\n  assignNames: (name) => {\n    socket.emit('assignNames', name)\n  },\n\n  board: (allState) => {\n    console.log(allState)\n    socket.emit('board', allState)\n  },\n\n  playAHand: (playerAField, playerAHand, playerAMana) => {\n    socket.emit('playAHand', playerAField, playerAHand, playerAMana)\n  },\n\n  playBHand: (playerBField, playerBHand, playerBMana, name) => {\n    socket.emit('playBHand', playerBField, playerBHand, playerBMana, name)\n  },\n\n  attackAChampion: (playerAChampion, playerBField, playerBMana, playerBGraveyard) => {\n    socket.emit('attackAChampion', playerAChampion, playerBField, playerBMana, playerBGraveyard)\n  },\n\n  attackBChampion: (playerBChampion, playerAField, playerAMana, playerAGraveyard) => {\n    socket.emit('attackBChampion', playerBChampion, playerAField, playerAMana, playerAGraveyard)\n  },\n\n  attackBMinion: (playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard) => {\n    socket.emit('attackBMinion', playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard)\n  },\n\n  attackAMinion: (playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard) => {\n    socket.emit('attackAMinion', playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard)\n  },\n\n  showTurn: (modal) => {\n    socket.emit('showTurn', modal)\n  },\n\n\n\n  joinNewGame: () => {\n    console.log(\"joining a game\")\n    socket.emit('joinNewGame')\n\n  },\n\n  checkSocket: (cb) => {\n    socket.emit('checkSocket', cb)\n  },\n\n  changeAsTurn: (currentAMaxMana, newMana, name) => {\n    socket.emit('changeATurn', currentAMaxMana, newMana, name)\n  },\n\n  changeBsTurn: (currentBMaxMana, newMana, name) => {\n    socket.emit('changeBTurn', currentBMaxMana, newMana, name)\n  }\n\n\n\n};","import React from \"react\";\nimport \"../lobby/lobby.css\"\nimport DraftChamp from \"../draftChamp/draftChamp\";\nimport API from \"../../utils/API\";\n\n\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sockets: this.props.value,\n      joinAGame: false,\n      name: \"\",\n      playerDisconnected: this.props.playerDisconnect || false\n    }\n  }\n\n\n  joinGame = () => {\n    \n    if (this.state.name !== \"\") {\n      window.playCard1();\n      API.joinNewGame();\n      this.setState({\n        joinAGame: true,\n      })\n    }\n    \n    console.log(\"clicked!\")\n  }\n\n  updateInput = (evt) => {\n    this.setState({\n      name: evt.target.value\n    })\n  }\n\n\n\n  render() {\n    if (this.state.joinAGame === true) {\n      return (\n        <DraftChamp name={this.state.name}></DraftChamp>\n      )\n    } else {\n      return <div className=\"lobbyContainer\">\n\n        <div className=\"panels\">\n\n          <div className=\"leftPanel\">\n\n            <div className=\"imgContainer\">\n\n              {/* <p className=\"title\">Animalchemists</p> */}\n\n            </div>\n\n\n          </div>\n\n\n\n          <div className=\"rightPanel\">\n\n            <div className=\"createGame\">\n              <div className=\"header\">Create a New Game</div>\n              <input type=\"text\" name=\"name\" className=\"inputField\" placeholder=\"Enter your name\" value={this.state.name} onChange={this.updateInput}></input>\n              <br></br>\n              <button className=\"createGameBtn\" onClick={this.joinGame} >Create a Game </button>\n\n            </div>\n\n            <div className=\"joinGame\">\n              <div className=\"header\">Join a Game</div>\n              <input type=\"text\" name=\"name\" className=\"inputField inputFieldName\" value={this.state.name} onChange={this.updateInput} placeholder=\"Enter your name\"></input>\n\n              <br></br>\n              <button className=\"joinGameBtn\" onClick={this.joinGame}>Join a Game </button>\n\n            </div>\n\n\n          </div>\n\n        </div>\n      </div>;\n    }\n  }\n}\n\nexport default Lobby;","import React, { Component } from \"react\";\nimport championList from \"./champions\"\nimport \"./DraftChampion.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport DraftMinion from \"../draftMinion/draftMinion\";\nimport API from '../../utils/API';\nimport Lobby from \"../lobby/lobby\";\n\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n  const sourceClone = Array.from(source);\n\n  const destClone = Array.from(destination);\n\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\n\n\nclass DraftChamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      champions: championList.championList,\n      player1champion: [],\n      player2champion: [],\n      player1name: \"\",\n      player2name: \"\",\n      p1c:false,\n      p2c:false,\n    }\n\n    this.id2List = {\n      droppable: 'champions',\n      droppable2: 'player1champion',\n      droppable3: 'player2champion'\n    }\n\n  }\n\n  assignNames = () => {\n    if (this.state.player1name === \"\") {\n      this.setState({\n        player1name: this.props.name\n      })\n    } else {\n      this.setState({\n        player2name: this.props.name\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    API.assignNames(this.props.name)\n    API.joinGame(updates => {\n      \n\n      if (updates.playerDisconnected === true){\n          let modal = document.getElementById(\"myModalQuit\");\n          setTimeout(function(){ modal.style.display = \"block\";}, 300);\n          \n          setTimeout(function(){window.location.reload()}, 3000)\n      }\n      \n      if (updates.player1 && updates.player2) {\n        window.soundtrack()\n        this.setState({\n          player1champion: updates.player1.champion || [],\n          player2champion: updates.player2.champion || [],\n          champions: updates.champions || championList.championList,\n          player1name: updates.player1name || \"\",\n          player2name: updates.player2name || \"\",\n          playerDisconnected: false,\n        })\n\n        if (this.state.player1champion.length > 0 && this.state.p1c === false){\n          window.playCard1();\n          this.setState({\n            p1c:true\n          })\n        }\n\n        if (this.state.player2champion.length > 0 && this.state.p2c === false){\n          window.playCard1();\n          this.setState({\n            p2c:true\n          })\n        }\n\n      }\n    })\n  }\n\n\n\n  getList = id => this.state[this.id2List[id]];\n\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === 'droppable') {\n      return\n    }\n    \n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1champion.length > 0) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2champion.length > 0) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' || destination.droppableId !== 'droppable') {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      // for testing the sound effects\n      \n\n      API.draftChampion(result.droppable, result[destination.droppableId])\n    }\n\n    \n  };\n\n  render() {\n    if (this.state.playerDisconnected === true){\n      window.location.reload();\n    }\n    else if (this.state.player1champion.length > 0 && this.state.player2champion.length > 0) {\n      return (\n        <DraftMinion p1champ={this.state.player1champion} p2champ={this.state.player2champion} champions={this.state.champions} p1name={this.state.player1name} p2name={this.state.player2name}></DraftMinion>\n\n      )\n    } else\n      return (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"container\">\n\n\n            <div className=\"row1\">\n\n              <div className=\"player2Name\">\n                <h1 className=\"headerText\">{this.state.player2name || \"Waiting for Opponent\"}</h1>\n              </div>\n\n              <div className=\"championHeader\">\n                <h1 className=\"headerText\">Choose your champion</h1>\n              </div>\n\n              <div className=\"player1Name\">\n                <h1 className=\"headerText\">{this.state.player1name || \"Waiting for Opponent\"}</h1>\n              </div>\n\n            </div>\n\n            <div id=\"myModalQuit\" class=\"modal\">\n\n                <div class=\"modal-content\">\n                    <p>{\"Player Disconnected, heading to lobby\"}</p>\n                </div>\n\n            </div>\n\n\n            <div className=\"row2\">\n\n              <Droppable droppableId=\"droppable3\">\n                {(provided) => (\n\n                  <div\n                    ref={provided.innerRef} className=\"chosenChampion1\">\n                    <h3 className=\"chosenText\">Chosen Champion</h3>\n                    {this.state.player2champion.map((p2Champion, index) => (\n                      <Draggable\n                        key={p2Champion.id}\n                        draggableId={p2Champion.id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n\n                            className=\"chosenChampionCard\" id={p2Champion.id} key={p2Champion.id}>\n\n                            <h3 className=\"championName\">{p2Champion.name || \"champion\"}</h3>\n                            <p className=\"championHealth\">{p2Champion.Health || 2}</p>\n\n                            <img className=\"championCost\" src={p2Champion.type} alt=\"\" width=\"42\" height=\"42\"></img>\n                            <img className=\"championWeakness\" src={p2Champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                            <img className=\"championStrength\" src={p2Champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                            <img className=\"championPortrait\" src={p2Champion.Img} alt=\"\"></img>\n\n                          </div>\n\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n\n                )}\n              </Droppable>\n\n              <Droppable droppableId=\"droppable\">\n\n                {(provided) => (\n\n                  <div className=\"championContainer\" ref={provided.innerRef}>\n\n                    {this.state.champions.map((champion, index) => (\n                      <Draggable\n                        key={champion.id}\n                        draggableId={champion.id}\n                        index={index}>\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            className=\"championCard\"\n                            id={champion.id}\n                            key={champion.id}\n                          >\n\n                            <h3 className=\"championName\">{champion.name || \"champion\"}</h3>\n                            <p className=\"championHealth\">{champion.Health || 2}</p>\n\n                            <img className=\"championCost\" src={champion.type} alt=\"\" width=\"42\" height=\"42\"></img>\n                            <img className=\"championWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                            <img className=\"championStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                            <img className=\"championPortrait\" src={champion.Img} alt=\"\"></img>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )\n                }\n              </Droppable>\n              <Droppable droppableId=\"droppable2\">\n                {(provided) => (\n\n                  <div\n                    ref={provided.innerRef} className=\"chosenChampion2\">\n                    <h3 className=\"chosenText\">Chosen Champion</h3>\n                    {this.state.player1champion.map((p1champion, index) => (\n                      <Draggable\n                        key={p1champion.id}\n                        draggableId={p1champion.id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n\n                            className=\"chosenChampionCard\" id={p1champion.id} key={p1champion.id}>\n\n                            <h3 className=\"championName\">{p1champion.name || \"champion\"}</h3>\n                            <p className=\"championHealth\">{p1champion.Health || 2}</p>\n\n                            <img className=\"championCost\" src={p1champion.type} alt=\"\" width=\"42\" height=\"42\"></img>\n                            <img className=\"championWeakness\" src={p1champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                            <img className=\"championStrength\" src={p1champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                            <img className=\"championPortrait\" src={p1champion.Img} alt=\"\"></img>\n\n                          </div>\n\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n\n                )}\n              </Droppable>\n\n\n            </div>\n\n          </div>\n        </DragDropContext>\n\n      )\n  }\n}\nexport default DraftChamp;","import React from \"react\";\nimport \"../gameOver/gameOver.css\";\nimport Lobby from \"../lobby/lobby\"\nimport API from \"../../utils/API\";\n\n\n\nclass GameOver extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            winner: this.props.winner,\n            playerAChamp: this.props.value.playerAChamp,\n            playerBChamp: this.props.value.playerBChamp,\n            playerAField: this.props.value.playerAField,\n            playerBField: this.props.value.playerBField,\n            playerAHand: this.props.value.playerAHand,\n            playerBHand: this.props.value.playerBHand,\n            playerAGraveyard: this.props.value.playerAGraveyard,\n            playerBGraveyard: this.props.value.playerBGraveyard,\n            goToLobby: false,\n            playerBName: this.props.player1,\n            playerAName: this.props.player2\n        }\n    }\n\n    goLobby = () => {\n        // API.leaveGame()\n        // this.setState({\n        //     goToLobby: true\n        // })\n\n        setTimeout(function(){window.location.reload()}, 20)\n    }\n\n    render() {\n        if (this.state.goToLobby){\n            return (\n            <Lobby></Lobby>\n            )\n        } else if (this.state.winner === \"playerB\") {\n            return (<div className=\"gameOverContainer\">\n                <div className=\"innerContainer\">\n\n                    <div className=\"blocks\">\n\n                        {/* Left Block */}\n                        <div className=\"left\">\n                            <div className=\"playerHeader\">\n                                \n                            </div>\n                            <div className=\"playerHeader\">\n                                {this.state.playerBName}\n                            <h6>Champion Health Remaining {this.state.playerBChamp[0].Health}/80</h6>\n                                <h6>Minions Remaining {this.state.playerBField.length + this.state.playerBHand.length}/5</h6>\n                                <h6>Minions Destroyed {this.state.playerAGraveyard.length}/5</h6>\n                            </div>\n\n                        </div>\n\n                        {/* Middle Block */}\n                        <div className=\"middle\">\n\n                            <div className=\"winLose\">\n                                <p className=\"winLoseMsg\">Victory!</p>\n                            </div>\n\n                            <br></br>\n\n                            <div className=\"btnContainer\">\n                                <button className=\"goLobby\" onClick={this.goLobby}>Go to Lobby</button>\n                            </div>\n\n                        </div>\n\n                        {/* Right Block */}\n                        <div className=\"right\">\n\n                            <div className=\"playerHeader\">\n                            {this.state.playerAName}\n                            <h6>Champion Health Remaining {this.state.playerAChamp[0].Health}/80</h6>\n                                <h6>Minions Remaining {this.state.playerAField.length + this.state.playerAHand.length}/5</h6>\n                                <h6>Minions Destroyed {this.state.playerBGraveyard.length}/5</h6>\n                            </div>\n\n                        </div>\n\n\n                    </div>\n\n\n                </div>\n            </div>\n            )\n        } else {\n            return (<div className=\"gameOverContainer\">\n                <div className=\"innerContainer\">\n\n                    <div className=\"blocks\">\n\n                        {/* Left Block */}\n                        <div className=\"left\">\n                            <div className=\"playerHeader\">\n\n                            </div>\n                            <div className=\"playerHeader\">\n                            {this.state.playerAName}\n                            <h6>Champion Health Remaining {this.state.playerBChamp[0].Health}/80</h6>\n                                <h6>Minions Remaining {this.state.playerBField.length + this.state.playerBHand.length}/5</h6>\n                                <h6>Minions Destroyed {this.state.playerAGraveyard.length}/5</h6>\n                            </div>\n\n                        </div>\n\n                        {/* Middle Block */}\n                        <div className=\"middle\">\n\n                            <div className=\"winLose\">\n                                <p className=\"winLoseMsg\">Victory!</p>\n                                <p> {this.state.playerAChamp[0].name}</p>\n                            </div>\n\n                            <br></br>\n\n                            <div className=\"btnContainer\">\n                                <button className=\"goLobby\" onClick={this.goLobby}>Go to Lobby</button>\n                            </div>\n\n                        </div>\n\n                        {/* Right Block */}\n                        <div className=\"right\">\n                            \n                        <div className=\"playerHeader\">\n                            {this.state.playerAName}\n                            <h6>Champion Health Remaining {this.state.playerAChamp[0].Health}/80</h6>\n                                <h6>Minions Remaining {this.state.playerAField.length + this.state.playerAHand.length}/5</h6>\n                                <h6>Minions Destroyed {this.state.playerBGraveyard.length}/5</h6>\n                            </div>\n\n                        </div>\n\n\n                    </div>\n\n\n                </div>\n            </div>\n            )\n        }\n    }\n}\n\nexport default GameOver;","import React, { Component } from \"react\";\nimport \"./board.css\";\nimport \"./boardCards.css\";\nimport { DragDropContext, Droppable, Draggable } from '../../../node_modules/react-beautiful-dnd';\nimport API from '../../utils/API';\nimport { isUndefined } from \"util\";\nimport GameOver from '../gameOver/gameOver'\n\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n    const sourceClone = Array.from(source);\n\n    const destClone = Array.from(destination);\n\n\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n};\n\nclass GameBoard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerAChamp: this.props.p2champ,\n            playerAHand: this.props.p2deck,\n            playerAField: [],\n            playerAGraveyard: [],\n            playerBChamp: this.props.p1champ,\n            playerBHand: this.props.p1deck,\n            playerBField: [],\n            playerBGraveyard: [],\n            playerATurn: false,\n            playerBturn: true,\n            playerAMana: 20,\n            playerBMana: 20,\n            aMaxMana: 20,\n            bMaxMana: 20,\n            player1name: this.props.p1name,\n            player2name: this.props.p2name,\n            currentPlayerTurn: this.props.p1name,\n            isAttacked: false,\n            isKilled: false\n        }\n\n\n        this.id2List = {\n            playerHandA: 'playerAHand',\n            fieldA: 'playerAField',\n            playerHandB: 'playerBHand',\n            fieldB: 'playerBField',\n        };\n    }\n\n    componentDidMount = () => {\n        // var audio = new Audio('./sounds/attack.mp3');\n        // audio.play();\n        API.joinGame(updates => {\n            console.log(updates);\n            console.log(this.state)\n            if(this.state.currentPlayerTurn !== updates.currentPlayerTurn){\n                window.changeTurn()\n                let modal = document.getElementById(\"myModal\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n            if (updates.playerDisconnected === true){\n                let modal = document.getElementById(\"myModalQuit\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                \n                setTimeout(function(){window.location.reload()}, 3000)\n            }\n\n            if (updates.playerAField && updates.playerAField.length > 0 && this.state.playerAField.length > 0 && updates.playerAField.length === this.state.playerAField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn){\n                \n                for (let i = 0; i < updates.playerAField.length; i++){\n                    \n                    let attackACard = false\n                    if (this.state.playerAField[i].Health !== updates.playerAField[i].Health){\n                        attackACard = true\n                    }\n                    if (attackACard){\n                        \n                        window.attack()\n                    }\n                \n                }}\n\n                \n                if (updates.playerBField && updates.playerBField.length > 0 && this.state.playerBField.length > 0 && updates.playerBField.length === this.state.playerBField.length && this.state.currentPlayerTurn === updates.currentPlayerTurn) {\n                \n                \n                for (let i = 0; i < updates.playerBField.length; i++){\n                    \n                    let attackACard = false\n                    if (this.state.playerBField[i].Health !== updates.playerBField[i].Health){\n                        attackACard = true\n                    }\n                    if (attackACard){\n                        \n                        window.attack()\n                    }\n                }\n                }\n            \n            if (updates.player1 && updates.player2) {\n                \n                if (updates.playerAField && updates.playerAField.length > this.state.playerAField.length  || updates.playerBField && updates.playerBField.length > this.state.playerBField.length){\n                    \n                    window.playCard1()\n                    \n                }\n                if (updates.playerAField && updates.playerAField.length < this.state.playerAField.length  || updates.playerBField && updates.playerBField.length < this.state.playerBField.length){\n                    \n                    window.death()\n                  \n                }\n\n                if (updates.playerAChamp && updates.playerAChamp !== this.state.playerAChamp  || updates.playerBChamp && updates.playerBChamp !== this.state.playerBChamp){\n                    \n                    //seems like other sounds are getting triggered\n                    window.championAttack()\n                  \n                }\n                \n                if (updates.playerAMana === 0) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana, \n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else if (updates.playerBMana === 0) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else if (updates.playerATurn || updates.playerBturn) {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: updates.playerATurn,\n                        playerBturn: updates.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                } else {\n                    this.setState({\n                        playerAChamp: updates.playerAChamp || this.state.playerAChamp,\n                        playerAHand: updates.playerAHand || this.state.playerAHand,\n                        playerAField: updates.playerAField || this.state.playerAField,\n                        playerAGraveyard: updates.playerAGraveyard || this.state.playerAGraveyard,\n                        playerBChamp: updates.playerBChamp || this.state.playerBChamp,\n                        playerBHand: updates.playerBHand || this.state.playerBHand,\n                        playerBField: updates.playerBField || this.state.playerBField,\n                        playerBGraveyard: updates.playerBGraveyard || this.state.playerBGraveyard,\n                        playerATurn: this.state.playerATurn,\n                        playerBturn: this.state.playerBturn,\n                        playerAMana: updates.playerAMana || this.state.playerAMana,\n                        playerBMana: updates.playerBMana || this.state.playerBMana,\n                        aMaxMana: updates.aMaxMana || this.state.aMaxMana,\n                        bMaxMana: updates.bMaxMana || this.state.bMaxMana,\n                        currentPlayerTurn: updates.currentPlayerTurn || this.props.p1name\n                    }\n                    )\n                }\n                \n            }\n        })\n    }\n\n    changeATurn = () => {\n\n        if (this.state.playerATurn === false) {\n            return\n        } else {\n            let currentAMaxMana = this.state.aMaxMana\n            let newMana;\n            let modal = document.getElementById(\"myModal\");\n            if (currentAMaxMana <= 45) {\n                currentAMaxMana += 5;\n                newMana = currentAMaxMana\n                API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name)\n            }\n            else {\n                currentAMaxMana = 50;\n                newMana = currentAMaxMana;\n                API.changeAsTurn(currentAMaxMana, newMana, this.state.player1name)\n            }\n            \n        }\n    }\n\n    changeBTurn = () => {\n\n        if (this.state.playerBturn === false) {\n            return\n        } else {\n            let currentBMaxMana = this.state.bMaxMana\n            let newMana;\n            \n            if (currentBMaxMana <= 45) {\n                currentBMaxMana += 5\n                newMana = currentBMaxMana;\n                API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name);\n            }\n            else {\n                currentBMaxMana = 50;\n                newMana = currentBMaxMana;\n                API.changeBsTurn(currentBMaxMana, newMana, this.state.player2name)\n            }\n            \n        }\n    }\n\n    getList = id => this.state[this.id2List[id]];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n        \n\n        // dropped outside the list\n        if (!destination) {\n            \n            return;\n        }\n        if (source.droppableId > 0 && destination.droppableId === \"fieldA\") {\n            return\n        }\n        if (source.droppableId > 0 && destination.droppableId === \"fieldB\") {\n            return\n        }\n        if (source.droppableId === \"fieldB\" && destination.droppableId === \"fieldB\") {\n            return\n        }\n\n\n        //playing a card for top player\n        if (source.droppableId === \"playerHandA\" && destination.droppableId === \"fieldA\" && this.state.playerATurn === true) {\n            let currentMana = this.state.playerAMana;\n            if (currentMana >= 10) {\n                const result = move(\n                    this.getList(source.droppableId),\n                    this.getList(destination.droppableId),\n                    source,\n                    destination\n                );\n                currentMana -= 10;\n                let playerAField = result.fieldA\n                let playerAHand = result.playerHandA\n                let playerAMana = currentMana\n                \n               \n                API.playAHand(playerAField, playerAHand, playerAMana)\n            } else {\n                \n                let modal = document.getElementById(\"myModalManaPlay\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n            \n        }\n        //playing a card for bottom player\n        if (source.droppableId === \"playerHandB\" && destination.droppableId === \"fieldB\" && this.state.playerBturn === true) {\n            let currentMana = this.state.playerBMana;\n            if (currentMana >= 10) {\n                const result = move(\n                    this.getList(source.droppableId),\n                    this.getList(destination.droppableId),\n                    source,\n                    destination\n                );\n                currentMana -= 10;\n                let playerBField = result.fieldB\n                let playerBHand = result.playerHandB\n                let playerBMana = currentMana\n                let name = this.state.player1name\n                \n                \n                API.playBHand(playerBField, playerBHand, playerBMana, name)\n                \n            } else {\n                \n                let modal = document.getElementById(\"myModalManaPlay\");\n                setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n            }\n        }\n        //attacking player A Champion\n\n        if (source.droppableId !== \"playerHandB\" && destination.droppableId === \"playerChampionA\") {\n\n            if (this.state.playerBturn) {\n                \n                var playerBField = this.state.playerBField;\n                var playerBMana = this.state.playerBMana;\n                var playerAChampion = this.state.playerAChamp;\n                var playerBGraveyard = this.state.playerBGraveyard\n                var attackingCardIndex;\n                var defendingCardIndex = 0;\n\n                if (playerBMana >= 9) {\n                    for (var i = 0; i < playerBField.length; i++) {\n                        if (playerBField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    if (attackingCardIndex === undefined) {\n                       \n                        return\n                    } else {\n\n                        \n\n                        var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerAChampion[defendingCardIndex].WeakAgainstText;\n                        var defendingCardStrength = playerAChampion[defendingCardIndex].StrongAgainstText;\n\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerAChampion[0].Health -= 10;\n                            playerBMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerAChampion[0].Health -= 3;\n                            playerBField[attackingCardIndex].Health -= 3;\n                            playerBMana -= 9;\n                        } else {\n                            playerAChampion[0].Health -= 6;\n                            playerBMana -= 9;\n                        }\n\n                        if (playerBField[attackingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n                        window.attack()\n                        API.attackAChampion(playerAChampion, playerBField, playerBMana, playerBGraveyard)\n                    }\n                } else {\n                    //not enough mana\n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n\n        }\n\n        //attacking playerB Champ\n\n        if (source.droppableId !== \"playerHandA\" && destination.droppableId === \"playerChampionB\") {\n\n            if (this.state.playerATurn) {\n                \n                var playerAField = this.state.playerAField;\n                var playerAMana = this.state.playerAMana;\n                var playerBChampion = this.state.playerBChamp;\n                var playerAGraveyard = this.state.playerAGraveyard\n                var attackingCardIndex;\n                var defendingCardIndex = 0;\n\n                if (playerAMana >= 9) {\n                    for (var i = 0; i < playerAField.length; i++) {\n                        if (playerAField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    if (attackingCardIndex === undefined) {\n                       \n                        return\n                    } else {\n                        \n\n                        var attackingCardType = playerAField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerBChampion[defendingCardIndex].WeakAgainstText;\n                        var defendingCardStrength = playerBChampion[defendingCardIndex].StrongAgainstText;\n\n                       \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerBChampion[0].Health -= 10;\n                            playerAMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerBChampion[0].Health -= 3;\n                            playerAField[attackingCardIndex].Health -= 3;\n                            playerAMana -= 9;\n                        } else {\n                            playerBChampion[0].Health -= 6;\n                            playerAMana -= 9;\n                        }\n\n                        if (playerAField[attackingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(attackingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n                        window.attack()\n                        API.attackBChampion(playerBChampion, playerAField, playerAMana, playerAGraveyard)\n                    }\n                } else {\n                    //some popup saying you do not have enough mana\n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n\n            }\n        }\n        //attacking a minion\n        if (destination.droppableId !== \"playerChampionA\" && destination.droppableId !== \"playerChampionB\" && source.droppableId !== \"fieldA\" && source.droppableId !== \"fieldB\" && source.droppableId !== \"playerHandA\" && source.droppableId !== \"playerHandB\") {\n            \n            if (this.state.playerATurn) {\n                var playerAField = this.state.playerAField;\n                var playerBField = this.state.playerBField;\n                var playerAMana = this.state.playerAMana;\n                var playerBGraveyard = this.state.playerBGraveyard;\n                var playerAGraveyard = this.state.playerAGraveyard;\n                var attackingCardIndex;\n                var defendingCardIndex;\n\n                if (playerAMana >= 9) {\n\n                    for (var i = 0; i < playerAField.length; i++) {\n                        if (playerAField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    for (var j = 0; j < playerBField.length; j++) {\n                        if (playerBField[j].id === result.destination.droppableId) {\n                            defendingCardIndex = j\n                        }\n                    }\n                    \n\n                    if (defendingCardIndex === undefined) {\n                        \n                        return\n                    } else if (attackingCardIndex === undefined) {\n                       \n\n                    } else {\n\n                        var attackingCardType = playerAField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerBField[defendingCardIndex].WeakAgainst;\n                        var defendingCardStrength = playerBField[defendingCardIndex].StrongAgainst;\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerBField[defendingCardIndex].Health -= 10;\n                            playerAMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerBField[defendingCardIndex].Health -= 3;\n                            playerAField[attackingCardIndex].Health -= 3;\n                            playerAMana -= 9;\n                        } else {\n                            playerBField[defendingCardIndex].Health -= 6;\n                            playerAMana -= 9;\n                        }\n\n                        if (playerBField[defendingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(defendingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n\n                        if (playerAField[attackingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(attackingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n\n                        window.attack()\n                        API.attackBMinion(playerAField, playerBField, playerAMana, playerBGraveyard, playerAGraveyard)\n\n                    }\n                }\n                else {\n                    //add some modal to say out of mana\n                    \n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n            //player B's turn\n            else {\n                var playerAField = this.state.playerAField;\n                var playerBField = this.state.playerBField;\n                var playerBMana = this.state.playerBMana;\n                var playerAGraveyard = this.state.playerAGraveyard;\n                var playerBGraveyard = this.state.playerBGraveyard;\n                var attackingCardIndex;\n                var defendingCardIndex;\n\n                if (playerBMana >= 9) {\n\n                    for (var i = 0; i < playerBField.length; i++) {\n                        if (playerBField[i].id === result.source.droppableId) {\n                            attackingCardIndex = i\n                        }\n                    }\n                    for (var j = 0; j < playerAField.length; j++) {\n                        if (playerAField[j].id === result.destination.droppableId) {\n                            defendingCardIndex = j\n                        }\n                    }\n                    \n\n                    if (defendingCardIndex === undefined) {\n                        \n                        return\n                    } else if (attackingCardIndex === undefined) {\n                       \n                    }\n                    else {\n\n                        var attackingCardType = playerBField[attackingCardIndex].TypeText;\n                        var defendingCardWeakness = playerAField[defendingCardIndex].WeakAgainst;\n                        var defendingCardStrength = playerAField[defendingCardIndex].StrongAgainst;\n                        \n\n                        if (attackingCardType === defendingCardWeakness) {\n                            playerAField[defendingCardIndex].Health -= 10;\n                            playerBMana -= 9;\n                        } else if (attackingCardType === defendingCardStrength) {\n                            playerAField[defendingCardIndex].Health -= 3;\n                            playerBField[attackingCardIndex].Health -= 3;\n                            playerBMana -= 9;\n                        } else {\n                            playerAField[defendingCardIndex].Health -= 6;\n                            playerBMana -= 9;\n                        }\n\n                        if (playerAField[defendingCardIndex].Health <= 0) {\n                            var removedACard = playerAField.splice(defendingCardIndex, 1);\n                            playerAGraveyard.push(removedACard);\n                        }\n\n                        if (playerBField[attackingCardIndex].Health <= 0) {\n                            var removedBCard = playerBField.splice(attackingCardIndex, 1);\n                            playerBGraveyard.push(removedBCard);\n                        }\n\n                        window.attack()\n                        API.attackAMinion(playerBField, playerAField, playerBMana, playerAGraveyard, playerBGraveyard)\n                        \n                    }\n                }\n                else {\n                    //add some modal to say out of mana\n                    \n                    let modal = document.getElementById(\"myModalManaAttack\");\n                    setTimeout(function(){ modal.style.display = \"block\";}, 300);\n                    setTimeout(function(){ modal.style.display = \"none\"; }, 2500);\n                }\n            }\n        }\n\n    };\n\n    render() {\n        if (this.state.playerAChamp[0].Health <= 0 || (this.state.playerAField.length === 0 && this.state.playerAHand.length === 0)) {\n            return (\n                <GameOver value={this.state} winner={'playerB'} player1 ={this.state.player1name} player2 ={this.state.player2name}></GameOver>\n            )\n        } else if (this.state.playerBChamp[0].Health <= 0 || (this.state.playerBField.length === 0 && this.state.playerBHand.length === 0)) {\n            return (\n                <GameOver value={this.state} winner={'playerA'} player1 ={this.state.player1name} player2 ={this.state.player2name}></GameOver>\n            )\n        } else\n            return (\n\n                <DragDropContext onDragEnd={this.onDragEnd}>\n\n                    <div className=\"outerContainer\">\n\n                        <div className=\"containerA\">\n\n                            <div className=\"rowA\">\n\n                                <div className=\"playerNameA\">\n                                    {this.state.player2name}\n                                </div>\n\n                                <div className=\"playerManaA\">\n                                    {this.state.playerAMana}\n                                </div>\n\n                                <div className=\"endTurnA\" onClick={this.changeATurn}>\n                                    End Turn\n                                </div>\n\n                                <Droppable droppableId=\"playerChampionA\">\n                                    {(provided) => (\n                                        <div className=\"championA\" ref={provided.innerRef}>\n                                            {this.state.playerAChamp.map((champion) => (\n                                                <div\n                                                    className=\"playedChampionCard\"\n                                                    id={champion.id}\n                                                    key={champion.id}\n                                                >\n                                                    <p className=\"playedChampionHealth\">{champion.Health || 2}</p>\n                                                    <img className=\"playedChampionWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                    <img className=\"playedChampionStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                    <img className=\"playedChampionPortrait\" src={champion.Img} alt=\"\"></img>\n                                                </div>\n\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                                <Droppable droppableId=\"playerHandA\">\n                                    {(provided) => (\n                                        <div className=\"playerHandA\" ref={provided.innerRef}>\n                                            {this.state.playerAHand.map((minion, index) => (\n                                                <Draggable\n                                                    key={minion.id}\n                                                    draggableId={minion.id}\n                                                    index={index}>\n                                                    {(provided) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"minionHandCardA\"\n                                                            id={minion.id}\n                                                            key={minion.id}\n                                                        >\n                                                            <h3 className=\"MinionHandName\">{minion.Name || \"Minion\"}</h3>\n                                                            <p className=\"minionHandHealth\">{minion.Health || 2}</p>\n\n                                                            <div className=\"ability\">\n                                                                <span className=\"minionHandAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                <span className=\"minionHandAttack1Power\"><br></br>Dmg: {minion.Attack1Power}</span>\n                                                                <span className=\"minionHandAttack1Cost\">Cost: {minion.Attack1Cost}</span>\n                                                            </div>\n\n                                                            <img className=\"minionHandWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                            <img className=\"minionHandStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                            <img className=\"minionHandPortrait\" src={minion.Img} alt=\"\"></img>\n\n                                                        </div>\n\n\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n\n                                        </div>\n                                    )\n                                    }\n\n                                </Droppable>\n                            </div>\n                            <Droppable droppableId=\"fieldA\">\n                                {(provided) => (\n                                    <div className=\"fieldA\" ref={provided.innerRef}>\n                                        {this.state.playerAField.map((minion, index) => (\n                                            <Droppable droppableId={minion.id} key={minion.id}>\n                                                {(provided) => (\n                                                    <div className=\"droppableMinion\" ref={provided.innerRef} key={minion.id} >\n                                                        <Draggable\n                                                            key={minion.id}\n                                                            draggableId={minion.id}\n                                                            index={index}>\n                                                            {(provided) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                    className=\"minionFieldCardA\"\n                                                                    id={minion.id}\n                                                                    key={minion.id}\n                                                                >\n\n                                                                    <div className=\"innerA\">\n\n                                                                        <p className=\"minionFieldHealth\">{minion.Health || 2}</p>\n\n                                                                        <div className=\"abilityField\">\n                                                                            <span className=\"minionFieldAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                            <span className=\"minionFieldAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                                                                            <span className=\"minionFieldAttack1Cost\">{minion.Attack1Cost}</span>\n                                                                        </div>\n\n                                                                        <img className=\"minionFieldWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldPortrait\" src={minion.Img} alt=\"\"></img>\n                                                                    </div>\n\n                                                                </div>\n\n\n                                                            )}\n                                                        </Draggable>\n                                                        {provided.placeholder}\n                                                    </div>\n\n                                                )}\n                                            </Droppable>\n                                        ))}\n                                        {provided.placeholder}\n\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n\n                        </div>\n\n                        {/* --------------------------------------------------Turn Popup-------------------------------------------------------*/}\n                        <div id=\"myModal\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>{this.state.currentPlayerTurn + \"'s Turn\"}</p>\n                            </div>\n\n                        </div>\n\n                        <div id=\"myModalManaPlay\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>You need at least 10 mana to play a card</p>\n                            </div>\n\n                        </div>\n\n                        <div id=\"myModalManaAttack\" class=\"modal\">\n\n                            <div class=\"modal-content\">\n                                <p>You need at least 9 mana to attack a card</p>\n                            </div>\n\n                        </div>\n\n                         <div id=\"myModalQuit\" class=\"modal\">\n\n                        <div class=\"modal-content\">\n                                    <p>{\"Player Disconnected, heading to lobby\"}</p>\n                                </div>\n\n                            </div>\n\n\n                        <div className=\"containerB\">\n\n                            <Droppable droppableId=\"fieldB\">\n                                {(provided) => (\n                                    <div className=\"fieldB\" ref={provided.innerRef}>\n                                        {this.state.playerBField.map((minion, index) => (\n                                            <Droppable droppableId={minion.id} key={minion.id}>\n                                                {(provided) => (\n                                                    <div className=\"droppableMinion\" ref={provided.innerRef} key={minion.id}>\n                                                        <Draggable\n                                                            key={minion.id}\n                                                            draggableId={minion.id}\n                                                            index={index}\n                                                        >\n                                                            {(provided) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                    className=\"minionFieldCardB\"\n                                                                    id={minion.id}\n                                                                    key={minion.id}\n                                                                >\n                                                                    <div className=\"innerB\">\n\n                                                                        <p className=\"minionFieldHealth\">{minion.Health || 2}</p>\n\n                                                                        <div className=\"abilityField\">\n                                                                            <span className=\"minionFieldAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                            <span className=\"minionFieldAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                                                                            <span className=\"minionFieldAttack1Cost\">{minion.Attack1Cost}</span>\n                                                                        </div>\n\n                                                                        <img className=\"minionFieldWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                                        <img className=\"minionFieldPortrait\" src={minion.Img} alt=\"\"></img>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            )}\n                                                        </Draggable>\n                                                        {provided.placeholder}\n                                                    </div>\n                                                )}\n                                            </Droppable>\n                                        ))}\n                                        {provided.placeholder}\n\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n\n                            <div className=\"rowB\">\n\n                                <div className=\"endTurnB\" onClick={this.changeBTurn}>\n                                    End Turn\n                                </div>\n\n                                <div className=\"playerManaB\">\n                                    {this.state.playerBMana}\n                                </div>\n\n                                <div className=\"playerNameB\">\n                                    {this.state.player1name}\n                                </div>\n\n                                <Droppable droppableId=\"playerChampionB\">\n                                    {(provided) => (\n                                        <div className=\"championB\" ref={provided.innerRef}>\n                                            {this.state.playerBChamp.map((champion) => (\n                                                <div\n                                                    className=\"playedChampionCard\"\n                                                    id={champion.id}\n                                                    key={champion.id}\n                                                >\n                                                    <p className=\"playedChampionHealth\">{champion.Health || 2}</p>\n                                                    <img className=\"playedChampionWeakness\" src={champion.WeakAgainst} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                    <img className=\"playedChampionStrength\" src={champion.StrongAgainst} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                    <img className=\"playedChampionPortrait\" src={champion.Img} alt=\"\"></img>\n                                                </div>\n\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                                <Droppable droppableId=\"playerHandB\">\n                                    {(provided) => (\n                                        <div className=\"playerHandB\" ref={provided.innerRef}>\n                                            {this.state.playerBHand.map((minion, index) => (\n                                                <Draggable\n                                                    key={minion.id}\n                                                    draggableId={minion.id}\n                                                    index={index}\n                                                >\n                                                    {(provided) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className=\"minionHandCardB\"\n                                                            id={minion.id}\n                                                            key={minion.id}\n                                                        >\n                                                            <h3 className=\"MinionHandName\">{minion.Name || \"Minion\"}</h3>\n                                                            <p className=\"minionHandHealth\">{minion.Health || 2}</p>\n\n                                                            <div className=\"ability\">\n                                                                <span className=\"minionHandAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                                                                <span className=\"minionHandAttack1Power\"><br></br>Dmg: {minion.Attack1Power}</span>\n                                                                <span className=\"minionHandAttack1Cost\">Cost: {minion.Attack1Cost}</span>\n                                                            </div>\n\n                                                            <img className=\"minionHandWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                                                            <img className=\"minionHandStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                                                            <img className=\"minionHandPortrait\" src={minion.Img} alt=\"\"></img>\n\n                                                        </div>\n\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n\n                                        </div>\n                                    )\n                                    }\n                                </Droppable>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </DragDropContext>\n            )\n    }\n}\nexport default GameBoard;","import React, { Component } from \"react\";\nimport './draftMinion.css';\nimport minionsList from \"./minions\"\nimport DraftChamp from \"../draftChamp/draftChamp\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport GameBoard from \"../board/board\"\nimport API from '../../utils/API';\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n* Moves an item from one list to another list. this function is working as expected\n*/\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\n  const sourceClone = Array.from(source);\n\n  const destClone = Array.from(destination);\n\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nclass DraftMinion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minions: minionsList.minionsList,\n      player1deck: [],\n      player2deck: [],\n      player1champion: this.props.p1champ,\n      player2champion: this.props.p2champ,\n      player1Turn: true,\n      player2Turn: false,\n      champions: this.props.champions,\n      player1name: this.props.p1name,\n      player2name: this.props.p2name,\n      currentTurn: this.props.p1name\n    };\n\n    this.id2List = {\n      droppable: 'minions',\n      droppable2: 'player1deck',\n      droppable3: 'player2deck'\n    };\n\n  }\n\n  componentDidMount = () => {\n    API.joinGame(updates => {\n      if (updates.playerDisconnected === true){\n        let modal = document.getElementById(\"myModalQuit\");\n        setTimeout(function(){ modal.style.display = \"block\";}, 300);\n        \n        setTimeout(function(){window.location.reload()}, 3000)\n    }\n      if (updates.player1 && updates.player2) {\n        this.setState({\n          player1deck: updates.player1.minions || [],\n          player2deck: updates.player2.minions || [],\n          player1Turn: updates.player1.turn,\n          player2Turn: updates.player2.turn,\n          minions: updates.minions,\n          player1champion: updates.player1.champion,\n          player2champion: updates.player2.champion,\n          champions: updates.champions,\n          currentTurn: updates.currentTurn || this.props.p1name\n        })\n      }\n    })\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      \n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { items };\n\n      if (source.droppableId === 'droppable2') {\n        state = { selected: items };\n      }\n\n      this.setState(state);\n    } if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && this.state.player1deck.length > 8) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && this.state.player2deck.length > 8) {\n      \n      return;\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable2\" && (this.state.player1Turn)) {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      API.draft1Minion(result.droppable, result[destination.droppableId], this.state.player2name)\n    }\n\n    if (source.droppableId === 'droppable' && destination.droppableId === \"droppable3\" && (this.state.player2Turn)) {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      API.draft2Minion(result.droppable, result[destination.droppableId], this.state.player1name)\n    }\n\n  };\n\n  render() {\n    if (this.state.player1deck.length === 5 && this.state.player2deck.length === 5) {\n      return (\n        <GameBoard p1deck={this.state.player1deck} p2deck={this.state.player2deck} p1champ={this.state.player1champion} p2champ={this.state.player2champion} p1name={this.state.player1name} p2name={this.state.player2name}></GameBoard>\n      )\n    } else {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"container\">\n\n          <div className=\"row1\">\n\n            <div className=\"player2Name\">\n              <h1 className=\"headerText\">{this.state.player2name || \"Waiting for Opponent\"}</h1>\n              <h6 className=\"subText\">{this.state.player2champion[0].name}</h6>\n            </div>\n\n            <div className=\"minionHeader\">\n              <h1 className=\"headerText\">Choose your minions</h1>\n              <h3 className=\"headerText\">Current Turn: {this.state.currentTurn}</h3>\n            </div>\n\n            <div className=\"player1Name\">\n              <h1 className=\"headerText\">{this.state.player1name || \"Waiting for Opponent\"}</h1>\n              <h6 className=\"subText\">{this.state.player1champion[0].name}</h6>\n            </div>\n\n          </div>\n\n          <div id=\"myModalQuit\" class=\"modal\">\n\n            <div class=\"modal-content\">\n                <p>{\"Player Disconnected, heading to lobby\"}</p>\n            </div>\n\n          </div>\n\n          <div className=\"row2\">\n            <Droppable droppableId=\"droppable3\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef} className=\"chosenMinion\">\n                  <h3 className=\"chosenText\">Chosen Minions</h3>\n                  <h6 className=\"chosenText\">{this.state.player2deck.length}/5</h6>\n                  {this.state.player2deck.map((p2deck, index) => (\n                    <Draggable\n                      key={p2deck.id}\n                      draggableId={p2deck.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n\n                          className=\"chosenMinionCard\" id={p2deck.id} key={p2deck.id}\n                        >\n                          <p className=\"minionName\">{p2deck.Name}</p>\n                          <div>\n                            <img className=\"chosenMinionPortrait\" src={p2deck.Img} alt=\"\" width=\"60\" height=\"60\"></img>\n                          </div>\n                          <img className=\"chosenMinionWeakness\" src={p2deck.WeakAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                          <img className=\"minionType\" src={p2deck.Type} alt=\"\" width=\"42\" height=\"42\"></img>\n                          <img className=\"chosenMinionStrength\" src={p2deck.StrongAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <Droppable droppableId=\"droppable\">\n\n              {(provided) => (\n\n                <div className=\"minionContainer\" ref={provided.innerRef}>\n\n                  {this.state.minions.map((minion, index) => (\n                    <Draggable\n                      key={minion.id}\n                      draggableId={minion.id}\n                      index={index}>\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"minionCard\"\n                          id={minion.id}\n                          key={minion.id}\n                        >\n                          <h3 className=\"MinionName\">{minion.Name || \"Minion\"}</h3>\n                          <p className=\"minionHealth\">{minion.Health || 2}</p>\n\n                          <div className=\"ability\">\n                            <span className=\"minionAttack1\">{minion.Attack1Name || \"Ability 1\"}</span>\n                            <span className=\"minionAttack1Power\"><br></br>{minion.Attack1Power}</span>\n                            <span className=\"minionAttack1Cost\">{minion.Attack1Cost}</span>\n                          </div>\n\n                          <img className=\"minionCost\" src={minion.Type} alt=\"\" width=\"42\" height=\"42\"></img>\n                          <img className=\"minionWeakness\" src={minion.WeakAgainstImg} alt=\"\" width=\"42\" height=\"1\"></img>\n                          <img className=\"minionStrength\" src={minion.StrongAgainstImg} alt=\"\" width=\"5\" height=\"1\"></img>\n                          <img className=\"minionPortrait\" src={minion.Img} alt=\"\"></img>\n\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <Droppable droppableId=\"droppable2\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef} className=\"chosenMinion\">\n                  <h3 className=\"chosenText\">Chosen Minions</h3>\n                  <h6 className=\"chosenText\">{this.state.player1deck.length}/5</h6>\n                  {this.state.player1deck.map((p1deck, index) => (\n                    <Draggable\n                      key={p1deck.id}\n                      draggableId={p1deck.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n\n                          className=\"chosenMinionCard\" id={p1deck.id} key={p1deck.id}\n                        >\n                          <p className=\"minionName\">{p1deck.Name}</p>\n                          <div>\n                            <img className=\"chosenMinionPortrait\" src={p1deck.Img} alt=\"\" width=\"60\" height=\"60\"></img>\n                          </div>\n                          <img className=\"chosenMinionWeakness\" src={p1deck.WeakAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                          <img className=\"minionType\" src={p1deck.Type} alt=\"\" width=\"42\" height=\"42\"></img>\n                          <img className=\"chosenMinionStrength\" src={p1deck.StrongAgainstImg} alt=\"\" width=\"20\" height=\"20\"></img>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n          </div>\n\n        </div>\n\n      </DragDropContext>\n\n    )\n    } \n  }\n}\n\n\nexport default DraftMinion;","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport DraftMinion from \"./components/draftMinion/draftMinion\";\nimport DraftChamp from \"./components/draftChamp/draftChamp\";\nimport GameBoard from \"./components/board/board\";\nimport GameOver from \"./components/gameOver/gameOver\"\nimport Lobby from './components/lobby/lobby'\n\n\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>{\n\n       <Lobby></Lobby>\n\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n","var championList = [\n  {\n    \"id\": \"0\",\n    \"name\": \"Charizard\",\n    \"type\": \"../images/fireOrb.png\",\n    \"TypeText\": \"fire\",\n    \"Health\": 80,\n    \"WeakAgainstText\": \"water\",\n    \"StrongAgainstText\": \"grass\",\n    \"WeakAgainst\": \"../images/waterOrb.png\",\n    \"StrongAgainst\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Charizard.jpg\"\n  },\n  {\n    \"id\": \"1\",\n    \"name\": \"Blastoise\",\n    \"type\": \"../images/waterOrb.png\",\n    \"TypeText\": \"water\",\n    \"Health\": 80,\n    \"WeakAgainstText\": \"electric\",\n    \"StrongAgainstText\": \"dark\",\n    \"WeakAgainst\": \"../images/electricOrb.png\",\n    \"StrongAgainst\": \"../images/darkOrb.png\",\n    \"Img\": \"../images/Blastoise.jpg\"\n  },\n  {\n    \"id\": \"2\",\n    \"name\": \"Venusaur\",\n    \"type\": \"../images/grassOrb.png\",\n    \"TypeText\": \"grass\",\n    \"Health\": 80,\n    \"WeakAgainstText\": \"fire\",\n    \"StrongAgainstText\": \"water\",\n    \"WeakAgainst\": \"../images/fireOrb.png\",\n    \"StrongAgainst\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/Venasaur.png\"\n  },\n  {\n    \"id\": \"3\",\n    \"name\": \"Mewtwo\",\n    \"type\": \"../images/psychicOrb.png\",\n    \"TypeText\": \"psychic\",\n    \"Health\": 80,\n    \"WeakAgainstText\": \"dark\",\n    \"StrongAgainstText\": \"fighting\",\n    \"WeakAgainst\": \"../images/darkOrb.png\",\n    \"StrongAgainst\": \"../images/fightingOrb.png\",\n    \"Img\": \"../images/Mewtwo.jpg\"\n  },\n  {\n    \"id\": \"4\",\n    \"name\": \"Pikachu\",\n    \"type\": \"../images/electricOrb.png\",\n    \"TypeType\": \"electric\",\n    \"Health\": 80,\n    \"WeakAgainstText\": \"ground\",\n    \"StrongAgainstText\": \"water\",\n    \"WeakAgainst\": \"../images/groundOrb.png\",\n    \"StrongAgainst\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/pikachu.jpg\"\n  }\n]\nmodule.exports = {\n  championList: championList\n}","var minionsList = [\n  {\n    \"id\": \"0\",\n    \"Name\": \"Alakazam\",\n    \"Type\": \"../images/psychicOrb.png\",\n    \"TypeText\": \"psychic\",\n    \"Attack1Name\": \"Psychic\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Blast\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"dark\",\n    \"StrongAgainst\": \"fighting\",\n    \"WeakAgainstImg\": \"../images/darkOrb.png\",\n    \"StrongAgainstImg\": \"../images/fightingOrb.png\",\n    \"Img\": \"../images/Alakazam.png\"\n  },\n  {\n    \"id\": \"1\",\n    \"Name\": \"Arcanine\",\n    \"Type\": \"../images/fireOrb.png\",\n    \"TypeText\": \"fire\",\n    \"Attack1Name\": \"Fire Blast\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Superpower\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"water\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/waterOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Arcanine.jpg\"\n  },\n  {\n    \"id\": \"2\",\n    \"Name\": \"Articuno\",\n    \"Type\": \"../images/iceOrb.png\",\n    \"TypeText\": \"ice\",\n    \"Attack1Name\": \"Sky Attack\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Ice Beam\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"fire\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/fireOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Articuno.jpg\"\n  },\n  {\n    \"id\": \"22\",\n    \"Name\": \"Bellsprout\",\n    \"Type\": \"../images/grassOrb.png\",\n    \"TypeText\": \"grass\",\n    \"Attack1Name\": \"Razor Leaf\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Earthquake\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"fire\",\n    \"StrongAgainst\": \"water\",\n    \"WeakAgainstImg\": \"../images/fireOrb.png\",\n    \"StrongAgainstImg\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/bellsprout.png\"\n  },\n  {\n    \"id\": \"3\",\n    \"Name\": \"Chansey\",\n    \"Type\": \"../images/normalOrb.png\",\n    \"TypeText\": \"normal\",\n    \"Attack1Name\": \"Hyper Beam\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Double-Edge\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"none\",\n    \"StrongAgainst\": \"none\",\n    \"WeakAgainstImg\": \"none\",\n    \"StrongAgainstImg\": \"none\",\n    \"Img\": \"../images/Chansey.jpg\"\n  },\n  {\n    \"id\": \"29\",\n    \"Name\": \"Ditto\",\n    \"Type\": \"../images/normalOrb.png\",\n    \"TypeText\": \"normal\",\n    \"Attack1Name\": \"Transform\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Double-Edge\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"none\",\n    \"StrongAgainst\": \"none\",\n    \"WeakAgainstImg\": \"none\",\n    \"StrongAgainstImg\": \"none\",\n    \"Img\": \"../images/ditto.png\"\n  },\n  {\n    \"id\": \"19\",\n    \"Name\": \"Ekans\",\n    \"Type\": \"../images/poisonOrb.png\",\n    \"TypeText\": \"poison\",\n    \"Attack1Name\": \"Toxic\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Thunder\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"ground\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/groundOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Ekans.png\"\n  },\n  {\n    \"id\": \"24\",\n    \"Name\": \"Electabuzz\",\n    \"Type\": \"../images/electricOrb.png\",\n    \"TypeText\": \"electric\",\n    \"Attack1Name\": \"Thunder Punch\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Pay Day\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"ground\",\n    \"StrongAgainst\": \"water\",\n    \"WeakAgainstImg\": \"../images/groundOrb.png\",\n    \"StrongAgainstImg\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/electabuzz.jpg\"\n  },\n  {\n    \"id\": \"4\",\n    \"Name\": \"Flareon\",\n    \"Type\": \"../images/fireOrb.png\",\n    \"TypeText\": \"fire\",\n    \"Attack1Name\": \"Flare Blitz\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Fire Blast\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"water\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/waterOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Flareon.jpg\"\n  },\n  {\n    \"id\": \"5\",\n    \"Name\": \"Gengar\",\n    \"Type\": \"../images/ghostOrb.png\",\n    \"TypeText\": \"ghost\",\n    \"Attack1Name\": \"Dream Eater\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Shadow Ball\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"ghost\",\n    \"StrongAgainst\": \"psychic\",\n    \"WeakAgainstImg\": \"../images/ghostOrb.png\",\n    \"StrongAgainstImg\": \"../images/psychicOrb.png\",\n    \"Img\": \"../images/Gengar.png\"\n  },\n  {\n    \"id\": \"6\",\n    \"Name\": \"Gyarados\",\n    \"Type\": \"../images/waterOrb.png\",\n    \"TypeText\": \"water\",\n    \"Attack1Name\": \"Ice Beam\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Blizzard\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"grass\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/grassOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/gyrarados.jpeg\"\n  },\n  {\n    \"id\": \"25\",\n    \"Name\": \"Hitmonlee\",\n    \"Type\": \"../images/fightingOrb.png\",\n    \"TypeText\": \"fighting\",\n    \"Attack1Name\": \"High Jump Kick\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Earthquake\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"psychic\",\n    \"StrongAgainst\": \"ice\",\n    \"WeakAgainstImg\": \"../images/psychicOrb.png\",\n    \"StrongAgainstImg\": \"../images/iceOrb.png\",\n    \"Img\": \"../images/hitmonlee.jpg\"\n  },\n  {\n    \"id\": \"23\",\n    \"Name\": \"Jigglypuff\",\n    \"Type\": \"../images/normalOrb.png\",\n    \"TypeText\": \"normal\",\n    \"Attack1Name\": \"Tri Attack\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Body Slam\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"none\",\n    \"StrongAgainst\": \"none\",\n    \"WeakAgainstImg\": \"none\",\n    \"StrongAgainstImg\": \"none\",\n    \"Img\": \"../images/jigglypuff.png\"\n  },\n  {\n    \"id\": \"7\",\n    \"Name\": \"Jolteon\",\n    \"Type\": \"../images/electricOrb.png\",\n    \"TypeText\": \"electric\",\n    \"Attack1Name\": \"Thunder\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Pay Day\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"ground\",\n    \"StrongAgainst\": \"water\",\n    \"WeakAgainstImg\": \"../images/groundOrb.png\",\n    \"StrongAgainstImg\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/Jolteon.jpg\"\n  },\n  {\n    \"id\": \"26\",\n    \"Name\": \"Jynx\",\n    \"Type\": \"../images/iceOrb.png\",\n    \"TypeText\": \"ice\",\n    \"Attack1Name\": \"Blizzard\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Ice Beam\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"fire\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/fireOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/jynx.png\"\n  },\n  {\n    \"id\": \"8\",\n    \"Name\": \"Lapras\",\n    \"Type\": \"../images/waterOrb.png\",\n    \"TypeText\": \"water\",\n    \"Attack1Name\": \"Megahorn\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Hydro Pump\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"grass\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/grassOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/Lapras.png\"\n  },\n  {\n    \"id\": \"9\",\n    \"Name\": \"Machamp\",\n    \"Type\": \"../images/fightingOrb.png\",\n    \"TypeText\": \"fighting\",\n    \"Attack1Name\": \"Bulk Up\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Earthquake\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"psychic\",\n    \"StrongAgainst\": \"ice\",\n    \"WeakAgainstImg\": \"../images/psychicOrb.png\",\n    \"StrongAgainstImg\": \"../images/iceOrb.png\",\n    \"Img\": \"../images/machamp.jpg\"\n  },\n  {\n    \"id\": \"28\",\n    \"Name\": \"Magnemite\",\n    \"Type\": \"../images/electricOrb.png\",\n    \"TypeText\": \"electric\",\n    \"Attack1Name\": \"Thunderbolt\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Pay Day\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"flying\",\n    \"StrongAgainst\": \"water\",\n    \"WeakAgainstImg\": \"../images/flyingOrb.png\",\n    \"StrongAgainstImg\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/magnemite.png\"\n  },\n  {\n    \"id\": \"10\",\n    \"Name\": \"Marowak\",\n    \"Type\": \"../images/groundOrb.png\",\n    \"TypeText\": \"ground\",\n    \"Attack1Name\": \"Bonemerang\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Headbutt\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"water\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/waterOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/Marowak.jpg\"\n  },\n  {\n    \"id\": \"11\",\n    \"Name\": \"Moltres\",\n    \"Type\": \"../images/flyingOrb.png\",\n    \"TypeText\": \"flying\",\n    \"Attack1Name\": \"Sky Attack\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Heat Wave\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"ice\",\n    \"StrongAgainst\": \"fighting\",\n    \"WeakAgainstImg\": \"../images/iceOrb.png\",\n    \"StrongAgainstImg\": \"../images/fightingOrb.png\",\n    \"Img\": \"../images/Moltres.jpg\"\n  },\n  {\n    \"id\": \"12\",\n    \"Name\": \"Nidoqueen\",\n    \"Type\": \"../images/poisonOrb.png\",\n    \"TypeText\": \"poison\",\n    \"Attack1Name\": \"Sludge Bomb\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Shadow Ball\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"psychic\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/psychicOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/nidoqueen.jpg\"\n  },\n  {\n    \"id\": \"13\",\n    \"Name\": \"Ninetails\",\n    \"Type\": \"../images/fireOrb.png\",\n    \"TypeText\": \"fire\",\n    \"Attack1Name\": \"Fire Blast\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Flamethrower\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"water\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/waterOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Ninetails.png\"\n  },\n  {\n    \"id\": \"14\",\n    \"Name\": \"Poliwhirl\",\n    \"Type\": \"../images/waterOrb.png\",\n    \"TypeText\": \"water\",\n    \"Attack1Name\": \"Hydro Pump\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Bubble Beam\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"electric\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/electricOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/Poliwhirl.jpg\"\n  },\n  {\n    \"id\": \"15\",\n    \"Name\": \"Rapidash\",\n    \"Type\": \"../images/fireOrb.png\",\n    \"TypeText\": \"fire\",\n    \"Attack1Name\": \"Fire Blast\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Flare Blitz\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"water\",\n    \"StrongAgainst\": \"grass\",\n    \"WeakAgainstImg\": \"../images/waterOrb.png\",\n    \"StrongAgainstImg\": \"../images/grassOrb.png\",\n    \"Img\": \"../images/Rapidash.jpg\"\n  },\n  {\n    \"id\": \"27\",\n    \"Name\": \"Sandslash\",\n    \"Type\": \"../images/groundOrb.png\",\n    \"TypeText\": \"ground\",\n    \"Attack1Name\": \"Earthquake\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Headbutt\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"water\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/waterOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/sandslash.jpg\"\n  },\n  {\n    \"id\": \"20\",\n    \"Name\": \"Slowpoke\",\n    \"Type\": \"../images/waterOrb.png\",\n    \"TypeText\": \"water\",\n    \"Attack1Name\": \"Surf\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Blizzard\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"grass\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/grassOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/slowpoke.jpeg\"\n  },\n  {\n    \"id\": \"16\",\n    \"Name\": \"Snorlax\",\n    \"Type\": \"../images/normalOrb.png\",\n    \"TypeText\": \"normal\",\n    \"Attack1Name\": \"Pay Day\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Body Slam\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"none\",\n    \"StrongAgainst\": \"none\",\n    \"WeakAgainstImg\": \"none\",\n    \"StrongAgainstImg\": \"none\",\n    \"Img\": \"../images/Snorlax.jpg\"\n  },\n  {\n    \"id\": \"21\",\n    \"Name\": \"Tangela\",\n    \"Type\": \"../images/grassOrb.png\",\n    \"TypeText\": \"grass\",\n    \"Attack1Name\": \"Solar Beam\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Earthquake\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"fire\",\n    \"StrongAgainst\": \"water\",\n    \"WeakAgainstImg\": \"../images/fireOrb.png\",\n    \"StrongAgainstImg\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/tangela.jpg\"\n  },\n  {\n    \"id\": \"17\",\n    \"Name\": \"Vaporeon\",\n    \"Type\": \"../images/waterOrb.png\",\n    \"TypeText\": \"water\",\n    \"Attack1Name\": \"Surf\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Blizzard\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"grass\",\n    \"StrongAgainst\": \"fire\",\n    \"WeakAgainstImg\": \"../images/grassOrb.png\",\n    \"StrongAgainstImg\": \"../images/fireOrb.png\",\n    \"Img\": \"../images/vaporeon.jpg\"\n  },\n  {\n    \"id\": \"18\",\n    \"Name\": \"Zapdos\",\n    \"Type\": \"../images/electricOrb.png\",\n    \"TypeText\": \"electric\",\n    \"Attack1Name\": \"Sky Attack\",\n    \"Attack1Power\": 6,\n    \"Attack1Cost\": 9,\n    \"Attack2Name\": \"Thunder\",\n    \"Attack2Power\": 9,\n    \"Attack2Cost\": 13,\n    \"Health\": 20,\n    \"WeakAgainst\": \"ground\",\n    \"StrongAgainst\": \"water\",\n    \"WeakAgainstImg\": \"../images/groundOrb.png\",\n    \"StrongAgainstImg\": \"../images/waterOrb.png\",\n    \"Img\": \"../images/Zapdos.jpg\"\n  }\n  \n  \n  \n  \n  \n  \n\n]\nmodule.exports = {\n  minionsList: minionsList\n}"],"sourceRoot":""}